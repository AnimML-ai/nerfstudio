Search.setIndex({"docnames": ["developer_guides/config", "developer_guides/debugging_tools/benchmarking", "developer_guides/debugging_tools/index", "developer_guides/debugging_tools/local_logger", "developer_guides/debugging_tools/profiling", "developer_guides/new_methods", "developer_guides/pipelines/datamanagers", "developer_guides/pipelines/dataparsers", "developer_guides/pipelines/fields", "developer_guides/pipelines/index", "developer_guides/pipelines/models", "developer_guides/pipelines/pipelines", "developer_guides/viewer/custom_gui", "developer_guides/viewer/index", "developer_guides/viewer/local_viewer", "developer_guides/viewer/viewer_control", "extensions/blender_addon", "extensions/sdfstudio", "extensions/unreal_engine", "index", "nerfology/methods/generfacto", "nerfology/methods/igs2gs", "nerfology/methods/in2n", "nerfology/methods/index", "nerfology/methods/instant_ngp", "nerfology/methods/kplanes", "nerfology/methods/lerf", "nerfology/methods/mipnerf", "nerfology/methods/nerf", "nerfology/methods/nerfacto", "nerfology/methods/nerfbusters", "nerfology/methods/nerfplayer", "nerfology/methods/pynerf", "nerfology/methods/tensorf", "nerfology/methods/tetranerf", "nerfology/model_components/index", "nerfology/model_components/visualize_cameras", "nerfology/model_components/visualize_encoders", "nerfology/model_components/visualize_samplers", "nerfology/model_components/visualize_samples", "nerfology/model_components/visualize_spatial_distortions", "quickstart/custom_dataset", "quickstart/data_conventions", "quickstart/export_geometry", "quickstart/first_nerf", "quickstart/installation", "quickstart/viewer_quickstart", "reference/api/cameras", "reference/api/config", "reference/api/data/datamanagers", "reference/api/data/dataparsers", "reference/api/data/datasets", "reference/api/data/index", "reference/api/data/utils", "reference/api/field_components/embeddings", "reference/api/field_components/encodings", "reference/api/field_components/field_heads", "reference/api/field_components/index", "reference/api/field_components/mlp", "reference/api/field_components/spatial_distortions", "reference/api/fields", "reference/api/index", "reference/api/model_components/index", "reference/api/model_components/losses", "reference/api/model_components/ray_sampler", "reference/api/model_components/renderers", "reference/api/models", "reference/api/optimizers", "reference/api/plugins", "reference/api/utils/colormaps", "reference/api/utils/colors", "reference/api/utils/index", "reference/api/utils/math", "reference/api/utils/tensor_dataclass", "reference/api/viewer", "reference/cli/index", "reference/cli/ns_download_data", "reference/cli/ns_eval", "reference/cli/ns_export", "reference/cli/ns_install_cli", "reference/cli/ns_process_data", "reference/cli/ns_render", "reference/cli/ns_train", "reference/cli/ns_viewer", "reference/contributing"], "filenames": ["developer_guides/config.md", "developer_guides/debugging_tools/benchmarking.md", "developer_guides/debugging_tools/index.rst", "developer_guides/debugging_tools/local_logger.md", "developer_guides/debugging_tools/profiling.md", "developer_guides/new_methods.md", "developer_guides/pipelines/datamanagers.md", "developer_guides/pipelines/dataparsers.md", "developer_guides/pipelines/fields.md", "developer_guides/pipelines/index.rst", "developer_guides/pipelines/models.md", "developer_guides/pipelines/pipelines.md", "developer_guides/viewer/custom_gui.md", "developer_guides/viewer/index.md", "developer_guides/viewer/local_viewer.md", "developer_guides/viewer/viewer_control.md", "extensions/blender_addon.md", "extensions/sdfstudio.md", "extensions/unreal_engine.md", "index.md", "nerfology/methods/generfacto.md", "nerfology/methods/igs2gs.md", "nerfology/methods/in2n.md", "nerfology/methods/index.md", "nerfology/methods/instant_ngp.md", "nerfology/methods/kplanes.md", "nerfology/methods/lerf.md", "nerfology/methods/mipnerf.md", "nerfology/methods/nerf.md", "nerfology/methods/nerfacto.md", "nerfology/methods/nerfbusters.md", "nerfology/methods/nerfplayer.md", "nerfology/methods/pynerf.md", "nerfology/methods/tensorf.md", "nerfology/methods/tetranerf.md", "nerfology/model_components/index.md", "nerfology/model_components/visualize_cameras.ipynb", "nerfology/model_components/visualize_encoders.ipynb", "nerfology/model_components/visualize_samplers.ipynb", "nerfology/model_components/visualize_samples.ipynb", "nerfology/model_components/visualize_spatial_distortions.ipynb", "quickstart/custom_dataset.md", "quickstart/data_conventions.md", "quickstart/export_geometry.md", "quickstart/first_nerf.md", "quickstart/installation.md", "quickstart/viewer_quickstart.rst", "reference/api/cameras.rst", "reference/api/config.rst", "reference/api/data/datamanagers.rst", "reference/api/data/dataparsers.rst", "reference/api/data/datasets.rst", "reference/api/data/index.rst", "reference/api/data/utils.rst", "reference/api/field_components/embeddings.rst", "reference/api/field_components/encodings.rst", "reference/api/field_components/field_heads.rst", "reference/api/field_components/index.rst", "reference/api/field_components/mlp.rst", "reference/api/field_components/spatial_distortions.rst", "reference/api/fields.rst", "reference/api/index.rst", "reference/api/model_components/index.rst", "reference/api/model_components/losses.rst", "reference/api/model_components/ray_sampler.rst", "reference/api/model_components/renderers.rst", "reference/api/models.rst", "reference/api/optimizers.rst", "reference/api/plugins.rst", "reference/api/utils/colormaps.rst", "reference/api/utils/colors.rst", "reference/api/utils/index.rst", "reference/api/utils/math.rst", "reference/api/utils/tensor_dataclass.rst", "reference/api/viewer.rst", "reference/cli/index.md", "reference/cli/ns_download_data.md", "reference/cli/ns_eval.md", "reference/cli/ns_export.md", "reference/cli/ns_install_cli.md", "reference/cli/ns_process_data.md", "reference/cli/ns_render.md", "reference/cli/ns_train.md", "reference/cli/ns_viewer.md", "reference/contributing.md"], "titles": ["Customizable configs", "Benchmarking workflow", "Debugging tools", "Local writer", "Code profiling support", "Adding a New Method", "DataManagers", "DataParsers", "Fields", "Pipelines overview", "Models", "Pipelines", "Custom GUI", "Viewer", "Local Server", "Python Viewer Control", "Blender VFX add-on", "SDFStudio", "Exporting to Unreal Engine", "Contents", "Generfacto", "Instruct-GS2GS", "Instruct-NeRF2NeRF", "Methods", "Instant-NGP", "K-Planes", "LERF", "Mip-NeRF", "NeRF", "Nerfacto", "Nerfbusters", "NeRFPlayer", "PyNeRF", "TensoRF", "Tetra-NeRF", "Model components", "Camera Models", "Field Encoders", "Ray Samplers", "Sample Representation", "Spatial Distortions", "Using custom data", "Data conventions", "Export geometry", "Training your first model", "Installation", "Using the viewer", "Cameras", "Configs", "Datamanagers", "Data Parsers", "Datasets", "Data", "Utils", "Embeddings", "Encodings", "Field Heads", "Field Modules", "MLP", "Spatial Distortions", "Fields", "API", "Model components", "Losses", "Ray Sampler", "Renderers", "Models", "Engine", "Plugins", "Colormaps", "Colors", "Utils", "Math", "TensorDataclass", "Viewer", "CLI", "ns-download-data", "ns-eval", "ns-export", "ns-install-cli", "ns-process-data", "ns-render", "ns-train", "ns-viewer", "Contributing"], "terms": {"our": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 19, 20, 21, 24, 29, 30, 41, 42, 43, 44, 46, 47, 49, 50, 53, 84], "dataclass": [0, 3, 5, 6, 7, 8, 10, 50, 52, 73], "allow": [0, 16, 19, 21, 22, 26, 29, 44, 50, 52, 53, 55, 68, 72, 73, 84], "you": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 28, 29, 32, 34, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 73, 75, 76, 78, 80, 82, 83, 84], "easili": [0, 3, 10, 19, 25, 32], "plug": [0, 7], "differ": [0, 8, 10, 16, 21, 24, 25, 28, 32, 34, 38, 40, 41, 44, 45, 47, 54, 55, 66, 82], "permut": 0, "model": [0, 2, 7, 8, 9, 11, 12, 15, 19, 20, 21, 22, 23, 25, 26, 29, 31, 34, 41, 42, 43, 45, 46, 47, 49, 50, 51, 53, 60, 61, 63, 64, 67, 72, 75, 78, 80, 82, 84], "dataload": [0, 6, 7, 25, 49, 61, 67], "modul": [0, 4, 6, 8, 10, 11, 12, 14, 15, 19, 47, 49, 54, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68], "etc": [0, 41, 46, 49, 53, 66, 81, 84], "all": [0, 1, 3, 4, 5, 7, 8, 11, 12, 16, 19, 21, 24, 28, 36, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 63, 64, 66, 67, 68, 72, 73, 74, 75, 76, 80, 81, 82, 83, 84], "paramet": [0, 3, 10, 12, 16, 21, 24, 39, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 80, 82], "type": [0, 3, 4, 5, 6, 7, 8, 9, 10, 16, 25, 26, 28, 32, 36, 41, 42, 45, 47, 48, 49, 50, 52, 53, 54, 56, 58, 59, 60, 61, 63, 64, 66, 67, 69, 72, 73, 74, 80, 83, 84], "support": [0, 2, 5, 12, 15, 16, 17, 18, 21, 23, 25, 26, 28, 40, 41, 42, 43, 44, 45, 47, 49, 53, 55, 58, 84], "tyro": 0, "basic": [0, 19, 38, 48, 49, 50, 66, 67], "reusabl": 0, "can": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 55, 58, 64, 66, 67, 75, 76, 80, 82, 84], "found": [0, 20, 21, 22, 26, 28, 29, 31, 34, 41, 45, 80], "nerfstudio": [0, 1, 3, 4, 7, 12, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 80, 82, 84], "base_config": [0, 3, 48], "py": [0, 3, 4, 5, 23, 41, 43, 45, 47, 50, 53, 63, 72, 75, 84], "The": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 60, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 76, 78, 80, 81, 83, 84], "class": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 19, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74], "bottom": [0, 41, 44, 48, 80], "file": [0, 1, 4, 15, 16, 18, 23, 41, 42, 43, 44, 45, 48, 50, 51, 53, 67, 75, 77, 78, 80, 81, 83, 84], "i": [0, 1, 3, 4, 5, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 58, 59, 60, 63, 64, 65, 66, 67, 72, 73, 74, 78, 80, 82, 83, 84], "upper": [0, 55, 63], "most": [0, 6, 8, 10, 11, 24, 28, 29, 32, 35, 36, 38, 41, 44, 67], "level": [0, 10, 24, 29, 37, 41, 55, 56, 57, 58, 60, 66, 72, 78], "store": [0, 1, 4, 7, 12, 18, 24, 30, 41, 49, 50, 64, 72], "sub": [0, 50], "need": [0, 1, 4, 7, 8, 9, 10, 11, 12, 15, 16, 18, 21, 26, 28, 29, 36, 38, 41, 44, 45, 46, 47, 49, 50, 55, 56, 66, 84], "get": [0, 11, 14, 16, 19, 21, 34, 35, 41, 44, 45, 47, 49, 53, 55, 58, 66, 74], "start": [0, 1, 8, 10, 13, 14, 15, 16, 19, 21, 22, 35, 36, 38, 39, 40, 41, 44, 45, 47, 61, 63, 66, 72, 78, 83], "train": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 42, 43, 45, 47, 48, 49, 50, 53, 61, 63, 64, 66, 67, 68, 72, 75, 78, 80, 81, 83], "brows": 0, "thi": [0, 1, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 59, 60, 63, 64, 65, 66, 67, 68, 72, 73, 80, 83, 84], "read": [0, 12, 40, 44, 47, 50, 51, 53], "attribut": [0, 3, 12, 48, 49, 67], "annot": [0, 1, 50], "what": [0, 1, 9, 12, 19, 28, 45], "ar": [0, 1, 4, 5, 7, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 63, 64, 65, 66, 69, 72, 73, 75, 76, 80, 81, 82, 83, 84], "avail": [0, 1, 12, 13, 23, 41, 44, 45, 48, 55, 58, 68, 82, 83], "each": [0, 1, 6, 8, 10, 16, 19, 20, 21, 22, 24, 25, 26, 28, 29, 31, 36, 38, 40, 41, 42, 44, 47, 49, 50, 52, 53, 55, 58, 61, 63, 64, 65, 72, 75, 78, 80, 81, 84], "specifi": [0, 1, 3, 4, 5, 6, 7, 10, 16, 20, 21, 41, 42, 44, 46, 47, 48, 49, 50, 52, 59, 65, 66, 67, 73, 74, 80, 81, 82, 83], "If": [0, 1, 3, 4, 5, 7, 10, 14, 16, 17, 19, 20, 23, 28, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 59, 65, 67, 69, 74, 75, 76, 78, 80, 81, 82, 83, 84], "interest": [0, 7, 16, 19, 39, 50, 76], "brand": [0, 19], "data": [0, 1, 4, 5, 6, 7, 8, 9, 11, 18, 21, 25, 29, 30, 32, 39, 40, 44, 45, 47, 49, 51, 61, 63, 66, 67, 73, 75, 81, 82], "format": [0, 1, 7, 10, 16, 18, 41, 47, 48, 50, 75, 76, 80, 81, 83, 84], "correspond": [0, 1, 6, 42, 44, 47, 55, 63, 66, 67], "associ": [0, 8, 10, 28, 31, 36, 38, 46, 47], "want": [0, 1, 3, 4, 5, 8, 9, 10, 14, 15, 16, 19, 20, 23, 38, 43, 44, 45, 48, 49, 80, 83, 84], "expos": [0, 74], "configur": [0, 3, 4, 6, 10, 16, 25, 32, 41, 44, 47, 48, 49, 52, 55, 58, 60, 66, 67, 68, 83], "let": [0, 6, 8, 9, 10, 19, 46], "": [0, 1, 4, 6, 8, 9, 10, 11, 12, 13, 16, 19, 21, 23, 24, 28, 39, 41, 44, 45, 47, 48, 49, 50, 52, 53, 61, 63, 67, 72, 84], "sai": [0, 1, 8, 9, 41, 43], "call": [0, 1, 3, 8, 12, 15, 47, 49, 54, 55, 63, 65, 66, 67, 74, 80], "nerfacto": [0, 1, 4, 10, 18, 19, 23, 24, 31, 41, 42, 43, 44, 61, 66, 82], "extend": [0, 5, 25, 38, 41], "describ": [0, 8, 9, 10, 19, 23, 24, 28, 36, 38, 47, 55, 63, 72], "here": [0, 4, 5, 6, 7, 9, 10, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 31, 34, 38, 41, 42, 43, 44, 45, 49, 50, 53, 63, 72, 75, 84], "befor": [0, 4, 16, 45, 47, 48, 49, 53, 67], "definit": [0, 47], "defin": [0, 1, 3, 4, 12, 15, 21, 38, 39, 40, 42, 45, 48, 49, 53, 56], "actual": [0, 7, 16, 45, 48, 49, 83], "nerfactomodelconfig": [0, 10, 66], "which": [0, 1, 7, 8, 10, 12, 13, 15, 16, 18, 20, 21, 22, 23, 24, 25, 28, 30, 32, 33, 34, 36, 38, 39, 41, 44, 45, 47, 48, 49, 50, 52, 53, 55, 60, 64, 65, 66, 67, 72, 74, 83], "point": [0, 5, 8, 10, 15, 16, 28, 31, 32, 34, 38, 40, 41, 42, 47, 48, 52, 53, 55, 60, 64, 66, 74, 78, 80], "nerfactomodel": [0, 10], "make": [0, 1, 4, 7, 10, 16, 21, 28, 29, 34, 36, 38, 41, 45, 46, 49, 80, 81, 83, 84], "sure": [0, 34, 45, 80, 81, 84], "wrap": [0, 3, 48], "_target": [0, 3, 6, 7, 10, 47, 48, 49, 50, 52, 60, 66, 67], "field": [0, 6, 7, 9, 10, 12, 16, 19, 25, 26, 27, 30, 31, 32, 33, 34, 35, 38, 42, 47, 50, 53, 61, 63, 64, 65, 66, 73, 74], "shown": [0, 7, 24, 46, 68], "below": [0, 3, 7, 9, 20, 38, 40, 41, 43, 44, 45, 46, 53, 80, 84], "enabl": [0, 3, 4, 5, 8, 16, 19, 21, 22, 24, 26, 30, 32, 41, 45, 47, 48, 61, 80], "auto": [0, 41, 48], "complet": [0, 28, 41, 45, 48, 75, 79, 82, 83], "pass": [0, 1, 9, 12, 15, 29, 34, 49, 53, 55, 64, 84], "modelconfig": [0, 10, 61, 66], "default_factori": [0, 6, 7, 10], "lambda": [0, 6, 7, 10, 64, 74], "arg": [0, 7, 8, 10, 11, 44, 45, 47, 50, 59, 64, 65, 67, 82], "instanti": [0, 6, 7, 10, 15, 28, 48, 49, 50, 52, 54, 60, 66, 67], "same": [0, 1, 4, 5, 10, 21, 27, 41, 42, 45, 46, 47, 48, 51, 52, 53, 64, 65, 73, 78, 80], "logic": [0, 6, 84], "appli": [0, 7, 10, 12, 16, 21, 41, 44, 47, 50, 55, 59, 60, 63, 69, 81], "other": [0, 1, 5, 6, 7, 10, 16, 19, 23, 24, 28, 30, 32, 38, 41, 42, 44, 45, 46, 47, 50, 63, 67, 72, 74, 75, 81], "custom": [0, 3, 8, 9, 13, 19, 44, 45, 46, 53, 66, 68, 78, 84], "For": [0, 1, 4, 7, 8, 9, 12, 16, 21, 22, 23, 25, 26, 28, 30, 34, 35, 38, 41, 42, 44, 45, 46, 55, 78, 80, 82, 84], "more": [0, 2, 5, 6, 8, 10, 12, 15, 17, 19, 21, 22, 23, 25, 26, 28, 29, 30, 36, 38, 41, 44, 45, 46, 47, 49, 52, 55, 63, 69, 72, 75, 80, 84], "exampl": [0, 1, 5, 8, 9, 15, 22, 23, 26, 38, 41, 43, 44, 45, 46, 47, 53, 63, 65, 73, 80], "datapars": [0, 6, 9, 32, 44, 47, 49, 50, 51, 61, 82], "nerfstudio_datapars": [0, 49, 50], "datamanag": [0, 7, 9, 11, 44, 50, 52, 61], "how": [0, 3, 5, 6, 7, 9, 10, 19, 24, 25, 28, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 57, 60, 66, 67, 78, 80, 81, 84], "follow": [0, 1, 5, 6, 8, 9, 12, 13, 16, 18, 20, 21, 23, 24, 28, 29, 34, 39, 40, 41, 42, 43, 44, 45, 46, 47, 59, 80, 84], "pleas": [0, 1, 19, 23, 30, 31, 41, 45, 84], "refer": [0, 12, 16, 19, 23, 41, 52, 67, 84], "pipelin": [0, 2, 5, 12, 15, 19, 20, 24, 34, 43, 44, 61, 67], "overview": [0, 19, 46], "have": [0, 1, 4, 6, 7, 8, 10, 11, 12, 13, 16, 19, 21, 24, 28, 29, 35, 36, 38, 40, 41, 42, 44, 45, 47, 49, 50, 66, 72, 73, 80, 81, 84], "method_config": [0, 5, 68], "where": [0, 1, 5, 7, 8, 9, 13, 16, 19, 21, 24, 25, 30, 38, 39, 40, 41, 42, 44, 45, 47, 49, 50, 51, 55, 60, 63, 65, 66, 67, 72, 84], "implement": [0, 4, 6, 7, 8, 17, 19, 24, 28, 29, 30, 34, 36, 37, 42, 44, 49, 52, 53, 55, 58, 60, 63, 66, 67, 72], "hous": 0, "we": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 55, 59, 65, 66, 67, 75, 82, 84], "construct": [0, 16, 19, 21, 29, 41, 52, 55, 72], "variou": [0, 7, 22, 23, 28, 41, 84], "exist": [0, 19, 29, 30, 40, 41, 46, 49, 54, 60, 64, 75, 84], "default": [0, 1, 3, 4, 7, 14, 16, 20, 25, 29, 32, 41, 42, 44, 45, 46, 47, 48, 49, 50, 53, 56, 59, 60, 64, 69, 74, 76, 77, 78, 79, 80, 81, 82, 83], "instanc": [0, 1, 4, 6, 12, 15, 47, 49, 52], "ha": [0, 9, 11, 16, 21, 22, 24, 28, 29, 38, 41, 42, 48, 49, 50, 52, 60, 64, 80, 83], "an": [0, 1, 4, 7, 9, 15, 16, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 34, 36, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 52, 53, 55, 60, 66, 67, 72, 74, 80, 83, 84], "overrid": [0, 5, 45, 55, 58, 81], "optim": [0, 6, 10, 21, 22, 24, 28, 29, 33, 37, 38, 41, 49, 61, 66], "appropri": [0, 41], "method_nam": [0, 1, 3, 5, 23, 67], "vanillapipelineconfig": [0, 67], "eval_num_rays_per_chunk": [0, 61, 66], "1": [0, 1, 4, 5, 6, 7, 8, 10, 12, 15, 16, 20, 21, 24, 29, 34, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 59, 60, 63, 64, 65, 66, 67, 69, 72, 73, 74, 78, 80, 81, 83], "14": [0, 26, 28, 41, 63, 80], "proposal_network": 0, "adamoptimizerconfig": [0, 61, 67], "lr": [0, 61, 67], "1e": [0, 7, 64, 67, 69, 72], "2": [0, 1, 21, 25, 29, 34, 36, 37, 38, 39, 40, 41, 44, 45, 47, 49, 50, 52, 53, 55, 58, 59, 60, 64, 66, 73, 78, 80], "ep": [0, 47, 61, 64, 67, 69, 72], "15": [0, 26, 40, 41, 45, 60, 80], "schedul": [0, 24, 47, 61, 64], "none": [0, 7, 8, 10, 12, 15, 36, 37, 38, 39, 40, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 73, 74, 77, 78, 80, 81, 83], "after": [0, 5, 6, 12, 16, 25, 26, 41, 44, 45, 47, 49, 63, 64, 67, 80, 82], "place": [0, 3, 16, 19, 38, 41, 42, 47, 73], "your": [0, 1, 3, 4, 5, 10, 11, 12, 13, 14, 16, 17, 19, 21, 32, 40, 42, 45, 46, 49, 75, 82, 84], "dictionari": [0, 6, 7, 9, 10, 29, 47, 49, 50, 51, 66, 67, 73], "provid": [0, 2, 4, 7, 10, 12, 19, 20, 22, 23, 24, 25, 26, 28, 29, 31, 32, 34, 41, 42, 44, 45, 47, 48, 50, 55, 64, 65, 66, 67, 74, 75], "descript": [0, 5, 10, 19, 21, 22, 23, 25, 26, 29, 31, 32, 34, 36, 39, 41, 51, 57, 61, 68, 75], "top": [0, 4, 10, 17, 28, 41, 42, 80, 84], "often": [0, 5, 10, 22, 38, 41, 53, 67, 81], "time": [0, 3, 4, 9, 13, 16, 20, 22, 24, 25, 26, 32, 33, 41, 44, 45, 46, 47, 48, 49, 50, 53, 55, 60, 61, 64, 66, 72, 80], "just": [0, 15, 19, 22, 24, 41, 49], "plai": [0, 7, 16, 44], "without": [0, 3, 12, 26, 44, 48, 65, 83], "one": [0, 12, 19, 22, 29, 30, 33, 37, 41, 42, 46, 47, 55, 64, 67], "do": [0, 5, 7, 11, 15, 16, 19, 20, 23, 25, 28, 30, 38, 41, 43, 44, 45, 46, 47, 49, 52, 54, 80, 84], "so": [0, 8, 10, 12, 14, 16, 19, 24, 41, 44, 46, 47, 49, 50, 63, 80], "via": [0, 3, 4, 13, 19, 21, 22, 24, 32, 39, 69], "showcas": 0, "some": [0, 3, 4, 7, 8, 12, 19, 21, 22, 24, 28, 38, 40, 41, 44, 45, 47, 50, 52, 66, 77], "us": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 55, 58, 59, 60, 64, 65, 66, 67, 68, 69, 72, 75, 76, 78, 80, 81, 82, 83, 84], "command": [0, 3, 16, 18, 20, 21, 32, 41, 43, 44, 46, 68, 82, 84], "list": [0, 1, 3, 7, 10, 16, 19, 23, 31, 44, 45, 47, 48, 49, 50, 51, 52, 53, 64, 66, 67, 70, 74, 82], "out": [0, 4, 7, 8, 10, 19, 20, 23, 41, 42, 44, 45, 47, 50, 75, 78, 84], "n": [0, 3, 4, 5, 10, 14, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 41, 43, 44, 45, 46, 50, 52, 55, 68, 72, 75, 84], "help": [0, 1, 10, 12, 16, 19, 21, 22, 23, 24, 26, 29, 30, 31, 38, 41, 43, 44, 60, 68, 75, 82], "chang": [0, 10, 12, 16, 21, 23, 25, 28, 38, 41, 44, 45, 47, 48, 49, 53, 66, 73, 83, 84], "eval": [0, 6, 41, 44, 48, 49, 50, 66, 67, 75, 80, 81], "dataset": [0, 6, 7, 19, 23, 25, 26, 28, 34, 41, 44, 47, 49, 50, 52, 53, 60, 61, 63, 66, 67, 75, 76, 78, 80], "data_path": [0, 41], "viewer": [0, 12, 14, 16, 18, 19, 41, 42, 47, 48, 61, 66, 67, 75, 81], "vi": [0, 1, 4, 18, 36, 39, 40, 44, 48, 67, 69, 83], "option": [0, 1, 5, 7, 8, 10, 12, 16, 20, 28, 38, 40, 41, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 74, 82], "e": [0, 1, 2, 3, 5, 10, 12, 20, 21, 41, 42, 43, 45, 47, 48, 53, 84], "g": [0, 1, 2, 3, 10, 12, 21, 41, 42, 43, 45, 48, 53], "blender": [0, 4, 7, 25, 32, 34, 41, 42, 44, 61, 66, 81], "data_pars": 0, "run": [0, 1, 4, 13, 14, 16, 19, 41, 43, 45, 46, 47, 48, 64, 66, 67, 75, 78, 80, 84], "note": [0, 1, 12, 16, 21, 24, 42, 43, 48, 63, 65, 83], "go": [0, 16, 28, 38, 39, 40, 44], "end": [0, 4, 8, 16, 19, 30, 38, 39, 40, 44, 45, 47, 48, 53, 59, 61, 63, 67, 72], "scale": [0, 7, 16, 21, 22, 29, 32, 37, 38, 41, 42, 44, 47, 48, 49, 50, 51, 52, 53, 55, 63, 72, 78, 80, 81, 83], "factor": [0, 25, 29, 33, 41, 42, 47, 49, 50, 51, 53, 60, 67, 78, 80, 81], "0": [0, 1, 3, 4, 5, 7, 10, 12, 14, 15, 16, 28, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 60, 63, 64, 65, 66, 67, 69, 72, 73, 74, 78, 80, 81, 83], "5": [0, 12, 21, 24, 38, 40, 42, 47, 50, 53, 55, 63, 65, 66], "easi": [1, 7, 10, 19, 23, 30, 37, 46, 51, 53], "new": [1, 3, 12, 15, 16, 18, 19, 23, 25, 28, 30, 31, 35, 41, 44, 46, 47, 49, 50, 52, 53, 73, 74, 84], "nerf": [1, 6, 7, 8, 10, 11, 13, 14, 18, 19, 20, 22, 23, 24, 25, 26, 29, 32, 33, 35, 36, 38, 41, 42, 44, 49, 55, 61, 63, 64, 72, 75, 76, 78, 82], "against": 1, "standard": [1, 6, 18, 24, 36, 47, 49, 50, 65, 73], "To": [1, 4, 12, 15, 16, 18, 21, 22, 23, 24, 26, 28, 30, 41, 42, 45, 49, 50, 80, 82, 84], "object": [1, 6, 7, 9, 10, 12, 15, 26, 28, 29, 32, 38, 40, 41, 42, 45, 47, 48, 49, 50, 51, 52, 67, 68, 69, 72, 73, 74], "job": [1, 13, 44, 48, 83], "automat": [1, 5, 7, 24, 41, 45, 50, 67, 84], "item": 1, "script": [1, 16, 34, 41, 43, 44, 45, 46, 50, 53, 75, 79, 80, 84], "launch_train_blend": 1, "sh": [1, 8, 41, 60, 65], "m": [1, 16, 34, 41, 44, 45, 55, 72], "v": [1, 45, 47, 63], "gpu_list": 1, "simpli": [1, 3, 10, 12, 23, 46], "replac": [1, 21, 22, 27, 45, 52, 53], "argument": [1, 4, 7, 10, 12, 15, 16, 41, 44, 47, 49, 53, 74, 75, 82], "bracket": 1, "correct": [1, 8, 16, 41, 45, 47, 66, 80, 84], "name": [1, 3, 5, 8, 9, 12, 15, 16, 41, 44, 45, 50, 53, 65, 67, 72, 74, 76, 77, 78, 81], "method": [1, 6, 7, 8, 10, 17, 20, 38, 41, 42, 44, 47, 49, 50, 51, 52, 55, 61, 65, 67, 78, 80, 82, 84], "mipnerf": [1, 27, 32, 40, 59, 63], "singl": [1, 10, 15, 24, 26, 30, 32, 41, 47, 49, 53, 60, 67, 69], "per": [1, 6, 10, 11, 21, 29, 33, 41, 42, 44, 47, 48, 49, 52, 55, 58, 60, 64, 65, 66, 69, 78, 80, 81], "gpu": [1, 23, 28, 45, 48, 49, 80], "anoth": [1, 7, 10, 22, 24, 41], "visual": [1, 37, 40, 45, 66, 69], "than": [1, 8, 21, 22, 24, 29, 41, 44, 47, 55, 69], "wandb": [1, 4, 10, 12, 67], "comet": [1, 10, 12, 67], "tensorboard": [1, 10, 12, 67], "machin": [1, 13, 41, 44, 45, 48, 67], "space": [1, 8, 10, 24, 25, 28, 31, 36, 40, 47, 50, 59, 63, 64, 78], "separ": [1, 22, 31, 49], "3": [1, 4, 7, 8, 16, 19, 24, 25, 28, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 50, 51, 52, 53, 55, 56, 59, 60, 63, 65, 69, 70, 72, 73, 74, 80, 81], "left": [1, 25, 33, 38, 41, 53, 80], "empti": [1, 24, 30, 40], "find": [1, 5, 18, 19, 23, 24, 29, 30, 41, 48, 52, 53, 67, 73, 83, 84], "distribut": [1, 11, 22, 28, 29, 38, 44, 47, 48, 55, 64, 72], "view": [1, 4, 8, 9, 16, 19, 21, 22, 24, 26, 28, 30, 32, 37, 40, 41, 44, 46, 47, 66, 75, 78], "A": [1, 3, 8, 10, 12, 15, 16, 17, 19, 24, 25, 27, 31, 32, 39, 41, 47, 49, 50, 53, 55, 60, 64, 65, 66, 67, 73, 74], "full": [1, 16, 21, 22, 41, 45, 47, 52], "would": [1, 4, 15, 30, 38, 41, 44, 52, 82], "save": [1, 16, 21, 22, 41, 44, 48, 49, 50, 67, 76, 77, 78, 81, 84], "checkpoint": [1, 18, 21, 66, 67, 77, 83], "output": [1, 3, 4, 7, 10, 16, 18, 21, 24, 26, 28, 34, 41, 43, 44, 45, 46, 47, 50, 51, 53, 55, 56, 58, 60, 65, 66, 67, 69, 77, 78, 80, 81, 84], "directori": [1, 7, 16, 21, 41, 45, 50, 67, 76, 78, 80], "experi": [1, 3, 7, 19, 33, 41, 50], "current": [1, 6, 9, 11, 15, 16, 18, 19, 21, 22, 41, 42, 45, 47, 48, 60, 66, 67, 74], "timestamp": [1, 16, 47, 50, 67], "onc": [1, 4, 12, 18, 20, 21, 22, 26, 31, 38, 41, 44], "converg": [1, 21, 22, 47], "test": [1, 7, 19, 30, 32, 41, 44, 48, 49, 50, 66, 67, 73, 81, 84], "launch_eval_blend": 1, "ran": 1, "08": [1, 28, 67], "10": [1, 3, 10, 24, 28, 36, 37, 39, 44, 45, 47, 48, 66, 72, 78, 81], "2022": [1, 17, 19, 45, 63], "instant": [1, 7, 10, 15, 19, 23, 31, 37, 40, 42, 44, 55, 60, 61, 64, 74], "ngp": [1, 7, 10, 19, 23, 31, 37, 40, 42, 44, 55, 60, 61, 64], "By": [1, 3, 4, 21, 22, 29, 44, 81, 82], "blender_chair_2022": 1, "10_172517": 1, "config": [1, 3, 5, 6, 7, 12, 19, 23, 43, 47, 49, 50, 52, 60, 61, 66, 67, 68, 77, 78, 81, 83], "yml": [1, 43, 44], "blender_drums_2022": 1, "abov": [1, 4, 23, 28, 30, 41, 44, 45, 46], "o": [1, 4, 45], "t": [1, 5, 6, 12, 16, 22, 24, 28, 36, 38, 41, 46, 47, 50, 52, 61, 63, 66, 72, 74, 84], "flag": [1, 4, 16, 20, 41, 45, 46, 48, 50, 80, 83], "should": [1, 5, 6, 7, 14, 16, 17, 24, 25, 26, 28, 36, 38, 40, 42, 44, 45, 46, 47, 48, 53, 55, 63, 64, 66, 67, 73, 74, 80, 81, 83], "wa": [1, 12, 16, 20, 28, 37, 40, 41, 45, 50, 53, 59, 65], "c": [1, 12, 41, 45, 50, 53, 73, 84], "base": [1, 7, 8, 12, 16, 17, 18, 21, 22, 24, 31, 38, 41, 45, 46, 47, 48, 52, 54, 55, 56, 58, 59, 61, 63, 64, 65, 67, 68, 69, 72, 73, 74, 78, 84], "dir": [1, 21, 32, 41, 43, 44, 76, 78, 80], "also": [1, 4, 5, 7, 11, 15, 16, 23, 24, 25, 28, 38, 39, 40, 41, 42, 44, 45, 48, 50, 68, 73, 75, 80, 82, 84], "identifi": 1, "simultan": [1, 44], "across": [1, 16, 22, 26, 49, 52, 53, 72, 78, 84], "calcul": [1, 9, 16, 24, 29, 39, 41, 44, 47, 50, 55, 63, 65, 66, 80], "psnr": [1, 44, 48, 77], "fp": [1, 16], "stat": [1, 3, 4, 48], "result": [1, 16, 23, 25, 29, 33, 34, 38, 41, 78, 80, 84], "json": [1, 7, 14, 41, 42, 44, 47, 50, 77, 78, 80, 81], "blender_ficus_2022": 1, "sinc": [1, 16, 22, 24, 41, 47, 49, 52], "multipl": [1, 16, 17, 19, 24, 25, 28, 29, 33, 38, 41, 44, 53], "background": [1, 7, 10, 16, 50, 65, 66], "process": [1, 7, 10, 16, 19, 21, 22, 38, 44, 45, 49, 50, 51, 54, 55, 56, 58, 67, 75, 78], "concurr": [1, 33], "termin": [1, 3, 4, 10, 16, 40, 44, 45, 46, 48], "log": [1, 3, 4, 12, 20, 38, 45, 48, 64, 67, 80, 83], "mai": [1, 5, 7, 16, 20, 21, 22, 23, 24, 28, 36, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 78, 80, 84], "messi": 1, "document": [2, 12, 19, 23, 43, 50, 53], "few": [2, 3, 16, 26, 29, 48], "system": [2, 10, 16, 19, 38, 45, 50], "profil": [2, 11, 48, 61], "speed": [2, 24, 29, 41, 46, 48, 49, 80], "As": [2, 19, 23, 38, 84], "grow": [2, 41], "hope": [2, 19, 23], "updat": [2, 10, 11, 12, 23, 24, 45, 64, 74], "extens": [2, 18, 32, 45], "local": [2, 13, 20, 24, 30, 45, 48, 50, 67, 84], "writer": [2, 48], "code": [2, 5, 6, 8, 9, 10, 11, 12, 21, 22, 25, 26, 28, 29, 30, 31, 32, 34, 45, 47, 48, 49, 50, 52, 53, 54, 67, 72, 75], "benchmark": [2, 44], "workflow": [2, 41, 44, 45], "localwrit": [3, 48], "numer": [3, 12, 64, 69], "addit": [3, 5, 7, 19, 23, 28, 29, 38, 42, 44, 45, 47, 49, 50, 51, 53, 84], "skeleton": 3, "localwriterconfig": [3, 48, 61], "instantiateconfig": [3, 6, 47, 48, 52, 60, 61, 66, 67], "bool": [3, 7, 10, 47, 48, 49, 50, 52, 55, 60, 63, 64, 65, 66, 67, 69, 72, 74], "fals": [3, 10, 12, 15, 16, 37, 38, 47, 48, 49, 50, 52, 55, 60, 64, 66, 67, 69, 74, 78, 80, 81, 83], "stats_to_track": [3, 48, 61], "tupl": [3, 6, 8, 10, 47, 48, 49, 50, 52, 53, 58, 60, 64, 65, 66, 67, 68, 72, 73, 74], "eventnam": [3, 48], "iter_train_tim": [3, 48], "max_log_s": [3, 48, 61], "int": [3, 6, 7, 10, 11, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 63, 64, 65, 66, 67, 72, 73, 74], "edit": [3, 16, 19, 41, 45], "disabl": [3, 4, 38, 47, 48, 66, 67, 74], "logger": [3, 44, 48], "print": [3, 4, 12, 14, 15, 37, 48, 80, 83], "see": [3, 6, 8, 9, 10, 11, 16, 19, 25, 26, 29, 30, 31, 38, 41, 43, 44, 45, 46, 48, 53, 72, 83], "under": [3, 16, 29, 44, 45, 49, 80], "util": [3, 5, 24, 36, 39, 40, 44, 48, 49, 50, 52, 61, 63, 69, 70, 72, 73], "add": [3, 4, 5, 6, 7, 10, 19, 23, 25, 31, 38, 41, 44, 45, 46, 47, 54, 60, 64, 74, 81, 84], "remov": [3, 15, 19, 30, 41, 45, 61, 64, 72, 74, 78], "ani": [3, 4, 5, 7, 9, 12, 15, 19, 24, 28, 30, 37, 41, 43, 46, 47, 48, 49, 50, 51, 53, 54, 64, 66, 67, 73, 74, 80, 84], "enum": [3, 8, 47, 56, 63, 67], "much": [3, 7, 23, 37, 41, 45, 47, 49, 50, 52], "content": [3, 32, 38, 41, 46, 50], "onto": [3, 72], "screen": [3, 15, 41, 48], "onli": [3, 9, 10, 16, 18, 28, 29, 30, 39, 41, 42, 43, 44, 45, 47, 49, 50, 52, 53, 60, 64, 67, 78, 80, 81, 84], "line": [3, 5, 16, 41, 44, 45, 50, 75, 81], "everyth": [3, 36, 40, 44, 45, 48, 49, 66], "delet": [3, 41, 53], "previou": [3, 22, 33, 45, 67], "creat": [3, 5, 7, 9, 10, 12, 15, 19, 23, 24, 25, 29, 38, 41, 44, 47, 50, 53, 65, 66, 73, 80, 84], "track": [3, 4, 12, 16, 44, 64], "rememb": 3, "put": [3, 7, 53], "event": [3, 15, 48], "put_scalar": 3, "from": [3, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 23, 24, 28, 29, 30, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 53, 55, 60, 63, 64, 65, 66, 67, 72, 74, 75, 76, 78, 80], "valu": [3, 7, 8, 9, 10, 12, 16, 21, 37, 38, 40, 41, 42, 45, 47, 48, 50, 53, 55, 56, 58, 60, 61, 63, 64, 65, 66, 67, 69, 72, 74, 80, 81, 83], "event_storag": 3, "cli": [3, 4, 20, 21, 41, 45, 82], "common": [3, 7, 19, 30, 38, 41, 53, 70], "max": [3, 7, 10, 16, 37, 41, 47, 50, 52, 67, 69, 74, 78, 80, 81, 83], "size": [3, 21, 24, 27, 29, 33, 34, 41, 44, 45, 47, 48, 49, 50, 53, 55, 58, 60, 61, 64, 66, 67, 71, 73, 74, 78, 80], "built": [4, 13, 17, 21, 22, 24, 26, 45], "perform": [4, 21, 22, 24, 30, 38, 47, 53, 55, 65, 67, 84], "capabl": [4, 45], "easier": [4, 34, 69], "debug": [4, 19, 80], "assess": 4, "program": [4, 45, 48], "comput": [4, 8, 9, 15, 16, 26, 28, 30, 36, 38, 39, 41, 43, 44, 45, 47, 48, 50, 53, 55, 60, 63, 64, 65, 66, 72, 77, 81], "averag": [4, 10, 28, 44, 47, 48, 60, 63, 78], "total": [4, 16, 44, 48, 63], "execut": [4, 12, 28, 80], "function": [4, 5, 8, 11, 15, 19, 24, 29, 38, 43, 47, 48, 49, 50, 51, 53, 54, 55, 58, 60, 63, 64, 65, 66, 67, 69, 72, 74], "time_funct": [4, 11], "decor": [4, 48], "take": [4, 5, 6, 8, 9, 10, 20, 21, 22, 27, 28, 41, 47, 53, 64, 66, 67, 74, 80], "gener": [4, 5, 6, 7, 9, 15, 20, 28, 38, 47, 49, 50, 52, 53, 60, 64, 65, 66, 72, 74, 75, 78, 80, 81, 84], "rai": [4, 6, 8, 9, 10, 11, 12, 15, 16, 22, 24, 25, 26, 28, 30, 34, 35, 36, 39, 40, 44, 48, 49, 52, 53, 60, 61, 62, 63, 65, 66, 67, 69, 72, 74, 78, 81], "given": [4, 7, 16, 21, 22, 24, 34, 36, 38, 44, 47, 50, 53, 64, 66, 67, 74], "pixel": [4, 6, 7, 8, 9, 26, 28, 36, 38, 39, 40, 41, 42, 47, 49, 61, 63, 65, 72, 74, 78, 80], "camera": [4, 6, 7, 9, 21, 24, 28, 29, 30, 32, 35, 38, 39, 40, 41, 44, 48, 49, 50, 51, 52, 53, 61, 63, 66, 74, 80, 83], "indic": [4, 6, 7, 47, 49, 52, 53, 64], "raygener": [4, 7], "might": [4, 45], "its": [4, 12, 16, 24, 25, 32, 44], "forward": [4, 8, 9, 11, 12, 15, 28, 44, 46, 47, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "case": [4, 8, 12, 13, 16, 21, 32, 38, 40, 41, 44, 45, 47, 49, 53, 59, 72], "model_compon": [4, 28, 38, 63, 64, 65], "ray_gener": [4, 7], "nn": [4, 6, 8, 11, 12, 15, 29, 49, 54, 58, 80], "def": [4, 5, 6, 7, 8, 10, 11, 12, 15], "self": [4, 6, 7, 8, 10, 11, 12, 15, 41, 55], "ray_indic": [4, 6, 64, 65], "tensortyp": [4, 7, 8], "num_rai": [4, 40, 47, 65], "raybundl": [4, 6, 7, 9, 10, 15, 38, 47, 49, 50, 53, 61, 64, 66], "altern": [4, 16, 40, 44, 45, 52], "part": [4, 16, 19, 42, 51], "code1": 4, "code2": 4, "At": [4, 10, 16, 22, 24, 41, 44], "block": [4, 84], "tag": [4, 45, 84], "specif": [4, 5, 12, 24, 28, 41, 44, 45, 46, 47, 49, 53, 65, 68], "individu": [4, 21, 47, 78], "measur": [4, 30], "evalu": [4, 8, 11, 28, 48, 49, 53, 60, 64, 66, 75, 78, 83], "memori": [4, 21, 22, 24, 25, 26, 29, 32, 33, 34, 42, 45, 49, 67, 73, 78], "cuda": [4, 24, 28, 29, 32, 34, 41, 48], "kernel": [4, 24], "launch": [4, 19, 45, 46], "consid": [4, 5, 17, 19, 28, 40, 47, 69, 73, 81], "It": [4, 6, 11, 12, 13, 16, 17, 19, 21, 22, 23, 28, 29, 35, 38, 41, 43, 44, 45, 50, 52], "select": [4, 16, 21, 41, 44, 74], "step": [4, 6, 11, 16, 20, 22, 24, 27, 28, 29, 30, 41, 43, 44, 45, 47, 48, 49, 50, 63, 64, 66, 67, 74, 81], "number": [4, 6, 10, 11, 12, 16, 22, 24, 29, 36, 41, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 64, 65, 66, 67, 72, 73, 74, 78, 80, 81, 83], "cuda_launch_block": 4, "trace": [4, 38, 48], "path_to_model_output": 4, "profiler_trac": 4, "load": [4, 7, 9, 21, 43, 44, 45, 49, 50, 53, 66, 67, 77, 78, 81, 83], "googl": [4, 47, 63, 72, 76, 84], "chrome": 4, "entir": [4, 21, 22, 24, 40, 67], "codebas": [4, 5, 14, 19, 23, 42, 84], "instal": [4, 5, 13, 15, 16, 18, 19, 23, 61, 74, 75, 80, 81, 82, 84], "pip": [4, 5, 20, 21, 22, 25, 26, 30, 31, 32, 34, 41, 43, 45, 80, 84], "spy": 4, "either": [4, 16, 41, 44, 45, 53, 55, 63, 65, 72, 78, 80], "flame": 4, "graph": [4, 52, 60], "live": [4, 7, 12, 41, 45], "inhous": 4, "record": [4, 30, 41, 50], "path_to_output_svg": 4, "down": [4, 24, 41, 50], "extra": [4, 28, 45, 47, 53, 80], "aim": [5, 15], "offer": [5, 75], "research": [5, 17, 19, 23, 35, 47, 63, 72], "thei": [5, 9, 18, 21, 24, 28, 32, 45, 50, 53, 57, 72, 73], "develop": [5, 14, 19, 23, 41, 45, 46, 80], "novel": [5, 28, 30], "vision": 5, "user": [5, 12, 16, 19, 20, 21, 23, 45, 49, 67, 74], "establish": 5, "distinct": [5, 60], "repositori": [5, 17, 30, 34, 45, 84], "import": [5, 6, 9, 10, 12, 15, 16, 24, 28, 30, 36, 37, 38, 39, 40, 41, 45], "compon": [5, 7, 8, 9, 10, 19, 21, 22, 25, 28, 29, 31, 33, 39, 45, 47, 49, 55, 61, 69, 72, 84], "cater": 5, "requir": [5, 6, 7, 13, 16, 20, 23, 28, 29, 41, 42, 45, 49, 50, 52, 53, 72, 77, 78, 80, 81, 83], "approach": [5, 24, 41, 72], "featur": [5, 8, 12, 19, 24, 25, 26, 29, 31, 33, 34, 48, 55, 58, 60, 63, 69, 72, 80, 83, 84], "modif": [5, 27, 53, 84], "core": [5, 17, 19, 24, 39], "encourag": [5, 63, 84], "submit": [5, 84], "pr": [5, 84], "benefit": [5, 44], "templat": 5, "minim": [5, 7, 34, 61, 82], "guid": [5, 9, 19, 21, 28, 29, 35, 36, 40, 41, 46], "best": [5, 12, 21, 22, 26, 34, 41, 55], "wai": [5, 12, 16, 18, 24, 28, 29, 36, 41, 44, 47, 49], "learn": [5, 10, 17, 19, 24, 28, 29, 30, 44, 47, 55, 67, 75, 82], "look": [5, 6, 8, 9, 10, 15, 23, 24, 41, 42, 45, 47, 75], "lerf": [5, 19, 23], "good": [5, 15, 16, 22, 26, 28, 34, 38, 41, 45, 72], "project": [5, 8, 17, 19, 21, 22, 26, 28, 30, 36, 41, 45, 47, 55, 67, 72, 74, 75, 80, 84], "recommend": [5, 16, 19, 24, 41, 44, 45, 47, 59, 80, 82], "my_method": 5, "__init__": [5, 12, 15], "my_config": 5, "custom_pipelin": 5, "custom_model": 5, "custom_field": 5, "custom_datamang": 5, "custom_datapars": 5, "pyproject": [5, 43, 75], "toml": [5, 43, 75], "In": [5, 8, 9, 12, 16, 21, 24, 27, 28, 33, 38, 42, 44, 45, 46, 47, 84], "order": [5, 22, 38, 40, 47, 51, 52, 59, 81, 84], "own": [5, 10, 14, 41, 75, 84], "packag": [5, 13, 14, 41, 43, 45, 68, 84], "python": [5, 12, 13, 34, 41, 43, 45, 49, 53, 84], "entrypoint": [5, 68], "them": [5, 9, 16, 23, 25, 32, 36, 41, 44, 45, 47, 80, 81, 84], "first": [5, 6, 15, 20, 21, 22, 25, 26, 28, 29, 30, 31, 32, 34, 37, 38, 41, 42, 45, 47, 64, 67, 69, 74, 80], "engin": [5, 47, 61], "trainer": [5, 61, 68], "trainerconfig": [5, 61, 67, 68], "plugin": [5, 61], "methodspecif": [5, 61, 68], "mymethod": 5, "my": [5, 12], "Then": [5, 16, 18, 20, 21, 22, 25, 26, 30, 31, 32, 41], "set": [5, 7, 10, 14, 16, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 34, 36, 38, 43, 44, 45, 47, 48, 49, 50, 52, 53, 56, 59, 60, 64, 65, 66, 67, 73, 74, 78, 80, 82, 83], "depend": [5, 7, 20, 21, 22, 25, 26, 28, 30, 31, 32, 34, 44, 50, 53, 66], "pin": [5, 73], "version": [5, 14, 22, 29, 31, 45, 49, 50, 53, 55, 58, 61, 63], "ie": [5, 28, 29, 32, 38, 40, 42, 44, 45, 47, 55, 56, 64, 66], "19": [5, 55, 58, 60, 66, 76], "tool": [5, 23, 28, 41, 45, 80, 84], "setuptool": [5, 21, 45], "includ": [5, 15, 16, 17, 23, 24, 44, 45, 49, 50, 52, 53, 66, 67, 80], "entri": [5, 23, 50], "final": [5, 16, 24, 28, 29, 34, 38, 41, 46, 67], "when": [5, 10, 12, 14, 15, 16, 22, 24, 28, 29, 30, 38, 40, 41, 44, 45, 47, 48, 49, 50, 53, 65, 66, 67, 74, 80, 81, 82, 83, 84], "don": [5, 6, 12, 28, 46, 84], "alwai": [5, 45, 48], "instead": [5, 16, 22, 32, 41, 45, 60, 67, 80], "nerfstudio_method_config": [5, 68], "environ": [5, 41, 50, 68], "variabl": [5, 12, 15, 25, 41, 45, 49, 53, 68], "temporarili": 5, "export": [5, 16, 41, 45, 75, 80], "addition": [5, 16], "accept": 5, "deriv": [5, 47], "mymethodfunc": 5, "return": [5, 6, 7, 8, 10, 11, 15, 29, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74], "mymethodclass": 5, "str": [5, 7, 10, 47, 48, 49, 50, 52, 53, 58, 66, 67, 68, 70, 74], "similar": [5, 15, 16, 21, 28, 38, 41, 42, 55], "dataparser_config": [5, 68], "declar": 5, "registry_datapars": [5, 68], "dataparserspecif": [5, 61, 68], "customdataparserconfig": 5, "mydatapars": 5, "similarli": [5, 16], "nerfstudio_dataparser_config": [5, 68], "my_packag": 5, "abl": [5, 21, 22, 29, 41, 45, 46], "data_dir": [5, 50, 61], "invit": [5, 10], "contribut": [5, 19, 24, 29, 38], "onlin": 5, "inform": [5, 6, 7, 8, 9, 12, 21, 22, 23, 25, 29, 36, 38, 41, 47, 49, 50, 51, 66, 84], "raygt": [6, 7, 9, 50], "abstract": [6, 7, 49, 53, 55, 59, 60, 64, 66, 67, 74], "manag": [6, 41, 45, 49, 65], "abstractmethod": [6, 7, 8], "next_train": [6, 11, 49, 61], "dict": [6, 7, 8, 9, 10, 11, 38, 47, 49, 50, 51, 52, 53, 55, 58, 60, 63, 66, 67, 68], "next": [6, 10, 11, 15, 16, 19, 28, 49, 53, 84], "batch": [6, 10, 11, 44, 47, 49, 52, 53, 54, 60, 63, 64, 65, 66, 67, 72, 73, 78], "next_ev": [6, 49, 61], "next_eval_imag": [6, 49, 61], "imag": [6, 7, 10, 15, 16, 20, 23, 26, 28, 29, 36, 38, 40, 46, 47, 48, 49, 50, 51, 52, 53, 60, 61, 63, 65, 66, 67, 69, 72, 74, 78, 81, 83], "index": [6, 23, 24, 37, 45, 47, 51, 53, 54, 64, 65, 66, 73], "cameraraybundl": 6, "ve": [6, 13, 19, 23, 49, 75], "vanilladatamanag": [6, 49, 61], "paper": [6, 10, 19, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 50, 63, 64, 72, 76], "randomli": [6, 21, 22, 38, 52, 67], "sampl": [6, 8, 9, 10, 22, 24, 25, 26, 27, 29, 30, 32, 34, 35, 40, 41, 44, 47, 49, 50, 52, 53, 55, 59, 60, 61, 63, 64, 65, 66, 67, 80], "ground": [6, 9, 16, 21, 22, 26, 41, 42, 49, 63, 65, 66, 72], "truth": [6, 9, 21, 22, 49, 63, 65, 66, 72], "respect": [6, 21, 22, 42, 45, 47, 49, 55], "vanilladatamanagerconfig": [6, 49, 61], "charg": [6, 49], "keep": [6, 16, 19, 25, 47, 48, 49, 64, 68], "hold": [6, 41, 49], "both": [6, 9, 24, 29, 30, 38, 40, 41, 44, 49, 55, 63, 80], "unpack": [6, 49, 53], "iter": [6, 10, 11, 16, 44, 47, 48, 49, 53, 64, 66, 67], "target": [6, 7, 21, 22, 28, 30, 38, 40, 41, 45, 53, 55, 63, 72, 78, 80], "annotateddataparserunion": 6, "blenderdataparserconfig": [6, 49, 50, 61], "train_num_rays_per_batch": [6, 49, 61], "1024": [6, 49, 55, 58, 60, 78], "train_num_images_to_sample_from": [6, 49, 61], "dure": [6, 9, 12, 26, 28, 29, 30, 37, 38, 41, 42, 44, 45, 47, 49, 64, 66, 67, 81], "eval_num_rays_per_batch": [6, 49, 61], "eval_num_images_to_sample_from": [6, 49, 61], "camera_optim": [6, 47, 49, 61, 66], "cameraoptimizerconfig": [6, 47, 49, 61, 66], "pose": [6, 7, 15, 21, 28, 36, 41, 47, 50, 52, 78, 80, 81], "quick": [6, 19], "train_count": [6, 49, 61], "image_batch": [6, 52], "iter_train_image_dataload": 6, "train_pixel_sampl": 6, "ray_bundl": [6, 10, 11, 28, 38, 39, 49, 64, 66], "train_ray_gener": 6, "detail": [6, 19, 21, 22, 23, 24, 26, 28, 29, 30, 31, 34, 41, 75, 84], "becaus": [6, 7, 20, 24, 29, 41, 49, 72], "howev": [6, 9, 16, 21, 22, 25, 28, 30, 38, 40, 41], "straightforward": 6, "progress": [6, 30, 44], "reli": [6, 8, 12, 26, 28], "modifi": [6, 10, 12, 13, 40, 41, 44, 47, 55], "dataparseroutput": [7, 50, 51, 61], "lightweight": [7, 60], "contain": [7, 8, 9, 11, 15, 19, 24, 28, 44, 47, 49, 50, 64, 66, 67, 68], "filenam": [7, 41, 43, 48, 50, 51, 61, 75, 81, 83], "meta": [7, 50], "later": [7, 56], "pytorch": [7, 34, 44, 48, 50, 52, 53, 55], "privat": 7, "_generate_dataparser_output": 7, "image_filenam": [7, 50, 51, 61], "path": [7, 18, 21, 30, 34, 41, 44, 45, 46, 48, 49, 50, 51, 53, 61, 66, 67, 76, 77, 78, 80, 83], "collect": [7, 21, 22, 50, 53, 56, 63, 64, 65], "alpha_color": [7, 50, 61], "color": [7, 8, 10, 28, 38, 39, 40, 50, 60, 61, 63, 65, 66, 69, 71, 74], "scene_box": [7, 10, 50, 52, 61, 66], "scenebox": [7, 47, 50, 52, 61, 66], "scene": [7, 19, 21, 22, 24, 25, 28, 29, 30, 31, 32, 33, 34, 38, 41, 44, 46, 49, 50, 60, 61, 64, 66, 74], "box": [7, 16, 38, 47, 49, 50, 60, 61, 64, 66, 72, 74, 78], "bound": [7, 16, 28, 31, 38, 40, 49, 50, 52, 55, 60, 63, 64, 72, 78], "mask_filenam": [7, 50, 61], "mask": [7, 16, 26, 49, 50, 51, 52, 53, 60, 63, 69, 72, 80], "metadata": [7, 47, 50, 51, 61, 66], "to_immutable_dict": 7, "Will": [7, 50], "inputdataset": [7, 50, 51, 53, 61], "tensor": [7, 8, 10, 33, 37, 40, 47, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 72, 73, 81], "dataparser_transform": [7, 50, 61], "4": [7, 20, 24, 25, 28, 36, 37, 39, 40, 45, 47, 50, 51, 52, 53, 55, 59, 60, 63, 64, 66, 73, 78], "torch": [7, 10, 32, 36, 37, 38, 39, 40, 45, 47, 50, 53, 54, 55, 58, 60, 66, 67, 72, 73], "ey": [7, 36, 37, 38, 39, 41], "transform": [7, 16, 42, 47, 50, 51, 60, 80], "dataparser_scal": [7, 50, 61], "float": [7, 10, 40, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 72, 74, 76], "split": [7, 50, 81], "nerfstudiodataparserconfig": [7, 42, 49, 50, 61], "dataparserconfig": [7, 50, 61, 68], "poster": [7, 44, 76], "locat": [7, 8, 29, 36, 40, 44, 50, 60, 63, 64, 67], "scale_factor": [7, 50, 51, 52, 53, 61], "origin": [7, 8, 9, 15, 21, 22, 26, 28, 34, 37, 38, 39, 40, 42, 47, 50, 52, 55, 60, 61, 64, 72, 73, 74, 78], "downscale_factor": [7, 50, 61], "downscal": [7, 50, 61, 78, 80, 81], "chosen": [7, 22, 29, 41, 50], "dimens": [7, 25, 36, 39, 47, 50, 53, 54, 55, 56, 58, 60, 69, 73, 80], "1600px": [7, 50], "scene_scal": [7, 50, 61], "region": [7, 8, 10, 26, 28, 29, 38, 42, 47, 50], "orientation_method": [7, 50, 61], "liter": [7, 10, 47, 48, 49, 50, 55, 58, 60, 63, 65, 66, 67, 69, 72], "pca": [7, 47, 50, 69, 81], "up": [7, 12, 19, 24, 25, 28, 29, 32, 42, 44, 45, 47, 49, 50, 67, 73], "vertic": [7, 16, 24, 34, 41, 47, 50], "orient": [7, 42, 44, 47, 50, 63, 72, 78], "center_method": [7, 47, 50, 61], "focu": [7, 16, 47, 50], "center": [7, 16, 47, 50, 52, 74, 78], "auto_scale_pos": [7, 50, 61], "true": [7, 10, 15, 28, 37, 38, 40, 41, 43, 47, 48, 49, 50, 60, 64, 65, 66, 67, 69, 72, 74, 78, 80, 81, 83], "whether": [7, 10, 12, 32, 47, 48, 49, 50, 52, 55, 60, 63, 66, 67, 69, 72, 78, 80, 81, 83, 84], "fit": [7, 16, 40, 50], "train_split_fract": [7, 50, 61], "9": [7, 44, 50], "fraction": [7, 47, 50], "remain": [7, 29, 38, 42, 46, 50], "depth_unit_scale_factor": [7, 42, 50, 61], "depth": [7, 15, 28, 29, 41, 43, 46, 48, 50, 51, 53, 63, 65, 69, 72, 80, 81, 83], "meter": [7, 41, 50], "001": [7, 37, 47, 50, 55, 58, 66], "millimet": [7, 42, 50], "convers": [7, 50], "datasetpars": [7, 50], "load_from_json": 7, "dataparser_output": [7, 51], "d": [7, 12, 19, 41, 44, 53, 61], "initi": [7, 19, 28, 29, 37, 38, 47, 48, 54, 55, 58, 60, 67, 73], "maintain": [7, 21, 22, 24, 33], "form": [7, 19, 72], "These": [7, 9, 22, 24, 28, 29, 38, 39, 40, 42, 43, 53, 72], "supervis": [7, 9, 22, 29, 30, 42, 63], "setup": [7, 30, 45, 48, 49, 61, 67], "get_dataparser_output": [7, 50, 61], "input_dataset": [7, 53], "pull": [7, 10, 23, 45, 84], "parser": [7, 32, 34, 52, 61], "arkitscen": [7, 61], "dycheck": [7, 61], "osr": [7, 61, 76], "nuscen": [7, 44, 61], "phototour": [7, 61], "scannet": [7, 61, 76], "sdfstudio": [7, 51, 61], "sitcoms3d": [7, 61], "sort": [8, 64], "quantiti": [8, 9, 10], "typic": [8, 10, 29, 37], "input": [8, 9, 12, 16, 21, 22, 24, 28, 29, 34, 37, 43, 47, 50, 51, 52, 53, 54, 55, 56, 58, 60, 66, 67, 69, 72, 74, 80, 81, 84], "3d": [8, 12, 15, 19, 20, 21, 22, 26, 28, 30, 33, 36, 41, 44, 46, 47, 50, 55, 72, 78], "direct": [8, 9, 15, 24, 37, 38, 39, 40, 42, 47, 50, 55, 60, 61, 63, 64, 65, 72, 74, 78, 84], "get_dens": [8, 60, 61], "ray_sampl": [8, 28, 38, 39, 60, 63, 64, 65], "raysampl": [8, 47, 60, 61, 63, 64, 65], "num_featur": [8, 60], "get_output": [8, 10, 12, 15, 60, 61, 66], "density_embed": [8, 60], "fieldheadnam": [8, 28, 56, 57, 60, 61, 63, 65], "embed": [8, 10, 19, 26, 32, 55, 57, 60, 61, 66], "condit": [8, 12, 21, 22, 29, 49, 60], "along": [8, 10, 16, 24, 26, 28, 38, 39, 40, 47, 49, 54, 55, 60, 63, 64, 65, 66, 72, 78, 81], "field_output": [8, 28, 63, 65], "ignor": [8, 14, 42, 48, 83], "main": [8, 11, 22, 24, 32, 43, 50, 79], "ll": [8, 42, 43, 84], "notic": [8, 10, 21, 36, 42], "everi": [8, 10, 21, 24, 30, 50, 67], "check": [8, 10, 41, 47, 81, 84], "semanticnerffield": [8, 60, 61], "fieldhead": [8, 56, 57, 60, 61], "produc": [8, 20, 22, 28, 29, 36, 47], "dimension": [8, 24, 25, 28, 37, 55], "possibl": [8, 16, 23, 28, 41, 44, 47, 52, 56, 76, 78, 79, 80, 81, 83], "rgb": [8, 16, 24, 28, 37, 42, 53, 56, 61, 65, 66, 69, 70, 74, 78, 81], "uncertainti": [8, 56, 63, 65], "transient_rgb": 8, "transient_dens": 8, "semant": [8, 28, 49, 50, 56, 61, 65], "sometim": [8, 41], "helper": [8, 47, 63, 67, 69, 72], "density_fn": [8, 60, 61, 64], "queri": [8, 24, 25, 29, 30, 34, 40, 78], "rather": [8, 21, 29, 60], "structur": [8, 10, 19, 21, 22, 24, 28, 44, 50, 52, 80, 84], "exactli": 8, "purpos": 8, "like": [8, 15, 23, 28, 32, 38, 41, 44, 49, 53, 73, 82, 84], "mip": [8, 19, 23, 34, 55, 72], "framework": [8, 17, 19, 24, 29], "tensordataclass": [8, 47, 61, 71], "b": [8, 12, 26, 38, 47, 53, 55, 56, 58, 59, 60, 63, 65, 69, 73], "xyz": [8, 47, 52, 53, 61], "coordin": [8, 15, 16, 24, 28, 47, 50, 55, 74, 78], "pixel_area": [8, 38, 40, 47, 61], "area": [8, 24, 31, 39, 47, 66, 84], "distanc": [8, 16, 28, 29, 32, 38, 39, 40, 41, 43, 47, 52, 60, 63, 65, 72, 78, 81], "awai": [8, 30, 32, 42, 47], "work": [9, 10, 11, 16, 19, 24, 26, 28, 29, 33, 41, 43, 44, 45, 47, 66, 80], "figur": [9, 24, 39, 40], "major": [9, 24], "rayoutput": [9, 10], "futur": [9, 41, 49], "goal": [9, 19, 23, 28, 47, 84], "compos": 9, "two": [9, 11, 20, 25, 29, 30, 31, 36, 41, 44, 47, 64, 72], "respons": [9, 11], "infer": [9, 10, 22, 28, 38, 49, 60, 67], "loss": [9, 10, 11, 12, 21, 22, 24, 29, 42, 44, 52, 61, 62, 65, 66, 67, 72], "render": [9, 10, 12, 16, 19, 20, 21, 22, 24, 26, 27, 29, 30, 32, 33, 34, 39, 40, 47, 48, 56, 61, 62, 63, 64, 66, 75, 77, 83], "necessari": [9, 16, 28, 41, 45, 66, 75, 80, 84], "gt": [9, 81], "l2": [9, 47], "section": [9, 10, 16, 19, 21, 22, 28, 34, 41, 46, 72, 75], "perhap": 9, "care": [9, 47], "about": [9, 10, 17, 19, 23, 26, 28, 32, 36, 44, 47, 49, 52, 75, 82], "dynam": [9, 11, 16, 25, 31, 50], "ad": [9, 16, 25, 40, 41, 44, 45, 49, 53, 65], "high": [9, 10, 16, 20, 24, 29, 41, 50, 57, 60], "accomplish": [9, 21, 22, 28, 30, 36], "mix": [9, 21, 22, 23, 63, 67], "match": [9, 16, 24, 38, 41, 42, 47, 63, 80], "through": [9, 15, 16, 19, 21, 22, 24, 25, 28, 29, 46, 74], "come": [9, 10, 44, 45, 47, 50, 63, 84], "soon": [9, 52], "probabl": [10, 31, 36, 38, 64], "think": 10, "phrase": 10, "interchang": 10, "reason": [10, 32, 35], "quit": [10, 35, 83], "verbos": [10, 50, 61, 80], "distil": [10, 22, 26, 30], "succint": 10, "give": [10, 16, 43, 45, 47], "autocomplet": 10, "populate_modul": [10, 61, 66], "sampler": [10, 11, 28, 34, 35, 40, 49, 61, 62, 66], "collid": [10, 66], "metric": [10, 47, 66, 75, 77], "get_param_group": [10, 47, 49, 61, 66], "group": [10, 49, 61, 66, 67, 74], "get_training_callback": [10, 49, 61, 66], "training_callback_attribut": [10, 49, 66], "trainingcallbackattribut": [10, 49, 61, 66, 67], "trainingcallback": [10, 49, 61, 66, 67], "callback": [10, 12, 49, 61, 64, 66, 74], "densiti": [10, 24, 28, 30, 34, 47, 56, 61, 63, 64, 65, 66], "grid": [10, 24, 25, 30, 32, 33, 37, 40, 47, 55, 58, 60, 63, 64, 66], "quanti": 10, "get_metrics_dict": [10, 11, 47, 61, 66], "plot": [10, 38, 44], "get_loss_dict": [10, 11, 47, 61, 66], "metrics_dict": [10, 11, 47, 66], "sum": [10, 38, 53, 55], "get_image_metrics_and_imag": [10, 61, 66], "colormap": [10, 61, 71], "near_plan": [10, 39, 61, 64, 66, 69], "05": [10, 40, 41, 64, 66, 67], "far": [10, 32, 38, 40, 47, 61, 64, 66, 81], "far_plan": [10, 39, 61, 64, 66, 69], "1000": [10, 38, 42, 45, 50, 66, 67], "stop": [10, 21, 40, 47, 48, 66, 83], "background_color": [10, 28, 61, 65, 66], "last_sampl": [10, 65, 66], "random": [10, 22, 48, 53, 55, 64, 65, 66], "num_proposal_samples_per_rai": [10, 64, 66], "64": [10, 24, 41, 44, 45, 55, 58, 60, 64, 66], "propos": [10, 21, 22, 24, 26, 30, 31, 32, 40, 55, 59, 60, 63, 64, 84], "network": [10, 24, 26, 28, 29, 32, 37, 38, 43, 56, 58, 60, 63, 64, 66, 72], "num_nerf_samples_per_rai": [10, 64, 66], "num_proposal_network_iter": [10, 64], "use_same_proposal_network": [10, 66], "otherwis": [10, 16, 38, 47, 48, 65, 72, 78, 83], "ones": [10, 38, 73], "interlevel_loss_mult": [10, 66], "multipli": 10, "distortion_loss_mult": [10, 66], "002": [10, 66], "distort": [10, 28, 35, 41, 42, 47, 57, 60, 61, 63, 66], "use_proposal_weight_ann": [10, 66], "weight": [10, 20, 28, 38, 44, 47, 54, 60, 63, 64, 65, 67], "anneal": [10, 60, 64], "use_average_appearance_embed": [10, 60, 66], "appear": [10, 12, 16, 25, 28, 29, 32, 41, 60, 66], "zero": [10, 37, 42, 55, 60, 63, 67, 72, 78], "proposal_weights_anneal_slop": [10, 66], "slope": 10, "proposal_weights_anneal_max_num_it": [10, 66], "num": [10, 41, 44, 67, 78, 80, 81, 83], "use_single_jitt": [10, 66], "jitter": [10, 64], "There": [10, 11, 16, 25, 32, 41, 42, 47], "lot": [10, 41, 44, 45], "thankfulli": 10, "handl": [10, 12, 24, 53], "show": [10, 22, 24, 26, 30, 36, 38, 39, 40, 41, 50, 80, 84], "furthermor": [10, 33], "static": [10, 12, 25, 28, 29, 31, 47, 49, 50, 52, 64, 84], "favor": 10, "throughout": [10, 16, 24], "begin": [10, 12, 22, 40, 59], "tcnnnerfactofield": 10, "aabb": [10, 47, 52, 60, 61, 72], "spatial_distort": [10, 40, 59, 60], "scene_contract": 10, "num_imag": [10, 52, 60], "num_train_data": [10, 66], "renderer_rgb": [10, 28], "rgbrender": [10, 12, 28, 61, 62, 65], "renderer_accumul": 10, "accumulationrender": [10, 61, 62, 65], "renderer_depth": 10, "depthrender": [10, 61, 62, 65], "now": [10, 14, 16, 28, 41, 46, 47, 49], "understand": [10, 19, 23, 28, 29, 44], "popul": 10, "librari": [10, 19, 21, 41, 76], "those": [10, 38, 39], "tutori": [10, 16, 19, 41, 46], "One": [10, 24, 38, 40, 50], "get_train_loss_dict": 11, "interfac": [11, 15, 16, 45, 75, 82], "feed": 11, "ddp": [11, 44, 48], "get_eval_loss_dict": 11, "simpl": [11, 19, 44, 46, 55], "vanillapipelin": [11, 67], "essenti": [11, 41], "rout": 11, "model_output": [11, 78], "loss_dict": [11, 47], "dynamicbatchpipelin": 11, "instantngp": [11, 50, 61], "choos": [11, 21, 25, 40, 41, 79], "although": [12, 49], "mind": 12, "achiev": [12, 16, 24, 33, 46], "text": [12, 20, 21, 22, 66, 74], "checkbox": [12, 16, 74], "turn": [12, 46, 48, 83], "off": [12, 41, 47, 48, 83], "dropdown": [12, 74, 84], "switch": [12, 16, 46], "between": [12, 22, 24, 28, 32, 37, 39, 41, 44, 47, 48, 50, 52, 55, 63, 64, 67, 72, 79, 81], "viewer_el": [12, 15, 74], "assign": [12, 38, 45], "viewernumb": [12, 61, 74], "myclass": 12, "must": [12, 15, 21, 38, 41, 42, 44, 45, 48, 52, 55, 56, 59, 60, 65, 72, 73, 80, 83, 84], "inherit": [12, 15], "custom_valu": 12, "default_valu": [12, 74], "hierarchi": [12, 27], "recurs": 12, "search": 12, "children": 12, "arrang": [12, 24], "folder": [12, 14, 18, 21, 23, 25, 34, 41, 45, 50, 76, 80], "viewerel": [12, 15, 61, 74], "access": [12, 45, 46, 67], "unless": [12, 36, 55, 58, 73], "current_valu": 12, "regist": [12, 15, 64, 68, 84], "whenev": 12, "on_change_callback": 12, "viewercheckbox": [12, 61, 74], "example_paramet": 12, "custom_checkbox": 12, "cb_hook": [12, 15, 74], "thread": 12, "safeti": [12, 84], "asynchron": [12, 15], "practic": [12, 21, 28, 30], "afterward": 12, "mymodel": [12, 15], "slider": [12, 74], "viewerslid": [12, 61, 74], "min_valu": [12, 74], "max_valu": [12, 74], "slider_v": 12, "could": [12, 41], "unsaf": 12, "write": [12, 16, 47, 53, 66], "conveni": [12, 45], "statement": 12, "x": [12, 16, 28, 36, 38, 39, 40, 42, 44, 47, 50, 52, 53, 55, 59, 60, 64, 72, 78], "state": [12, 66, 67, 74], "while": [12, 14, 21, 22, 29, 33, 41, 44, 45, 46, 48, 83], "unexpect": 12, "side": [12, 40, 52, 59, 78], "effect": [12, 16, 24, 44, 73, 84], "ensur": [12, 16, 23, 41, 45, 84], "action": [12, 84], "safe": 12, "determin": [12, 49, 72], "viewerbutton": [12, 15, 61, 74], "button": [12, 15, 16, 41, 74], "handle_btn": 12, "viewerdropdown": [12, 61, 74], "f": [12, 15, 24, 32, 37, 40, 45, 53, 59], "viewertext": [12, 61, 74], "hello": [12, 46], "world": [12, 15, 16, 21, 22, 24, 32, 36, 38, 41, 44, 47, 50, 51, 67, 74, 78], "viewervec3": [12, 61, 74], "vector": [12, 24, 26, 33, 39, 42, 47, 50, 52, 54, 55, 63, 69, 72, 74], "7": [12, 34, 38, 42, 45, 50], "rgb_render": [12, 65], "viewerrgb": [12, 61, 74], "api": [12, 19, 84], "real": [13, 16, 21, 22, 24, 26, 29, 32, 41, 44, 46, 66], "web": [13, 16, 45, 46], "http": [13, 14, 17, 21, 22, 26, 30, 31, 32, 34, 41, 45, 47, 50, 53, 63, 72, 76], "studio": [13, 14, 45], "connect": [13, 14, 15, 46, 48, 57, 60, 74, 83], "viser": 13, "threej": 13, "reactj": 13, "applic": [13, 30, 50], "client": 13, "websocket": [13, 44, 46, 48, 83], "server": [13, 48, 74, 83, 84], "gui": [13, 74], "control": [13, 22, 46, 74], "thank": 13, "author": [13, 17, 19, 24, 26], "contributor": [13, 84], "repo": [13, 19, 25, 42, 43, 50, 75], "made": [13, 84], "brent": [13, 19], "yi": [13, 19], "meshcat": 13, "robin": 13, "deit": 13, "unabl": 14, "safari": 14, "cd": [14, 21, 41, 45], "app": [14, 29, 41, 80], "npm": 14, "yarn": 14, "sudo": 14, "apt": [14, 41], "global": [14, 21, 22, 41], "nvm": 14, "instruct": [14, 19, 20, 23, 30], "17": 14, "8": [14, 26, 28, 37, 41, 45, 50, 53, 60, 80], "shell": 14, "v17": 14, "webserv": 14, "port": [14, 44, 45, 46, 48, 49, 83], "4000": 14, "localhost": 14, "websocket_url": 14, "w": [14, 30, 42, 47, 51, 61, 63], "7007": [14, 44, 45, 46, 48, 83], "solut": [14, 30, 45, 72], "cannot": [14, 45, 47, 50, 65, 74, 84], "try": [14, 23, 40, 41], "fov": [15, 16, 41, 74], "crop": [15, 16, 41, 44, 74, 80], "retriev": [15, 49], "listen": [15, 46], "insid": [15, 26, 45, 47, 52, 53, 55, 74], "window": [15, 41, 45, 46], "viewercontrol": [15, 61, 74], "within": [15, 16, 26, 40, 52, 53, 54, 61, 64, 78], "viewer_control": 15, "intrins": [15, 36, 47, 49, 50, 74, 80], "extrins": [15, 36, 50], "get_camera": [15, 53, 61, 74], "button_cb": 15, "img": [15, 50], "width": [15, 36, 37, 41, 42, 47, 53, 58, 60, 61, 74], "height": [15, 36, 37, 38, 41, 42, 47, 53, 61, 74], "100": [15, 37, 38, 53, 60, 66, 81], "yet": [15, 74], "camera_extrinsics_matrix": 15, "camera_to_world": [15, 36, 39, 47], "3x4": 15, "bundl": [15, 47, 49, 66, 80], "generate_rai": [15, 39, 47, 61], "camera_indic": [15, 39, 47, 60, 61], "move": [15, 16, 28, 38, 41, 42, 46, 49, 53, 74], "whatev": 15, "viewer_button": 15, "dummi": 15, "posit": [15, 16, 24, 25, 26, 27, 41, 47, 50, 52, 55, 59, 60, 64, 72, 74], "well": [15, 16, 22, 29, 41, 47, 73, 84], "toward": [15, 16, 22, 63], "aim_at_origin": 15, "mean": [15, 22, 41, 47, 54, 57, 61, 72, 73], "smoothli": 15, "anim": [15, 16, 41, 74], "jump": 15, "instantli": [15, 74], "set_pos": [15, 61, 74], "look_at": [15, 74], "interact": [15, 16, 19, 26], "register_click_cb": [15, 61, 74], "viewerclick": [15, 61, 74], "click_cb": 15, "unregister_click_cb": [15, 61, 74], "longer": [15, 41], "press": [15, 44, 74], "wait": 15, "unregist": 15, "itself": [15, 19], "potenti": [15, 38], "interrupt": 15, "layer": [16, 24, 28, 47, 56, 58, 60], "bake": 16, "mesh": [16, 28, 78], "cloud": [16, 34, 41, 78], "represent": [16, 19, 27, 29, 31, 34, 35, 41, 47, 50, 60], "rel": [16, 24, 36, 45, 48, 80, 83], "perspect": [16, 39, 47, 67, 80], "equirectangular": [16, 52, 80], "vr180": 16, "omnidirect": [16, 41], "stereo": 16, "vr": 16, "360": [16, 32, 34, 40, 59, 63], "gaussian": [16, 21, 40, 47, 55, 59, 61, 71, 72], "splat": [16, 21], "video": [16, 20, 23, 45, 75, 81], "newer": 16, "download": [16, 18, 20, 25, 34, 41, 44, 45, 75], "prefer": [16, 21, 34], "Ons": 16, "visibl": [16, 28, 30, 46, 63, 74, 81], "properti": [16, 36, 47, 49, 51, 63, 66, 73, 74], "tab": [16, 41, 44, 45, 75, 82], "right": [16, 25, 33, 38, 41, 42, 47, 50, 63, 80], "panel": [16, 44, 46], "qualiti": [16, 20, 22, 24, 26, 29, 30, 33, 34, 38, 41, 43, 48, 81, 83], "clear": [16, 23], "larg": [16, 21, 22, 40, 41, 42, 50], "save_world_fram": 16, "de": [16, 50], "frame": [16, 30, 36, 41, 42, 44, 50, 63, 78, 80, 81], "further": [16, 26, 28, 29, 33, 44], "won": 16, "resiz": [16, 42, 47, 53], "rotat": [16, 36, 47, 50, 52, 72, 78], "hide": [16, 84], "shadow": 16, "catcher": 16, "invis": 16, "cast": [16, 38], "cycl": [16, 46], "ideal": [16, 38], "veri": [16, 25, 38, 41], "occlud": [16, 64], "click": [16, 41, 46, 74], "outlin": 16, "verifi": 16, "doe": [16, 29, 30, 38, 41, 45, 48, 50, 52, 55, 67, 80, 83, 84], "expand": [16, 41], "selector": 16, "camera_path_blend": 16, "prompt": [16, 20, 21, 22, 61, 66, 67], "film": 16, "transpar": [16, 28], "over": [16, 21, 22, 24, 41, 44, 48, 49, 52, 53, 63, 66, 67], "align": [16, 26, 41, 47, 50, 52, 60, 64, 80, 84], "textur": [16, 78], "panoram": [16, 41], "panorama": 16, "y": [16, 28, 36, 38, 39, 42, 45, 47, 50, 52, 53, 55, 72, 78, 81], "resolut": [16, 32, 37, 41, 42, 47, 55, 58, 60, 66, 78, 81], "activ": [16, 41, 45, 46, 47, 56, 58, 65], "keyfram": 16, "sequenc": [16, 41, 53, 55], "interpol": [16, 24, 25, 26, 34, 47, 50, 53, 55, 58], "rate": [16, 24, 41, 44, 67, 81], "pivot": 16, "fidel": [16, 60], "too": [16, 24, 41], "convert": [16, 18, 39, 41, 47, 50, 58, 63, 69, 73, 80], "sync": 16, "od": [16, 41], "stereoscopi": [16, 41], "longitud": [16, 41], "min": [16, 26, 37, 38, 41, 69, 74, 78, 80, 81], "90": [16, 41, 45], "mode": [16, 33, 41, 45, 47, 61, 65, 79, 80], "parallel": [16, 41, 42, 44], "interocular": [16, 41], "064": [16, 41], "checkmark": [16, 84], "spheric": [16, 24, 47, 55, 56, 65, 72], "fishey": [16, 52, 80], "orthograph": 16, "walkthrough": 16, "nerfstudiocamera": 16, "viewport": 16, "except": [16, 52], "durat": 16, "adjust": [16, 24, 41, 42, 47, 80], "reflect": 16, "newli": 16, "affect": [16, 45], "sensor": [16, 36, 41, 50], "accumul": [16, 65, 67, 69], "alpha": [16, 47, 50, 60, 63, 64, 65, 67], "open": [16, 26, 41, 46, 84], "accordingli": [16, 41], "around": [16, 20, 36, 38, 44, 46, 47, 50, 63], "copi": [16, 21, 45, 53, 72, 80], "done": [16, 18, 24, 32, 41, 44, 45], "editor": [16, 41], "rescal": [16, 47, 50, 52, 53, 61], "plane": [16, 19, 23, 38, 42, 47, 55, 64, 76, 81], "repres": [16, 19, 24, 25, 28, 29, 31, 33, 34, 36, 40, 41, 44, 50, 52, 55, 72, 74], "deselect": 16, "renam": 16, "previous": 16, "overwrit": 16, "repeat": 16, "recent": [16, 67], "is_cycl": 16, "earlier": 16, "enter": [16, 26, 45], "manual": [16, 41, 45, 49], "png": [16, 41, 42, 48, 81, 83], "jpg": [16, 41], "mp4": [16, 45, 81], "softwar": 16, "adob": 16, "premier": 16, "pro": [16, 41], "lowest": 16, "present": [16, 30, 47, 50], "filter": [16, 66], "matt": [16, 19], "kei": [16, 24, 25, 35, 44], "luma": [16, 19], "enough": [16, 28, 41, 66], "doesn": [16, 22, 24, 28, 41, 52, 66], "motion": [16, 41, 80], "footag": 16, "cube": [16, 30, 40, 41, 50, 59], "wall": 16, "doorwai": 16, "holdout": 16, "interv": [16, 40, 50, 63], "4x4": [16, 50], "matrix": [16, 33, 42, 47, 50, 51, 52, 55, 72], "obtain": [16, 18, 46, 47, 63, 66, 76], "u": [16, 19, 29, 45, 47, 63, 84], "re": [16, 19, 23, 45, 53, 84], "horizont": [16, 41], "angl": [16, 28, 36, 47, 50, 64, 78], "aspect": [16, 41], "ratio": [16, 41, 78, 80], "matric": [16, 47, 50, 52], "smoothness_valu": 16, "divid": [16, 32], "camera_path": [16, 47, 81], "matrix_to_world": 16, "insert": 16, "focal": [16, 36, 42, 47, 50], "length": [16, 21, 36, 39, 40, 42, 47, 49, 50, 52, 53, 59, 63], "websit": [17, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34], "implicit": 17, "reconstruct": [17, 21, 22, 28, 29, 33, 36, 38, 40, 50, 53, 78], "unisurf": 17, "volsdf": 17, "neu": [17, 60, 64], "monosdf": [17, 63, 72], "mono": 17, "geo": [17, 60], "acc": 17, "facto": 17, "neuralreconw": 17, "intend": [17, 55], "integr": [17, 19, 23, 27, 37, 45, 55, 60, 78, 84], "mani": [17, 21, 23, 24, 29, 35, 38, 41, 47, 53, 60, 78, 80], "improv": [17, 24, 26, 29, 30, 33, 38, 44, 84], "back": [17, 24, 42, 50], "cite": [17, 19], "misc": 17, "yu2022sdfstudio": 17, "yu": 17, "zehao": 17, "chen": 17, "anpei": 17, "antic": 17, "bozidar": 17, "peng": 17, "songyou": 17, "bhattacharyya": 17, "apratim": 17, "niemey": 17, "michael": 17, "tang": 17, "siyu": 17, "sattler": 17, "torsten": 17, "geiger": 17, "andrea": 17, "titl": [17, 19, 26], "unifi": [17, 19, 25], "year": [17, 19, 26], "url": [17, 45, 48, 83], "github": [17, 19, 21, 22, 26, 30, 31, 32, 34, 41, 45, 47, 50, 53, 63, 72, 84], "com": [17, 21, 22, 26, 30, 31, 32, 34, 41, 45, 47, 50, 53, 63, 72, 76], "autonomousvis": [17, 72], "fast": [18, 29, 32, 33, 41, 44, 66, 80], "effici": [18, 29, 31, 52], "ckpt": 18, "volinga": 18, "suit": [18, 32, 50], "drag": 18, "readi": [18, 45], "simplifi": [19, 43, 78], "interpret": 19, "modular": [19, 23], "With": [19, 21, 24, 27, 30, 41, 55, 63], "friendli": 19, "explor": 19, "technologi": 19, "build": [19, 41, 45, 76], "commun": [19, 45, 84], "upon": [19, 80], "opensourc": 19, "berkelei": 19, "student": 19, "kair": 19, "lab": 19, "ai": 19, "bair": 19, "octob": 19, "commit": 19, "resourc": 19, "date": 19, "season": 19, "veteran": 19, "thing": [19, 44, 49, 66], "know": [19, 40, 41], "hard": [19, 41], "onboard": 19, "gen": [19, 20], "request": [19, 23, 84], "spankin": 19, "welcom": [19, 23, 84], "hesit": [19, 84], "reach": [19, 24, 65, 84], "team": [19, 84], "question": [19, 39], "discord": [19, 41, 84], "feedback": 19, "love": 19, "fill": 19, "who": [19, 23, 41], "why": [19, 39, 40], "faster": [19, 20, 24, 34, 41, 47, 63, 80], "togeth": [19, 29, 47, 49, 57, 66], "organ": 19, "great": [19, 81], "tour": 19, "nerfologi": [19, 23], "tech": 19, "educ": 19, "notebook": 19, "walk": [19, 21, 22, 28, 29, 46], "better": [19, 20, 23, 29, 32, 34, 38, 41, 47], "terminologi": 19, "neural": [19, 24, 27, 28, 30, 31, 32, 34, 38, 76], "graphic": [19, 24], "primit": [19, 24], "multiresolut": [19, 24], "hash": [19, 29, 40, 55, 58, 59, 60], "encod": [19, 27, 29, 35, 40, 47, 57, 58, 59, 60, 61, 72], "og": 19, "radianc": [19, 25, 26, 27, 28, 30, 31, 32, 33, 34, 63], "multiscal": [19, 24, 27, 32, 63], "anti": [19, 27, 32], "alias": [19, 27, 32], "tensorf": [19, 23, 55, 61, 63], "tensori": [19, 33], "nerf2nerf": [19, 21, 23], "k": [19, 23, 44, 47, 53, 55], "4d": [19, 31, 33, 55], "languag": [19, 26], "nerfbust": [19, 23, 41], "ghostli": [19, 30], "artifact": [19, 28, 29, 30, 38], "casual": 19, "captur": [19, 28, 29, 32, 44, 46, 75, 76, 80], "nerfplay": [19, 23], "stream": [19, 31, 50], "channel": [19, 33, 42, 51, 56, 69, 84], "tetra": [19, 23], "tetrahedra": [19, 34], "gs2g": [19, 23], "3dg": [19, 21], "pynerf": [19, 23], "pyramid": [19, 26, 32, 39], "eager": 19, "even": [19, 29, 33, 36, 41, 67], "offici": [19, 25, 34], "join": [19, 84], "acceler": 19, "ruilong": 19, "li": [19, 24], "writeup": [19, 41], "arxiv": [19, 26, 50, 63, 72], "inproceed": 19, "tancik": [19, 26, 28], "matthew": [19, 26], "weber": 19, "ethan": 19, "ng": 19, "evonn": 19, "kerr": [19, 26], "justin": [19, 26], "wang": 19, "terranc": 19, "kristoffersen": 19, "alexand": 19, "austin": 19, "jake": 19, "salahi": 19, "kamyar": 19, "ahuja": 19, "abhik": 19, "mcallist": 19, "david": 19, "kanazawa": [19, 26], "angjoo": [19, 26], "2023": [19, 26, 76], "booktitl": 19, "acm": 19, "siggraph": [19, 76], "confer": 19, "proceed": [19, 45], "seri": [19, 35, 45], "23": [19, 44], "affili": 19, "uc": 19, "jon\u00e1\u0161": 19, "kulh\u00e1nek": 19, "jkulhanek": [19, 34], "czech": 19, "technic": 19, "univers": 19, "pragu": 19, "matia": 19, "turkulainen": 19, "maturk": 19, "eth": 19, "zurich": 19, "ethanweb": [19, 30, 50], "combin": [20, 21, 22, 25, 29, 47, 49, 53], "latest": [20, 45, 67], "diffus": [20, 21, 22, 30], "stabl": [20, 22, 72], "deepfloyd": 20, "IF": 20, "sign": [20, 43, 60], "licens": [20, 84], "agreement": 20, "card": 20, "huggingfac": 20, "login": 20, "photo": [20, 41], "pineappl": 20, "cach": [20, 45, 49, 53], "hug": 20, "face": [20, 41, 43, 63, 78], "coupl": 20, "minut": [20, 41], "diffusion_model": 20, "stablediffus": 20, "30k": [20, 21], "took": 20, "hour": 20, "ripe": 20, "zoom": 20, "palm": 20, "tree": [20, 76, 80], "light": [20, 41], "grei": 20, "babi": 20, "shark": 20, "2d": [21, 22], "git": [21, 22, 26, 30, 31, 32, 34, 41, 45], "cvachha": 21, "upgrad": [21, 45], "igs2g": 21, "15gb": [21, 22], "colmap": [21, 42, 45, 50, 53, 80], "20k": 21, "nerfstudio_model": [21, 44, 67], "seem": [21, 41], "reliabl": 21, "processed_data_dir": [21, 41], "guidanc": [21, 22], "12": [21, 34, 40, 41, 44, 53], "underli": [21, 22, 55], "demonstr": [21, 22, 44], "realist": [21, 22], "gradual": [21, 22, 44], "viewpoint": [21, 22, 28, 41, 44], "continu": [21, 22, 44], "usual": [21, 22, 32, 38, 44, 45, 50, 72], "5k": 21, "unedit": [21, 22], "attempt": [21, 22], "consist": [21, 22, 25, 36, 38, 42, 52, 63, 72, 84], "snippet": [21, 22], "him": 21, "marbl": 21, "statu": 21, "pix2pix": 21, "cours": 21, "udpat": 21, "scheme": [21, 24, 28, 31], "sequenti": [21, 80], "span": 21, "holist": 21, "noisi": [21, 38], "nois": [21, 22], "receiv": 21, "propag": 21, "gsplat": 21, "adapt": [21, 47, 72], "among": 21, "amount": [21, 64], "therefor": [21, 24, 38, 41], "signal": 21, "retain": 21, "vari": [21, 22, 28], "classifi": [21, 22], "free": [21, 22, 41], "rang": [21, 28, 37, 38, 47, 52, 55, 60], "l1": [21, 63], "lpip": [21, 22], "maximum": [21, 47, 48, 52, 55, 60, 66, 67, 69, 72, 74, 78, 81, 83], "27": [21, 60], "subject": 21, "decis": [21, 28], "subtl": 21, "extrem": 21, "stage": 21, "page": [21, 22, 23, 26, 28, 30], "ayaanzhaqu": 22, "in2n": 22, "three": [22, 26, 31, 32, 34, 47, 55, 69], "variant": [22, 26, 29, 31, 34], "small": [22, 25, 29, 41, 53, 64, 72], "half": [22, 29, 64], "precis": [22, 47, 67], "12gb": [22, 29, 45], "tini": [22, 29], "previs": 22, "10gb": 22, "ok": [22, 26], "prior": [22, 25, 28, 30, 45, 64], "tradition": 22, "strength": 22, "normal": [22, 26, 28, 43, 47, 49, 50, 51, 52, 56, 60, 61, 63, 65, 69, 71, 72, 78, 81], "timestep": 22, "slowli": [22, 41], "denois": [22, 30], "predict": [22, 24, 28, 29, 30, 38, 43, 47, 56, 60, 63, 65, 72], "until": [22, 84], "fulli": [22, 24, 25, 52], "been": [22, 24, 41, 49, 52, 80], "importantli": 22, "sourc": [22, 41, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 81], "balanc": [22, 80], "earli": 22, "inconsist": 22, "depict": 22, "evolv": 22, "becom": 22, "tradit": [22, 24, 41], "score": [22, 30, 49, 80], "sd": 22, "dreamfus": 22, "discret": 22, "degre": [22, 74], "lead": [22, 26, 29], "higher": [22, 24, 28, 29, 41], "pre": [23, 26, 30, 50, 66, 67, 84], "techniqu": [23, 24, 28, 29], "generfacto": 23, "relat": [23, 28], "markdown": 23, "doc": [23, 45, 84], "md": 23, "externalmethod": 23, "external_method": 23, "layout": [23, 39, 40, 63], "ect": [23, 44], "treat": [23, 42, 69], "blog": 23, "post": 23, "asset": 23, "host": [23, 45, 46, 48, 83], "elsewher": 23, "break": [24, 84], "pillar": 24, "algorithm": [24, 43, 47, 80], "march": [24, 64], "occup": [24, 30, 32, 64], "smaller": [24, 26, 33], "fuse": [24, 29, 41], "idea": [24, 38, 45, 49, 72], "behind": [24, 30], "skip": [24, 60, 64, 66, 80], "coars": [24, 27, 29, 32, 66], "mark": 24, "non": [24, 41, 45, 74], "bit": [24, 41, 42, 49, 53], "low": [24, 25, 30, 33], "independ": 24, "trainabl": 24, "increas": [24, 29, 40, 41, 44, 45], "100x": 24, "compar": [24, 33], "naiv": [24, 52], "nerfacc": 24, "discuss": [24, 28, 29, 84], "bottleneck": 24, "shrunk": 24, "neuron": 24, "10x": 24, "tensorflow": 24, "tinycudann": [24, 45], "speedup": [24, 45], "1000x": 24, "matter": 24, "second": [24, 30, 31, 41, 42, 44, 47, 64, 81], "map": [24, 26, 43, 45, 47, 50, 51, 53, 55, 58, 60, 63, 66, 67, 72, 80], "flow": 24, "l": [24, 26, 38, 41, 46, 53, 63], "surround": [24, 50], "voxel": [24, 28, 30, 33, 59], "linearli": [24, 64], "concaten": [24, 47, 81], "thu": 24, "backpropag": [24, 29], "gradient": [24, 29, 44, 60, 63, 66, 67], "smooth": [24, 43, 46], "collis": 24, "explicitli": 24, "highest": [24, 43], "domin": 24, "tradeoff": [24, 48, 83], "tabl": [24, 37, 45], "harmon": [24, 55, 56, 65, 72], "mlp": [24, 25, 29, 34, 57, 60, 61, 66], "were": 24, "inspir": [24, 26, 64], "lastli": 24, "cover": [24, 45], "strictli": 24, "known": [24, 28, 38, 45], "hyper": 24, "explicit": [25, 50, 63], "kplane": 25, "dnerf": [25, 50, 61], "tune": [25, 26, 32, 41], "synthet": [25, 32], "4gb": 25, "monocular": [25, 50, 63, 72], "5gb": [25, 32], "certain": [25, 45], "usag": [25, 45, 49, 76, 77, 78, 79, 80, 81, 82, 83], "flexibl": [25, 26], "kind": 25, "regular": [25, 26, 30, 31, 47], "hybrid": [25, 31], "linear_decod": 25, "decompos": [25, 31], "clip": [26, 50, 67], "volumetr": [26, 28, 34, 39, 65], "natur": 26, "kerrj": 26, "big": [26, 29, 44], "openclip": 26, "vit": 26, "22": [26, 34, 45], "gb": 26, "16": [26, 42, 44, 45, 53, 55, 58, 60, 66], "lite": 26, "less": [26, 32, 41, 78], "nvidia": [26, 44, 45], "2080": 26, "experiment": [26, 41], "fine": [26, 27, 28, 66], "long": [26, 46, 47, 81], "tail": 26, "vocabulari": 26, "hierarch": [26, 28], "volum": [26, 30, 32, 40, 63, 78], "dens": [26, 28, 29, 38, 50], "dff": 26, "dino": 26, "qualit": 26, "boundari": [26, 50], "sensit": 26, "floater": [26, 30], "extract": [26, 41, 43, 47, 50, 60, 78], "relevancy_0": 26, "textbox": 26, "articl": 26, "lerf2023": 26, "kim": 26, "chung": 26, "goldberg": 26, "ken": 26, "journal": 26, "preprint": 26, "2303": 26, "09553": 26, "primari": [27, 82], "pe": 27, "ip": [27, 46], "account": [27, 28, 53], "vanilla": [28, 49, 61, 66], "arriv": 28, "site": 28, "least": [28, 30, 67, 72, 73], "heard": 28, "synthesi": 28, "mildenhal": 28, "srinivasan": 28, "et": [28, 63], "al": [28, 63], "2020": 28, "task": [28, 38, 45], "choic": [28, 76, 78, 79, 80, 81, 83], "henc": 28, "debugg": 28, "hand": [28, 30, 38, 41], "broken": 28, "fail": [28, 45], "excess": 28, "geometri": [28, 30], "constant": [28, 32], "exposur": 28, "concret": 28, "opaqu": 28, "vanilla_nerf_field": [28, 60], "nerffield": [28, 60, 61], "field_coars": 28, "position_encod": [28, 60], "pos_enc": 28, "direction_encod": [28, 60], "dir_enc": 28, "field_fin": 28, "trick": [28, 38], "express": [28, 55, 78], "z": [28, 39, 42, 47, 50, 52, 55, 78], "theta": [28, 37], "phi": [28, 37], "being": [28, 32, 45, 46, 49, 53, 55, 65], "field_compon": [28, 37, 40, 54, 55, 56, 58, 59, 60], "nerfencod": [28, 37, 55, 57, 61], "in_dim": [28, 37, 54, 55, 56, 58], "num_frequ": [28, 37, 55], "min_freq_exp": [28, 37, 55], "max_freq_exp": [28, 37, 55], "include_input": [28, 37, 55], "classic": [28, 44, 60], "kajiya": 28, "1984": 28, "composit": [28, 41, 48, 65, 83], "happen": [28, 47], "photoshop": 28, "opac": [28, 38, 40, 64, 65, 66], "rend": 28, "white": [28, 42, 50, 65, 66], "get_weight": [28, 47, 61, 65], "design": [28, 44, 49], "strategi": [28, 32, 47, 64], "advantag": 28, "uniform": [28, 38, 55, 64, 66], "pdf": [28, 63, 64, 72], "evenli": [28, 80], "predefin": [28, 38, 40], "correl": 28, "bias": [28, 44, 63], "surfac": [28, 29, 60, 78], "pdfsampler": [28, 38, 61, 62, 64], "uniformsampl": [28, 38, 61, 62, 64], "sampler_uniform": 28, "num_sampl": [28, 38, 39, 40, 47, 60, 63, 64, 65], "num_coarse_sampl": [28, 38, 61, 66], "ray_samples_uniform": 28, "sampler_pdf": 28, "num_importance_sampl": [28, 61, 66], "field_outputs_coars": 28, "weights_coars": 28, "ray_samples_pdf": 28, "unbound": [28, 32, 38, 40, 59, 64], "devic": [28, 29, 41, 44, 47, 48, 49, 52, 53, 61, 65, 66, 67, 73], "ndc": 28, "warp": [28, 40, 47, 66], "linear": [28, 38, 47, 55, 58, 60, 67], "dispar": [28, 38, 47, 63, 64], "spatial": [28, 35, 49, 55, 57, 60, 61], "stratifi": [28, 64], "unmodifi": 28, "mic": 28, "ficu": 28, "chair": 28, "hotdog": 28, "materi": 28, "drum": 28, "ship": [28, 43], "lego": [28, 50], "33": [28, 67], "76": [28, 44], "31": 28, "98": [28, 44], "34": [28, 44], "35": [28, 44], "36": 28, "57": [28, 44], "00": [28, 44], "25": [28, 44, 80], "11": [28, 34, 44, 45, 63], "29": [28, 44], "87": 28, "46": 28, "32": [28, 42, 52, 53, 55, 60, 63, 64, 66, 72], "tf": 28, "91": [28, 44], "30": [28, 41, 47, 53], "13": [28, 53], "18": [28, 44, 45, 60], "62": [28, 44], "01": [28, 37, 47, 64, 66], "28": [28, 44], "65": [28, 44], "54": 28, "04": [28, 45], "jaxnerf": 28, "53": 28, "43": 28, "92": [28, 44], "03": 28, "69": [28, 44], "defacto": 29, "6gb": 29, "larger": [29, 34, 37, 41, 44, 84], "slower": [29, 44, 55, 80], "huge": 29, "24gb": 29, "slowest": 29, "act": 29, "publish": [29, 34], "prerequisit": 29, "contract": [29, 32, 59, 60, 66], "uncommon": 29, "error": [29, 45, 50, 53, 61, 67, 84], "acquir": 29, "phone": 29, "record3d": 29, "io": [29, 41, 63], "misalign": 29, "cloudi": 29, "reduct": [29, 63, 69], "sharp": [29, 63], "alloc": [29, 42, 44, 64], "uniformli": [29, 47, 52, 64], "frustum": [29, 30, 38, 40, 47, 48, 60, 61, 72, 83], "themselv": 29, "distant": 29, "still": [29, 30, 35, 44, 45, 46, 52, 73], "nearbi": 29, "consolid": [29, 35, 72], "intersect": [29, 30, 47, 55, 72], "greatli": 29, "varieti": 29, "suffici": [29, 36, 41], "accuraci": [29, 80], "chain": 29, "diminish": 29, "decreas": [29, 78], "simplif": 29, "littl": [29, 39, 49], "impact": 29, "frequenc": [29, 55], "tldr": 30, "clean": [30, 49, 67, 84], "procedur": [30, 65], "wild": 30, "checkout": 30, "readm": 30, "suffer": 30, "flaw": 30, "outsid": [30, 40], "8th": 30, "hinder": 30, "trajectori": [30, 41, 47, 81], "craft": 30, "nor": 30, "challeng": [30, 40], "succe": 30, "binar": 30, "dsd": 30, "penal": 30, "push": 30, "occupi": 30, "seen": 30, "streamabl": 31, "lsongx": 31, "backbon": 31, "spatiotempor": 31, "accord": [31, 47, 64], "tempor": [31, 66], "characterist": 31, "belong": [31, 64], "categori": 31, "deform": 31, "todo": [31, 53, 54, 57, 61, 66], "unimpl": 31, "scatter": [32, 38], "hturki": 32, "pyg": 32, "org": [32, 45, 50, 63, 72], "whl": [32, 45], "torch_vers": 32, "html": [32, 84], "multicam": 32, "outdoor": [32, 40], "indoor": [32, 50, 60], "usal": 32, "assum": [32, 37, 42, 47, 50, 63, 65, 66, 80], "roughli": 32, "degrad": 32, "blurri": [32, 41], "constrain": 32, "due": [32, 41, 80], "unawar": 32, "address": [32, 48, 83], "finer": 32, "close": [32, 38, 41, 45, 46, 47, 72], "multi": [33, 45, 55, 58, 60, 67], "compact": 33, "rank": [33, 48, 63, 67], "cp": [33, 55], "vm": [33, 55], "decomposit": [33, 55], "significantli": [33, 41, 55], "reduc": [33, 38, 41, 43, 55, 72], "footprint": 33, "directli": [33, 41, 76], "plenoxel": 33, "plenoctre": 33, "enhanc": [33, 84], "sfm": [34, 80], "pointcloud": [34, 43, 44], "triangul": 34, "optix": 34, "6": [34, 36, 37, 42, 44, 47, 50, 53, 55, 72, 73], "cgal": 34, "cmake": 34, "tetranerf": 34, "process_imag": 34, "spars": [34, 38, 80], "ply": [34, 43, 78], "th": 34, "18gb": 34, "16gb": 34, "estim": [34, 41, 60, 63, 72, 78], "1m": 34, "barycentr": 34, "shallow": 34, "colour": 34, "comparison": 34, "public": [34, 72], "tank": [34, 76], "templ": [34, 76], "difficult": [35, 41], "nugget": 35, "buri": 35, "academ": 35, "concept": 35, "intern": [36, 41, 47, 63, 72, 80], "lens": 36, "extern": [36, 41, 80], "simplest": 36, "approxim": [36, 39, 41, 47, 72, 80], "pinhol": [36, 47], "cx": [36, 39, 42, 47], "cy": [36, 39, 42, 47], "fx": [36, 39, 47], "fy": [36, 39, 47], "collaps": [36, 37, 38, 39, 40, 84], "cameratyp": [36, 39, 47, 61], "plotly_util": [36, 39], "20": [36, 38, 41, 48, 50, 56], "c2w": [36, 39, 47], "camera_typ": [36, 39, 41, 47], "fig": [36, 38, 39, 40], "vis_camera_rai": 36, "edg": [36, 47, 50, 63], "wide": 36, "desir": [36, 44], "aren": 36, "caus": [36, 38, 42, 44], "benefici": 36, "k_1": 36, "k_2": 36, "k_3": 36, "k_4": 36, "radial": [36, 42, 47], "p_1": 36, "p_2": 36, "tangenti": [36, 42, 47], "introduc": [37, 41, 84], "opper": [37, 40], "mediapi": 37, "media": 37, "128": [37, 55, 60, 66, 78], "covariance_magnitud": 37, "x_sampl": 37, "linspac": [37, 38, 39, 40], "stack": [37, 41, 47, 63], "meshgrid": 37, "ij": 37, "dim": [37, 40, 47, 54, 63, 69, 72], "encoded_valu": 37, "show_imag": 37, "moveaxi": 37, "cmap": 37, "plasma": 37, "border": [37, 80], "vmin": 37, "vmax": 37, "covari": [37, 55, 72], "magnitud": [37, 38], "cov": [37, 55, 72], "rffencod": [37, 55, 57, 61], "incod": 37, "num_level": [37, 55, 58, 60, 61, 66], "min_r": [37, 55, 58], "max_r": [37, 55, 58, 60, 61, 66], "log2_hashmap_s": [37, 55, 58, 60, 61, 66], "slice": 37, "fix": [37, 40, 45, 49, 53, 64, 84], "features_per_level": [37, 55, 58, 60, 61, 66], "hashencod": [37, 55, 57, 61], "hash_init_scal": [37, 55, 58], "grid_slic": 37, "encoded_values_slic": 37, "encoded_imag": 37, "detach": 37, "numpi": [37, 53], "0010": 37, "grad_fn": 37, "maxbackward1": 37, "minbackward1": 37, "mostli": 37, "150": 37, "shencod": [37, 55, 57, 61], "pi": [37, 38], "xy": [37, 42, 53], "co": 37, "sin": [37, 38, 72], "aggreg": 38, "parameter": [38, 72], "decid": [38, 47], "unfortun": [38, 41], "cost": 38, "On": 38, "sens": 38, "perturb": 38, "pertub": 38, "overal": 38, "statist": 38, "prevent": [38, 45, 64], "overfit": 38, "emploi": 38, "round": 38, "histogram": [38, 63], "plotli": [38, 39, 40], "graph_object": [38, 39, 40], "subplot": 38, "make_subplot": 38, "train_stratifi": [38, 64], "lineardisparitysampl": [38, 61, 62, 64], "sqrtsampler": [38, 61, 62, 64], "logsampl": [38, 61, 62, 64], "row": [38, 42, 48, 63, 74], "col": 38, "subplot_titl": 38, "squar": [38, 39, 44, 52, 64, 72], "root": [38, 45, 50, 64], "shared_xax": 38, "shared_yax": 38, "vertical_spac": 38, "enumer": [38, 40], "nears": [38, 47, 61], "generate_ray_sampl": [38, 61, 62, 64], "nbinsx": 38, "50": 38, "append_trac": 38, "update_yax": 38, "title_text": 38, "update_xax": 38, "overlai": 38, "update_layout": 38, "700": [38, 44], "hovermod": 38, "showlegend": 38, "margin": [38, 55], "r": [38, 47, 52, 61, 72], "80": [38, 44, 45], "update_trac": 38, "arbitrari": [38, 47, 49, 69], "uniform_sampl": 38, "pdf_sampler": [38, 64], "include_origin": [38, 64], "coarse_ray_sampl": 38, "stuff": 38, "pdf_trace": 38, "samples_trac": 38, "400": 38, "conic": [39, 47, 72], "unit": [39, 40, 47], "Not": [39, 47, 55, 58, 80], "alvi": 39, "smith": 39, "dx": 39, "dy": 39, "neighbor": [39, 63], "bin": [39, 40, 45, 47, 63, 64], "get_ray_sampl": [39, 47, 61], "bin_start": [39, 47], "bin_end": [39, 47], "vis_rai": 39, "get_ray_bundle_lin": 39, "teal": 39, "get_frustums_mesh_list": 39, "webdocs_layout": [39, 40], "get_posit": [39, 47, 61], "get_frustum_point": 39, "appoxim": 39, "get_gaussian_blob": [39, 40, 47, 61], "get_gaussian_ellipsoids_list": [39, 40], "flatten": [39, 47, 61, 71, 73], "void": [40, 53], "wish": [40, 44], "emit": 40, "notion": 40, "room": [40, 41, 80], "properli": [40, 45, 84], "1km": 40, "ball": 40, "radiu": [40, 47, 52, 59, 61, 63, 72, 80, 81], "wherea": 40, "equat": [40, 59, 63], "leq": [40, 59], "frac": [40, 59], "95": [40, 44], "confid": 40, "multivari": [40, 72], "explain": [40, 42, 44], "sphere": [40, 59, 60], "rand": 40, "randn": 40, "norm": [40, 47, 59, 60, 63, 67], "keepdim": 40, "get_random_color": 40, "idx": 40, "append": [40, 44, 55], "get_spher": 40, "111111": 40, "l_2": 40, "scenecontract": [40, 57, 59, 61], "contracted_gaussian": 40, "l_": 40, "infti": [40, 63], "downstream": 40, "inf": [40, 50, 59], "get_cub": 40, "side_length": 40, "fun": 41, "lidar": [41, 63, 80], "android": 41, "oak": 41, "glass": 41, "assist": [41, 49], "compat": [41, 42], "ffmpeg": [41, 80, 81], "quickstart": 41, "finicki": 41, "overlap": 41, "suggest": [41, 45, 63], "eval_data_path": 41, "issu": [41, 44, 45, 46, 64, 84], "feel": 41, "ask": 41, "linux": [41, 45], "conda": [41, 45, 84], "forg": [41, 84], "successfulli": 41, "h": [41, 42, 44, 47, 51, 53, 76, 77, 78, 79, 80, 81, 83], "vkpg": 41, "clone": [41, 45, 75], "microsoft": [41, 45], "vcpkg": 41, "bootstrap": 41, "x64": 41, "cpu": [41, 47, 48, 49, 52, 53], "osx": 41, "bat": 41, "avoid": [41, 45, 48, 72, 83], "robust": [41, 63], "drift": 41, "arkit": 41, "slam": 41, "blur": [41, 80], "Or": 41, "shutter": 41, "iphon": [41, 50, 80], "ipad": [41, 80], "navig": [41, 44, 46, 82], "tap": 41, "pane": 41, "raw": [41, 80, 81], "zip": 41, "output_fil": 41, "toggl": [41, 46], "menu": [41, 80], "dev": [41, 45, 84], "sent": [41, 53], "email": 41, "unzip": 41, "finish": [41, 73], "exr": 41, "sdk": 41, "realsens": 41, "d455": 41, "d435i": 41, "azur": 41, "kinect": 41, "dk": 41, "imu": 41, "tof": 41, "vislam": 41, "pure": 41, "monoton": 41, "narrow": 41, "spectacularai": 41, "preview3d": 41, "key_frame_dist": 41, "preview": [41, 46], "5cm": 41, "scan": [41, 50], "slow": 41, "trade": 41, "No": [41, 45], "xml": [41, 80], "csv": [41, 80], "odm_report": 41, "odm_orthophoto": 41, "projectaria_tool": [41, 80], "projectaria": 41, "percept": 41, "servic": 41, "mp": [41, 48], "taken": [41, 47], "insta360": 41, "equirect": [41, 80], "isn": [41, 47, 74], "troubl": 41, "held": 41, "head": [41, 57, 60, 61], "unwant": 41, "rule": [41, 84], "tend": 41, "portion": [41, 46, 80], "person": [41, 76], "obvious": 41, "slight": 41, "180": 41, "deg": 41, "unlik": [41, 55, 74], "displai": [41, 44, 48, 83], "front": [41, 47, 50], "life": 41, "ipd": 41, "viewabl": 41, "unview": 41, "64mm": 41, "accur": [41, 80], "4096x2048": 41, "2048x1024": 41, "4096x4096": 41, "2048x2048": 41, "jpeg": [41, 42, 48, 81, 83], "clearer": 41, "1x1x1": 41, "cylind": [41, 72], "movement": 41, "render_height": 41, "render_width": 41, "almost": 41, "discern": 41, "lower": [41, 55, 66], "headset": 41, "exponenti": [41, 47, 67], "temporari": 41, "stationari": 41, "preliminari": 41, "vr_ipd": 41, "mm": 41, "opengl": [42, 50], "opencv": [42, 47, 50], "ax": [42, 47, 55], "flip": 42, "axi": [42, 47, 50, 52, 55, 60, 64, 72, 78, 81], "red": 42, "green": [42, 84], "blue": 42, "explan": [42, 61], "share": [42, 49, 83], "camera_model": 42, "opencv_fishey": 42, "fl_x": 42, "1072": 42, "fl_y": 42, "1068": 42, "1504": 42, "princip": [42, 47], "3008": 42, "2000": [42, 44], "k1": [42, 47], "0312": 42, "k2": [42, 47], "0051": 42, "k3": [42, 47], "0006": 42, "third": [42, 47], "k4": [42, 47], "0001": [42, 66, 72], "fourth": [42, 47], "p1": [42, 47], "47e": 42, "p2": [42, 47], "37e": 42, "1234": 42, "column": [42, 50, 63, 72], "last": 42, "homogen": [42, 47], "file_path": 42, "frame_00001": 42, "transform_matrix": 42, "x0": 42, "y0": 42, "z0": 42, "x1": 42, "y1": [42, 63], "z1": 42, "x2": 42, "y2": 42, "z2": 42, "info": [42, 63, 72], "depth_file_path": 42, "polyform": 42, "unknown": 42, "shape": [42, 47, 50, 51, 53, 54, 55, 56, 60, 61, 65, 71, 72, 73], "ineffici": 42, "peopl": 42, "mask_path": 42, "met": 42, "black": [42, 49, 65, 66, 80], "obj": 43, "truncat": 43, "output_dir": [43, 67], "offlin": 43, "filetyp": 43, "pymeshlab": 43, "xatla": [43, 78], "unwrap": [43, 78], "uv": [43, 78], "link": [44, 46, 66, 73], "webview": 44, "remot": 44, "pretrain": 44, "refin": [44, 80], "satisfi": 44, "modal": [44, 50], "kill": [44, 48, 83], "yellow": 44, "power": 44, "minor": 44, "quirk": 44, "subcommand": [44, 46], "four": 44, "alongsid": 44, "stutter": 44, "path_to_config": 44, "_num_rays_per_batch": 44, "aspen": [44, 76], "8192": 44, "cuda_visible_devic": 44, "4096": [44, 52, 66], "observ": 44, "70k": 44, "sec": [44, 48], "v100": [44, 45], "eta": [44, 48], "610": 44, "61": [44, 45], "115": 44, "968": 44, "72": 44, "68": 44, "620": 44, "908": 44, "58": 44, "630": 44, "63": 44, "907": 44, "73": 44, "640": 44, "937": 44, "59": 44, "71": 44, "650": 44, "853": 44, "49": 44, "660": 44, "66": 44, "710": 44, "85": 44, "670": 44, "67": 44, "797": 44, "42": [44, 48], "680": 44, "783": 44, "39": 44, "81": 44, "690": 44, "756": 44, "70": [44, 45], "755": 44, "throughput": 44, "100k": 44, "1910": 44, "79": 44, "623": 44, "104": 44, "1920": 44, "083": 44, "105": 44, "1930": 44, "93": 44, "092": 44, "48": [44, 60, 66], "1940": 44, "94": 44, "364": 44, "21": 44, "1950": 44, "327": 44, "38": 44, "1960": 44, "96": [44, 66], "473": 44, "51": 44, "09": [44, 69], "1970": 44, "97": 44, "334": 44, "37": [44, 45], "26": 44, "1980": 44, "200": 44, "1990": 44, "99": 44, "264": 44, "168": 44, "40": 44, "eventu": 44, "satur": 44, "desktop": 45, "buildtool": 45, "functorch": 45, "uninstal": [45, 79], "torchvis": 45, "cu118": 45, "toolkit": 45, "label": [45, 50], "cu117": 45, "ninja": 45, "bind": [45, 48, 83], "nvlab": 45, "subdirectori": 45, "bash": 45, "zsh": 45, "rerun": [45, 84], "compil": 45, "driver": 45, "dromni": 45, "dockerfil": 45, "restrict": 45, "architectur": 45, "cuda_architectur": 45, "geforc": 45, "30xx": 45, "cuda_vers": 45, "86": 45, "os_vers": 45, "id": [45, 50, 53, 61], "suspect": 45, "user_id": 45, "strongli": 45, "abus": 45, "privileg": 45, "workspac": 45, "mount": 45, "home": [45, 50], "your_us": 45, "everytim": 45, "p": 45, "ui": 45, "rm": 45, "shm": 45, "limit": 45, "mb": 45, "hub": 45, "OR": 45, "yourself": 45, "besid": 45, "smapl": 45, "backslash": 45, "unix": 45, "frontslash": 45, "escap": 45, "charact": 45, "folder1": 45, "folder2": 45, "quot": 45, "local_fold": 45, "docker_fold": 45, "perman": 45, "destroi": 45, "workdir": 45, "devel": 45, "ubuntu22": 45, "consequ": 45, "ubuntu": 45, "python3": 45, "older": 45, "autom": 45, "discard": 45, "tinycudnn": 45, "89": 45, "75": [45, 48, 83], "52": 45, "ipc": 45, "hardwar": 45, "arch": 45, "h100": 45, "40x0": 45, "30x0": 45, "a100": 45, "20x0": 45, "titan": 45, "10x0": 45, "xp": 45, "9x0": 45, "k80": 45, "importerror": 45, "dll": 45, "_89_c": 45, "mismatch": 45, "toolset": 45, "runtim": 45, "len": 45, "occur": 45, "reinstal": 45, "tcnn_cuda_architectur": 45, "xx": 45, "4090": 45, "detect": [45, 50, 74], "confirm": 45, "2019": 45, "v11": 45, "visual_studio_integr": 45, "msbuildextens": 45, "x86": 45, "msbuild": 45, "vc": 45, "v160": 45, "buildcustom": 45, "profession": 45, "enterpris": 45, "ctype": 45, "_c": 45, "contractiontyp": 45, "typeerror": 45, "nonetyp": 45, "callabl": [45, 47, 49, 53, 56, 64, 67, 74], "backend": 45, "problem": [45, 47], "cuda_hom": 45, "usr": 45, "ld_library_path": 45, "lib64": 45, "cupti": 45, "preprocess": 46, "introduct": 46, "spline": 46, "hack": 46, "browser": 46, "traffic": 46, "secur": 46, "tunnel": 46, "ssh": 46, "session": 46, "usernam": 46, "vscode": 46, "ti": 46, "batch_c2w": 47, "union": [47, 49, 52, 53, 56, 59, 64, 65, 66, 70, 73], "batch_fx": 47, "batch_fi": 47, "batch_cx": 47, "batch_ci": 47, "batch_w": 47, "batch_h": 47, "distortion_param": [47, 50], "batch_dist_param": 47, "batch_cam_typ": 47, "num_camera": 47, "broadcast": [47, 73], "coeffici": [47, 65, 72], "thin": 47, "prism": 47, "fisheye624": 47, "mimic": 47, "num_cameras_batch_dim": 47, "coord": 47, "camera_opt_to_camera": 47, "distortion_params_delta": 47, "keep_shap": 47, "disable_distort": 47, "aabb_box": 47, "obb_box": [47, 66], "orientedbox": [47, 52, 61, 66, 72], "_generate_rays_from_coord": 47, "pars": [47, 53, 70], "docstr": [47, 84], "concern": 47, "deal": [47, 52], "isinst": 47, "noth": [47, 54], "jag": 47, "problemat": 47, "alreadi": 47, "whole": 47, "regardless": 47, "prepend": 47, "delta": [47, 61, 64], "behavior": 47, "get_image_coord": [47, 61], "pixel_offset": 47, "offset": [47, 55, 61], "0th": 47, "get_intrinsics_matric": [47, 61], "image_height": [47, 51, 52, 61], "image_width": [47, 51, 52, 61], "is_jag": [47, 61], "rescale_output_resolut": [47, 61], "scaling_factor": 47, "to_json": [47, 61], "camera_idx": 47, "max_siz": 47, "base64": 47, "string": [47, 48, 53, 58, 65, 70, 72], "cameraoptim": [47, 61], "non_trainable_camera_indic": 47, "num_non_trainable_camera": 47, "kwarg": [47, 48, 49, 50, 52, 53, 59, 64, 65, 66, 67], "apply_to_camera": [47, 61], "apply_to_raybundl": [47, 61], "param": [47, 49, 50, 51, 53, 61, 63, 64, 67, 72], "get_correction_matric": [47, 61], "param_group": [47, 67], "factori": [47, 48, 49, 50, 52, 60, 63, 66, 67], "so3xr3": 47, "se3": 47, "trans_l2_penalti": [47, 61], "rot_l2_penalti": [47, 61], "optimizerconfig": [47, 61, 67], "schedulerconfig": [47, 61, 67], "deprec": [47, 49], "penalti": 47, "translat": [47, 50, 52, 72], "get_interpolated_camera_path": [47, 61], "order_pos": 47, "get_path_from_json": [47, 61], "get_spiral_path": [47, 61], "radius": 47, "rot": 47, "zrate": 47, "spiral": 47, "radii": [47, 72], "camera_util": 47, "auto_orient_and_center_pos": [47, 61], "num_pos": [47, 50], "smallest": [47, 55, 58], "mobil": 47, "robot": 47, "arrai": [47, 53, 72], "llff": 47, "attent": 47, "closest": [47, 69, 81], "optic": 47, "inward": 47, "focus_of_attent": [47, 61], "initial_focu": 47, "get_distortion_param": [47, 61], "get_interpolated_k": [47, 61], "k_a": 47, "k_b": 47, "get_interpolated_pos": [47, 61], "pose_a": 47, "ndarrai": [47, 50, 51], "dtype": [47, 51], "_scalartype_co": 47, "pose_b": 47, "get_interpolated_poses_mani": [47, 61], "steps_per_transit": 47, "transit": 47, "euclidian": 47, "get_ordered_poses_and_k": [47, 61], "normalize_with_norm": [47, 61], "quaternion_from_matrix": [47, 61], "isprecis": 47, "quaternion": [47, 50], "quaternion_matrix": [47, 61], "quaternion_slerp": [47, 61], "quat0": 47, "quat1": 47, "spin": 47, "shortestpath": 47, "closer": [47, 66], "short": 47, "radial_and_tangential_undistort": [47, 61], "max_iter": 47, "undistort": [47, 80], "multinerf": [47, 63, 72], "blob": [47, 50, 53, 63, 72], "b02228160d3179300c7d499dca28cb9ca3677f32": [47, 63], "l477": 47, "l509": 47, "epsilon": [47, 67, 69, 72], "rotation_matrix": [47, 61], "unit_vector": [47, 61], "euclidean": [47, 72], "np": 47, "viewmatrix": [47, 61], "lookat": 47, "po": [47, 52], "upward": 47, "oper": [47, 52, 53], "lie_group": 47, "exp_map_se3": [47, 61], "tangent_vector": 47, "se": 47, "tangent": [47, 72], "exp_map_so3xr3": [47, 61], "product": [47, 55], "datastructur": 47, "guassian": 47, "classmethod": [47, 50, 55, 58, 65], "get_mock_frustum": [47, 61], "placehold": 47, "meaningless": 47, "mass": 47, "get_start_posit": [47, 61], "set_offset": [47, 61], "jaxtyp": [47, 50, 52], "latent_dim": 47, "spacing_start": [47, 61], "spacing_end": [47, 61], "spacing_to_euclidean_fn": [47, 61], "get_row_major_sliced_ray_bundl": [47, 61], "start_idx": 47, "end_idx": 47, "chunk": [47, 48, 66, 81], "subset": [47, 50, 76], "set_camera_indic": [47, 61], "camera_index": 47, "get_weights_and_transmittance_from_alpha": [47, 61], "weights_onli": 47, "mayb": [47, 49], "sdf": [47, 61, 64, 78], "transmitt": 47, "relev": [47, 49], "printableconfig": [48, 61, 67], "train_rays_per_sec": 48, "curr_test_psnr": 48, "vis_rays_per_sec": 48, "test_rays_per_sec": 48, "els": 48, "banner_messag": 48, "loggingconfig": [48, 61, 67], "relative_log_dir": [48, 61], "pathlib": [48, 49, 50], "posixpath": [48, 50, 67], "steps_per_log": [48, 61], "max_buffer_s": [48, 61], "local_writ": [48, 61], "histori": 48, "past": 48, "occurr": 48, "machineconfig": [48, 61, 67], "seed": [48, 61], "num_devic": [48, 61], "num_machin": [48, 61], "machine_rank": [48, 61], "dist_url": [48, 61], "device_typ": [48, 61], "printabl": 48, "viewerconfig": [48, 61, 67], "relative_log_filenam": [48, 61], "viewer_log_filenam": [48, 83], "txt": [48, 83], "websocket_port": [48, 61, 83], "websocket_port_default": [48, 61], "websocket_host": [48, 61], "num_rays_per_chunk": [48, 61], "32768": [48, 78], "max_num_display_imag": [48, 61], "512": [48, 83], "quit_on_train_complet": [48, 61], "image_format": [48, 61], "jpeg_qual": [48, 61], "make_share_url": [48, 61], "camera_frustum_scal": [48, 61], "default_composite_depth": [48, 61], "occlus": [48, 81, 83], "lossi": [48, 83], "compress": [48, 83], "lossless": [48, 83], "shareabl": [48, 83], "viewer_beta": [48, 83], "beta": [48, 52, 56, 60, 65, 83], "lag": [48, 83], "base_datamanag": 49, "monolith": 49, "latent": [49, 66], "especi": 49, "learnabl": [49, 60], "attach": 49, "auxiliari": 49, "rational": 49, "paradigm": 49, "beyond": 49, "learnt": 49, "setup_train": [49, 61], "iter_train": [49, 61], "__iter__": [49, 53, 61], "__next__": [49, 53, 61], "get_train_iter": [49, 61], "setup_ev": [49, 61], "iter_ev": [49, 61], "get_eval_iter": [49, 61], "increment": 49, "eval_count": [49, 61], "train_dataset": [49, 61], "eval_dataset": [49, 61], "includes_tim": [49, 50, 61], "subclass": [49, 55, 66], "blank": 49, "get_datapath": [49, 61], "iterablewrapp": 49, "trivial": 49, "someth": 49, "constructor": [49, 56], "get_eval_rays_per_batch": [49, 61], "get_train_rays_per_batch": [49, 61], "groundtruth": 49, "datamanagerconfig": [49, 52, 61], "masks_on_gpu": [49, 61], "images_on_gpu": [49, 61], "expens": 49, "test_mod": [49, 67], "val": [49, 67, 81], "world_siz": [49, 61, 67], "local_rank": [49, 61, 67], "pretti": 49, "old": 49, "jank": 49, "hood": 49, "strung": 49, "create_eval_dataset": [49, 61], "tdataset": 49, "loader": 49, "create_train_dataset": [49, 61], "dataset_typ": [49, 61], "minimal_datapars": [49, 50], "minimaldataparserconfig": [49, 50, 61], "arkitscenes_datapars": [49, 50], "arkitscenesdataparserconfig": [49, 50, 61], "blender_datapars": [49, 50], "instant_ngp_datapars": [49, 50], "instantngpdataparserconfig": [49, 50, 61], "nuscenes_datapars": [49, 50], "nuscenesdataparserconfig": [49, 50, 61], "dnerf_datapars": [49, 50], "dnerfdataparserconfig": [49, 50, 61], "phototourism_datapars": [49, 50], "phototourismdataparserconfig": [49, 50, 61], "dycheck_datapars": [49, 50], "dycheckdataparserconfig": [49, 50, 61], "scannet_datapars": [49, 50], "scannetdataparserconfig": [49, 50, 61], "sdfstudio_datapars": [49, 50], "sdfstudiodataparserconfig": [49, 50, 61], "nerfosr_datapars": [49, 50], "nerfosrdataparserconfig": [49, 50, 61], "sitcoms3d_datapars": [49, 50], "sitcoms3ddataparserconfig": [49, 50, 61], "scannetpp_datapars": 49, "scannetppdataparserconfig": 49, "colmap_datapars": 49, "colmapdataparserconfig": 49, "train_num_times_to_repeat_imag": [49, 61], "eval_num_times_to_repeat_imag": [49, 61], "eval_image_indic": [49, 61], "collate_fn": [49, 53, 61], "nerfstudio_col": [49, 53, 61], "camera_res_scale_factor": [49, 61], "patch_siz": [49, 52, 61], "pixel_sampl": [49, 52, 61], "pixelsamplerconfig": [49, 52, 61], "__post_init__": [49, 61, 71, 73], "warn": [49, 84], "extra_map": [49, 53], "collat": [49, 52, 61], "pick": [49, 53], "never": [49, 53], "patch": [49, 52], "variable_res_col": [49, 61], "base_datapars": 50, "as_dict": [50, 61], "save_dataparser_transform": [50, 61], "transform_poses_to_original_spac": [50, 61], "camera_convent": 50, "convent": 50, "mask_class": [50, 61], "applied_transform": 50, "applied_scal": 50, "3dod": 50, "valid": [50, 52, 56, 63, 64, 65, 72], "41069021": 50, "appl": 50, "traj_string_to_matrix": [50, 61], "traj_str": 50, "delimit": 50, "particular": 50, "seven": 50, "radian": [50, 78], "rt": 50, "yenchenlin": 50, "master": 50, "load_blend": 50, "l37": 50, "ab": [50, 72], "2210": 50, "13445": 50, "process_fram": [50, 61], "frame_nam": 50, "time_id": 50, "mochi": 50, "five": 50, "scene_box_bound": [50, 61], "upscal": [50, 61], "get_focal_length": [50, 61], "rais": 50, "posterv2": 50, "3333": 50, "eval_mod": [50, 61], "eval_interv": [50, 61], "percentag": 50, "nth": 50, "prepar": 50, "minimaldatapars": [50, 61], "nikhil": 50, "lego_test": 50, "minimal_pars": 50, "4dqv": 50, "mpi": 50, "mpg": 50, "nerfosr": [50, 61], "r00tman": 50, "data_loader_split": 50, "255": 50, "stjacob": [50, 76], "use_mask": [50, 61], "get_camera_param": [50, 61], "scene_dir": 50, "0103": 50, "mnt": 50, "v1": 50, "mini": 50, "trainval": 50, "front_left": 50, "front_right": 50, "back_left": 50, "back_right": 50, "mask_dir": [50, 61], "www": 50, "autonom": 50, "drive": [50, 76], "cuboid": 50, "process_nuscenes_mask": 50, "percent": [50, 80], "messag": 50, "rotation_translation_to_pos": [50, 61], "r_quat": 50, "t_vec": 50, "washington": 50, "edu": 50, "kwea123": 50, "nerf_pl": 50, "nerfw": 50, "brandenburg": [50, 76], "gate": [50, 76], "scene0423_02": 50, "net": 50, "sen": 50, "expect": [50, 55, 65, 72, 78], "datapas": 50, "dtu": [50, 76], "scan65": 50, "include_mono_prior": [50, 61], "include_foreground_mask": [50, 61], "skip_every_for_val_split": [50, 61], "auto_ori": 50, "foreground": 50, "longest": [50, 52], "bbox": 50, "human": 50, "tv": 50, "me": 50, "tbbt": 50, "big_living_room": 50, "include_semant": [50, 61], "base_dataset": 51, "get_data": [51, 61], "image_idx": [51, 53, 66], "imagedataset": 51, "get_imag": [51, 61], "num_channel": 51, "get_metadata": [51, 61], "get_numpy_imag": [51, 61], "uint8": 51, "sdf_dataset": 51, "sdfdataset": [51, 61], "get_depths_and_norm": [51, 61], "depth_filepath": 51, "normal_filenam": 51, "camtoworld": 51, "semantic_dataset": 51, "semanticdataset": [51, 61], "pairpixelsampl": [52, 61, 63], "pairpixelsamplerconfig": [52, 61], "pixelsampl": [52, 61], "pair": [52, 72], "apart": 52, "sample_method": [52, 61], "batch_siz": [52, 53], "num_rays_per_batch": [52, 61], "keep_full_imag": [52, 61], "is_equirectangular": [52, 61], "fisheye_crop_radiu": [52, 61], "patchpixelsampl": [52, 61], "pixel_batch": 52, "patchpixelsamplerconfig": [52, 61], "set_num_rays_per_batch": [52, 61], "overridden": 52, "reshap": [52, 61, 71, 73], "correctli": 52, "collate_image_dataset_batch": [52, 61], "collate_image_dataset_batch_list": [52, 61], "intent": 52, "depreci": 52, "viabl": 52, "loop": 52, "rag": 52, "from_param": [52, 61], "rpy": [52, 78], "pt": 52, "boolean": [52, 53, 69], "minimum": [52, 55, 64, 66, 69, 74, 78, 80, 81], "from_camera_pos": [52, 61], "envelop": [52, 63], "get_cent": [52, 61], "get_centered_and_scaled_scene_box": [52, 61], "shift": [52, 63, 72], "get_diagonal_length": [52, 61], "diagon": [52, 80], "get_normalized_posit": [52, 61], "1a4d0bad2e90aa65ce997c9d1779518eaed998d5": 53, "read_write_model": 53, "1480": 53, "pycolmap": 53, "colmap_parsing_util": 53, "baseimag": [53, 61], "alia": 53, "cameramodel": [53, 61], "model_id": [53, 61], "model_nam": [53, 61], "num_param": [53, 61], "qvec": 53, "tvec": 53, "camera_id": 53, "point3d_id": 53, "point3d": [53, 61], "image_id": [53, 61], "point2d_idx": [53, 61], "read_cameras_binari": [53, 61], "path_to_model_fil": 53, "src": [53, 63], "cc": 53, "writecamerasbinari": 53, "const": 53, "std": [53, 55, 78], "readcamerasbinari": 53, "read_cameras_text": [53, 61], "writecamerastext": 53, "readcamerastext": 53, "read_images_binari": [53, 61], "readimagesbinari": 53, "writeimagesbinari": 53, "read_images_text": [53, 61], "readimagestext": 53, "writeimagestext": 53, "read_next_byt": [53, 61], "fid": 53, "num_byt": 53, "format_char_sequ": 53, "endian_charact": 53, "byte": 53, "binari": 53, "q": [53, 55], "read_points3d_binari": [53, 61], "readpoints3dbinari": 53, "writepoints3dbinari": 53, "read_points3d_text": [53, 61], "readpoints3dtext": 53, "writepoints3dtext": 53, "write_cameras_binari": [53, 61], "write_cameras_text": [53, 61], "write_images_binari": [53, 61], "write_images_text": [53, 61], "write_next_byt": [53, 61], "pack": [53, 64, 65], "send": 53, "element": [53, 55, 73, 74], "encapsul": 53, "write_points3d_binari": [53, 61], "points3d": 53, "write_points3d_text": [53, 61], "data_util": 53, "get_depth_image_from_path": [53, 61], "filepath": 53, "npy": 53, "get_image_mask_tensor_from_path": [53, 61], "get_semantics_and_mask_tensors_from_path": [53, 61], "mask_indic": 53, "segment": [53, 60], "cachedataload": [53, 61], "num_images_to_sample_from": 53, "num_times_to_repeat_imag": 53, "exclude_batch_keys_from_devic": 53, "num_samples_to_col": 53, "evaldataload": [53, 61], "get_data_from_image_idx": [53, 61], "fixedindicesevaldataload": [53, 61], "image_indic": 53, "randindicesevaldataload": [53, 61], "straight": 53, "default_col": 53, "cu113": 53, "nerfstudio_collate_err_msg_format": 53, "outer": [53, 61, 62, 63], "exact": [53, 80], "unchang": 53, "batch_sampl": 53, "v_i": 53, "v_1": 53, "v_2": 53, "namedtupl": 53, "v1_i": 53, "v2_i": 53, "v1_1": 53, "v1_2": 53, "v2_1": 53, "v2_2": 53, "out_dim": [54, 56, 58], "fieldcompon": [54, 55, 56, 58], "build_nn_modul": [54, 55, 57, 58, 61], "member": 54, "in_tensor": [54, 55, 56, 58], "input_dim": [54, 55], "output_dim": [54, 55], "get_tcnn_encoding_config": [55, 57, 61], "tcnn": [55, 58, 60, 66], "ffencod": [55, 57, 61], "basi": [55, 72], "fourier": [55, 72], "expon": 55, "ff": 55, "get_out_dim": [55, 57, 61], "nearest": [55, 58, 81], "smoothstep": [55, 58, 60, 61], "largest": [55, 58], "fallback": [55, 58], "hashgrid": [55, 58, 60], "growth_factor": 55, "hash_fn": [55, 57, 61], "pytorch_fwd": [55, 57, 58, 61], "ident": [55, 57, 60, 61], "kplanesencod": [55, 57, 61], "num_compon": 55, "init_a": 55, "init_b": 55, "triplaneencod": [55, 57, 61], "j": [55, 84], "elementwis": 55, "integ": 55, "scalar": [55, 63], "wise": 55, "sinusoid": 55, "polyhedronffencod": [55, 57, 61], "basis_shap": [55, 72], "octahedron": [55, 72], "icosahedron": [55, 72], "basis_subdivis": 55, "polyhedron": [55, 72], "nerf360": [55, 72], "tessel": [55, 72], "greater": 55, "scalingandoffset": [55, 57, 61], "tensorcpencod": [55, 57, 61], "256": [55, 60, 66], "24": [55, 73, 81], "init_scal": 55, "candecomp": 55, "parfac": 55, "upsample_grid": [55, 57, 61], "upsampl": 55, "underyl": 55, "tensorvmencod": [55, 57, 61], "in_posit": 55, "triplan": 55, "plane_coeff": 55, "stand": 55, "symmetr": [55, 72], "symmetri": [55, 72], "thought": 55, "perpendicular": 55, "decomp": 55, "feature_s": 55, "features": 55, "field_head": [56, 60], "densityfieldhead": [56, 57, 61], "softplu": 56, "threshold": [56, 64, 66, 78], "field_head_nam": 56, "set_in_dim": [56, 57, 61], "prednormalsfieldhead": [56, 57, 61], "tanh": 56, "rgbfieldhead": [56, 57, 60, 61], "sigmoid": [56, 65], "shfieldhead": [56, 57, 61], "semanticfieldhead": [56, 57, 61], "num_class": [56, 65], "transientdensityfieldhead": [56, 57, 61], "transient": [56, 60, 66], "transientrgbfieldhead": [56, 57, 61], "uncertaintyfieldhead": [56, 57, 61], "get_tcnn_network_config": [57, 58, 61], "mlpwithhashencod": [57, 58, 61], "activation_to_tcnn_str": [57, 58, 61], "spatialdistort": [57, 59, 60, 61], "perceptron": 58, "num_lay": [58, 60, 61], "layer_width": 58, "skip_connect": [58, 60], "relu": 58, "out_activ": 58, "multilay": 58, "intermedi": 58, "frobeniu": 59, "l_inf": 59, "base_field": 60, "primarili": 60, "compute_norm": 60, "get_norm": [60, 61], "fieldconfig": [60, 61], "get_normalized_direct": [60, 61], "density_field": 60, "hashmlpdensityfield": [60, 61], "hidden_dim": [60, 61, 66], "use_linear": 60, "base_r": [60, 61, 66], "hidden": [60, 74, 84], "compound": 60, "nerfacto_field": 60, "nerfactofield": [60, 61], "geo_feat_dim": [60, 61], "2048": [60, 66, 78], "num_layers_color": [60, 61], "num_layers_transi": 60, "hidden_dim_color": [60, 61, 66], "hidden_dim_transi": [60, 66], "appearance_embedding_dim": [60, 61], "transient_embedding_dim": 60, "use_transient_embed": [60, 61, 66], "use_semant": 60, "num_semantic_class": 60, "pass_semantic_gradi": [60, 66], "use_pred_norm": 60, "feat": 60, "hashmap": [60, 66], "nerfw_field": 60, "vanillanerfwfield": [60, 61], "base_mlp_num_lay": 60, "base_mlp_layer_width": 60, "head_mlp_num_lay": 60, "head_mlp_layer_width": 60, "embedding_s": 60, "sdf_field": 60, "learnedvari": [60, 61], "init_v": 60, "varianc": [60, 64, 72], "get_vari": [60, 61], "sdffield": [60, 61], "sdffieldconfig": [60, 61], "return_alpha": 60, "forward_geonetwork": [60, 61], "geo_featur": 60, "geonetwork": 60, "get_alpha": [60, 61], "get_color": [60, 61, 70, 71], "get_sdf": [60, 61], "initialize_geo_lay": [60, 61], "geometr": [60, 72], "set_cos_anneal_ratio": [60, 61], "use_appearance_embed": [60, 61, 66], "bia": [60, 61], "geometric_init": [60, 61], "inside_outsid": [60, 61], "weight_norm": [60, 61], "use_grid_featur": [60, 61], "divide_factor": [60, 61], "beta_init": [60, 61], "encoding_typ": 60, "period": 60, "tensorf_vm": 60, "use_hash": [60, 61], "init": 60, "revert": 60, "semantic_nerf_field": 60, "tensorf_field": 60, "tensorffield": [60, 61], "feature_encod": 60, "density_encod": 60, "color_encod": 60, "appearance_dim": 60, "use_sh": 60, "sh_level": 60, "bg_color": 60, "use_integrated_encod": 60, "lie": 61, "get_outputs_for_camera": [61, 66], "get_outputs_for_camera_ray_bundl": [61, 66], "get_rgba_imag": [61, 66], "load_model": [61, 66], "update_to_step": [61, 66], "collider_param": [61, 66], "enable_collid": [61, 66], "loss_coeffici": [61, 66], "instantngpmodelconfig": [61, 66], "alpha_thr": [61, 64, 66], "cone_angl": [61, 64, 66], "disable_scene_contract": [61, 66], "grid_level": [61, 66], "grid_resolut": [61, 66], "render_step_s": [61, 64, 66], "use_gradient_sc": [61, 66], "ngpmodel": [61, 66], "semanticnerfwmodel": [61, 66], "semanticnerfwmodelconfig": [61, 66], "nerfmodel": [61, 66], "vanillamodelconfig": [61, 66], "enable_temporal_distort": [61, 66], "temporal_distortion_param": [61, 66], "densityfn": [61, 62, 64], "neussampl": [61, 62, 64], "merge_ray_sampl": [61, 62, 64], "rendering_sdf_with_fixed_inv_": [61, 62, 64], "proposalnetworksampl": [61, 62, 64], "set_ann": [61, 62, 64], "step_cb": [61, 62, 64], "spacedsampl": [61, 62, 64], "uniformlindisppiecewisesampl": [61, 62, 64], "volumetricsampl": [61, 62, 64], "get_sigma_fn": [61, 62, 64], "depthlosstyp": [61, 62, 63], "gradientloss": [61, 62, 63], "gradient_loss": [61, 62, 63], "midasmseloss": [61, 62, 63], "scaleandshiftinvariantloss": [61, 62, 63], "prediction_ssi": [61, 62, 63], "depth_loss": [61, 62, 63], "depth_ranking_loss": [61, 62, 63], "distortion_loss": [61, 62, 63], "ds_nerf_depth_loss": [61, 62, 63], "interlevel_loss": [61, 62, 63], "lossfun_distort": [61, 62, 63], "lossfun_out": [61, 62, 63], "monosdf_normal_loss": [61, 62, 63], "nerfstudio_distortion_loss": [61, 62, 63], "orientation_loss": [61, 62, 63], "pred_normal_loss": [61, 62, 63], "ray_samples_to_sdist": [61, 62, 63], "scale_gradients_by_distance_squar": [61, 62, 63], "tv_loss": [61, 62, 63], "urban_radiance_field_depth_loss": [61, 62, 63], "normalsrender": [61, 62, 65], "blend_background": [61, 62, 65], "blend_background_for_loss_comput": [61, 62, 65], "combine_rgb": [61, 62, 65], "get_background_color": [61, 62, 65], "shrender": [61, 62, 65], "semanticrender": [61, 62, 65], "uncertaintyrender": [61, 62, 65], "background_color_override_context": [61, 62, 65], "weight_decai": [61, 67], "max_norm": [61, 67], "load_optim": [61, 67], "load_schedul": [61, 67], "optimizer_scaler_step_al": [61, 67], "optimizer_scaler_step_som": [61, 67], "optimizer_step": [61, 67], "optimizer_step_al": [61, 67], "scheduler_step": [61, 67], "scheduler_step_al": [61, 67], "zero_grad_al": [61, 67], "zero_grad_som": [61, 67], "radamoptimizerconfig": [61, 67], "cosinedecayschedul": [61, 67], "get_schedul": [61, 67], "cosinedecayschedulerconfig": [61, 67], "learning_rate_alpha": [61, 67], "max_step": [61, 67], "warm_up_end": [61, 67], "exponentialdecayschedul": [61, 67], "exponentialdecayschedulerconfig": [61, 67], "lr_final": [61, 67], "lr_pre_warmup": [61, 67], "ramp": [61, 67], "warmup_step": [61, 67], "multistepschedul": [61, 67], "multistepschedulerconfig": [61, 67], "gamma": [61, 67], "mileston": [61, 67], "training_st": [61, 67], "setup_optim": [61, 67], "train_iter": [61, 67], "gradient_accumulation_step": [61, 67], "load_checkpoint": [61, 67], "load_config": [61, 67], "load_dir": [61, 67], "load_step": [61, 67], "log_gradi": [61, 67], "max_num_iter": [61, 67], "mixed_precis": [61, 67], "save_only_latest_checkpoint": [61, 67], "steps_per_eval_all_imag": [61, 67], "steps_per_eval_batch": [61, 67], "steps_per_eval_imag": [61, 67], "steps_per_sav": [61, 67], "use_grad_scal": [61, 67], "run_callback": [61, 67], "run_callback_at_loc": [61, 67], "grad_scal": [61, 67], "trainingcallbackloc": [61, 67], "registri": 61, "discover_method": [61, 68], "discover_datapars": [61, 68], "math": [61, 71], "columnwise_squared_l2_dist": [61, 71, 72], "components_from_spherical_harmon": [61, 71, 72], "compute_3d_gaussian": [61, 71, 72], "conical_frustum_to_gaussian": [61, 71, 72], "cylinder_to_gaussian": [61, 71, 72], "expected_sin": [61, 71, 72], "generate_polyhedron_basi": [61, 71, 72], "intersect_aabb": [61, 71, 72], "intersect_obb": [61, 71, 72], "masked_reduct": [61, 71, 72], "normalized_depth_scale_and_shift": [61, 71, 72], "safe_norm": [61, 71, 72], "colormapopt": [61, 69, 71], "colormap_max": [61, 69, 71], "colormap_min": [61, 69, 71], "invert": [61, 69, 71, 81], "apply_boolean_colormap": [61, 69, 71], "apply_colormap": [61, 69, 71], "apply_depth_colormap": [61, 69, 71], "apply_float_colormap": [61, 69, 71], "apply_pca_colormap": [61, 69, 71], "broadcast_to": [61, 71, 73], "ndim": [61, 71, 73], "pin_memori": [61, 71, 73], "viewerbuttongroup": [61, 74], "set_crop": [61, 74], "set_fov": [61, 74], "set_opt": [61, 74], "set_dis": [61, 74], "set_hidden": [61, 74], "set_vis": [61, 74], "viewerparamet": [61, 74], "reduction_typ": [63, 72], "invari": 63, "term": 63, "discontinu": 63, "coincid": 63, "1907": 63, "01341": 63, "mult": [63, 72], "reduction_batch_bas": 63, "reduction_image_bas": 63, "mida": 63, "mse": 63, "shot": 63, "cross": 63, "transfer": 63, "unnorm": 63, "termination_depth": 63, "predicted_depth": 63, "sigma": 63, "directions_norm": 63, "is_euclidean": 63, "depth_loss_typ": 63, "rendered_depth": 63, "gt_depth": 63, "sparsenerf": 63, "adjac": 63, "weights_list": 63, "ray_samples_list": 63, "mipnerf360": 63, "deng": 63, "kakaobrain": 63, "f61bb8744a5cb4820a4d968fb3bfbed777550f4a": 63, "l515": 63, "train_util": 63, "l133": 63, "l142": 63, "stepfun": 63, "l266": 63, "num_samples_1": 63, "t_env": 63, "w_env": 63, "l136": 63, "l80": 63, "inner": 63, "normal_pr": 63, "normal_gt": 63, "niujinshuchong": 63, "enforc": 63, "angluar": 63, "eq": 63, "2206": [63, 72], "00665": [63, 72], "mathcal": 63, "mathbf": 63, "iint": 63, "limits_": 63, "_": 63, "d_": 63, "sum_i": 63, "w_i": 63, "mathbb": 63, "_i": 63, "s_i": 63, "s_": 63, "viewdir": 63, "ref": 63, "t0_start": 63, "num_samples_0": 63, "t0_end": 63, "t1_start": 63, "t1_end": 63, "l117": 63, "l64": 63, "pred_norm": 63, "unbias": 63, "Near": [63, 64], "scale_gradient_by_distance_squar": 63, "feature_dim": 63, "apchenstu": 63, "4ec894dc1341a2201fe13ae428631b58458f105d": 63, "l139": 63, "variat": 63, "urban": 63, "remata": 63, "protocol": 64, "single_jitt": 64, "num_samples_import": 64, "num_samples_outsid": 64, "num_upsample_step": 64, "base_vari": 64, "sdf_fn": 64, "ray_samples_1": 64, "ray_samples_2": 64, "merg": [64, 84], "inv_": 64, "histogram_pad": 64, "update_sch": 64, "initial_sampl": 64, "uniformlindisppiecewis": 64, "spacing_fn": 64, "spacing_fn_inv": 64, "dictat": 64, "invers": 64, "piecewis": [64, 66], "occupancy_grid": 64, "occgridestim": 64, "scene_aabb": 64, "total_sampl": 64, "raymarch": 64, "cone": [64, 72], "packed_info": 64, "median": 65, "blend": 65, "rgba": [65, 66], "pred_imag": 65, "pred_accumul": 65, "gt_imag": 65, "bg": 65, "coeff": 65, "context": 65, "base_model": 66, "shouldn": 66, "camera_ray_bundl": 66, "output_nam": 66, "loaded_st": [66, 67], "instant_ngp": 66, "004": 66, "untrain": 66, "scaler": [66, 67], "semantic_nerfw": 66, "proposal_update_everi": 66, "proposal_warmup": 66, "5000": [66, 67], "num_proposal_iter": 66, "proposal_net_args_list": 66, "proposal_initial_sampl": 66, "orientation_loss_mult": 66, "pred_normal_loss_mult": 66, "predict_norm": 66, "appearance_embed_dim": 66, "semantic_loss_weight": 66, "vanilla_nerf": 66, "adam": 67, "0005": 67, "decai": 67, "radam": 67, "gradscal": 67, "grad": 67, "param_group_nam": 67, "fetch": 67, "cosin": 67, "warmup": 67, "lr_init": 67, "lrschedul": 67, "300000": 67, "warmp": 67, "100000": 67, "1000000": [67, 78], "500000": 67, "750000": 67, "900000": 67, "base_pipelin": 67, "experiment_nam": 67, "project_nam": 67, "viewer_legaci": [67, 83], "relative_model_dir": 67, "500": 67, "25000": 67, "experimentconfig": 67, "regimen": 67, "yaml": [67, 77, 78, 81, 83], "where_to_run": 67, "func": 67, "update_every_num_it": 67, "suppos": 67, "prone": 67, "fairli": 67, "discoveri": 68, "discov": 68, "And": 68, "turbo": [69, 81], "viridi": [69, 81], "magma": [69, 81], "inferno": [69, 81], "cividi": [69, 81], "grai": [69, 81], "true_color": 69, "false_color": 69, "analysi": 69, "colormap_opt": 69, "stabil": 69, "furthest": [69, 81], "principl": 69, "outlier": [69, 78], "reject": [69, 81], "5b4d4f64608ec8077222c52fdf814d40acc10bc1": 72, "geopoli": 72, "sq_dist": 72, "dir_vari": 72, "radius_vari": 72, "x_mean": 72, "x_var": 72, "angular_tessel": 72, "remove_symmetri": 72, "2111": 72, "12077": 72, "base_shap": 72, "op": [72, 73], "redund": 72, "neg": 72, "max_bound": 72, "10000000000": 72, "invalid_valu": 72, "x_min": 72, "y_min": 72, "z_min": 72, "x_max": 72, "y_max": 72, "z_max": 72, "t_max": 72, "t_min": 72, "obb": [72, 78], "extent": 72, "input_tensor": 72, "supplementari": 72, "a2": 72, "solv": 72, "d9619e948bf3d85c6adec1a643f679e2e8e84d4b": 72, "l7": 72, "batch_dim": 72, "divis": 72, "tensor_dataclass": 73, "testtensordataclass": 73, "_shape": 73, "tensordataclasst": 73, "NOT": 73, "deepcopi": 73, "viser_serv": 74, "viserserv": 74, "tstring": 74, "hint": 74, "img_height": 74, "img_width": 74, "client_id": 74, "cb": 74, "min_point": 74, "max_point": 74, "new_opt": 74, "tvalu": 74, "intorfloat": 74, "picker": 74, "popular": 75, "process_data": 75, "download_data": 75, "run_view": 75, "ism": 76, "visit": 76, "19tv6kdvgcmg3cgz1bniunbbmd": 76, "iqjrbg": 76, "usp": 76, "drive_link": 76, "bww_entranc": 76, "campanil": 76, "desol": 76, "redwoods2": 76, "storefront": 76, "vegetat": 76, "ion": 76, "egypt": 76, "kitchen": 76, "dozer": 76, "stump": 76, "sculptur": 76, "giann": 76, "ini": 76, "hall": 76, "giannini": 76, "veget": 76, "bear": 76, "buckingham": 76, "palac": 76, "colosseum": 76, "exterior": 76, "grand": 76, "brussel": 76, "otr": 76, "dame": 76, "facad": 76, "westminst": 76, "pantheon": 76, "taj": 76, "mahal": 76, "nara": 76, "tr": 76, "evi": 76, "fountain": 76, "notr": 76, "trevi": 76, "demo": 76, "replica": 76, "hig": 76, "hre": 76, "heritag": 76, "rgbd": 76, "highr": 76, "europa": 76, "lk2": 76, "lwp": 76, "rathau": 76, "schloss": 76, "st": 76, "stjohann": 76, "mill": 76, "rubbl": 76, "gaussia": 78, "reorient": 78, "open3d": 78, "use_bounding_box": 78, "euler": 78, "px": 78, "triangl": 78, "50000": 78, "point_cloud": 78, "isosurfac": 78, "hloc": 80, "detector": 80, "matcher": 80, "vocab_tre": 80, "exhaust": 80, "vocab": 80, "sift": 80, "modern": 80, "superpoint": 80, "superglu": 80, "pixsfm": 80, "perfect": 80, "sfm_tool": 80, "superpoint_aachen": 80, "superpoint_max": 80, "d2net": 80, "ss": 80, "disk": 80, "sosnet": 80, "r2d2": 80, "superpoint_inloc": 80, "mutual": 80, "lightglu": 80, "adalam": 80, "2x": 80, "4x": 80, "8x": 80, "cmd": 80, "induc": 80, "sf": 80, "overlaid": 80, "autorot": 80, "circl": 80, "300": 80, "uncorrect": 80, "600": 80, "sight": 81, "proxim": 81, "friend": 82, "your_data": 82, "excit": 84, "famili": 84, "bug": 84, "appreci": 84, "highli": 84, "valuabl": 84, "gladli": 84, "review": 84, "kindli": 84, "guarante": 84, "lint": 84, "ruff": 84, "pyright": 84, "pytest": 84, "sphinx": 84, "style": 84, "eslint": 84, "hook": 84, "linter": 84, "compli": 84, "pandoc": 84, "header": 84, "build_doc": 84, "autobuild": 84, "incorrect": 84, "_build": 84, "jupyt": 84, "readabl": 84, "cell": 84, "output_onli": 84}, "objects": {"nerfstudio.cameras": [[47, 0, 0, "-", "camera_optimizers"], [47, 0, 0, "-", "camera_paths"], [47, 0, 0, "-", "camera_utils"], [47, 0, 0, "-", "cameras"], [47, 0, 0, "-", "lie_groups"], [47, 0, 0, "-", "rays"]], "nerfstudio.cameras.camera_optimizers": [[47, 1, 1, "", "CameraOptimizer"], [47, 1, 1, "", "CameraOptimizerConfig"]], "nerfstudio.cameras.camera_optimizers.CameraOptimizer": [[47, 2, 1, "", "apply_to_camera"], [47, 2, 1, "", "apply_to_raybundle"], [47, 2, 1, "", "forward"], [47, 2, 1, "", "get_correction_matrices"], [47, 2, 1, "", "get_loss_dict"], [47, 2, 1, "", "get_metrics_dict"], [47, 2, 1, "", "get_param_groups"]], "nerfstudio.cameras.camera_optimizers.CameraOptimizerConfig": [[47, 3, 1, "", "mode"], [47, 3, 1, "", "optimizer"], [47, 3, 1, "", "rot_l2_penalty"], [47, 3, 1, "", "scheduler"], [47, 3, 1, "", "trans_l2_penalty"]], "nerfstudio.cameras.camera_paths": [[47, 4, 1, "", "get_interpolated_camera_path"], [47, 4, 1, "", "get_path_from_json"], [47, 4, 1, "", "get_spiral_path"]], "nerfstudio.cameras.camera_utils": [[47, 4, 1, "", "auto_orient_and_center_poses"], [47, 4, 1, "", "focus_of_attention"], [47, 4, 1, "", "get_distortion_params"], [47, 4, 1, "", "get_interpolated_k"], [47, 4, 1, "", "get_interpolated_poses"], [47, 4, 1, "", "get_interpolated_poses_many"], [47, 4, 1, "", "get_ordered_poses_and_k"], [47, 4, 1, "", "normalize"], [47, 4, 1, "", "normalize_with_norm"], [47, 4, 1, "", "quaternion_from_matrix"], [47, 4, 1, "", "quaternion_matrix"], [47, 4, 1, "", "quaternion_slerp"], [47, 4, 1, "", "radial_and_tangential_undistort"], [47, 4, 1, "", "rotation_matrix"], [47, 4, 1, "", "unit_vector"], [47, 4, 1, "", "viewmatrix"]], "nerfstudio.cameras.cameras": [[47, 1, 1, "", "CameraType"], [47, 1, 1, "", "Cameras"]], "nerfstudio.cameras.cameras.Cameras": [[47, 5, 1, "", "device"], [47, 2, 1, "", "generate_rays"], [47, 2, 1, "", "get_image_coords"], [47, 2, 1, "", "get_intrinsics_matrices"], [47, 5, 1, "", "image_height"], [47, 5, 1, "", "image_width"], [47, 5, 1, "", "is_jagged"], [47, 2, 1, "", "rescale_output_resolution"], [47, 2, 1, "", "to_json"]], "nerfstudio.cameras.lie_groups": [[47, 4, 1, "", "exp_map_SE3"], [47, 4, 1, "", "exp_map_SO3xR3"]], "nerfstudio.cameras.rays": [[47, 1, 1, "", "Frustums"], [47, 1, 1, "", "RayBundle"], [47, 1, 1, "", "RaySamples"]], "nerfstudio.cameras.rays.Frustums": [[47, 3, 1, "", "directions"], [47, 3, 1, "", "ends"], [47, 2, 1, "", "get_gaussian_blob"], [47, 2, 1, "", "get_mock_frustum"], [47, 2, 1, "", "get_positions"], [47, 2, 1, "", "get_start_positions"], [47, 3, 1, "", "offsets"], [47, 3, 1, "", "origins"], [47, 3, 1, "", "pixel_area"], [47, 2, 1, "", "set_offsets"], [47, 3, 1, "", "starts"]], "nerfstudio.cameras.rays.RayBundle": [[47, 3, 1, "", "camera_indices"], [47, 3, 1, "", "directions"], [47, 3, 1, "", "fars"], [47, 2, 1, "", "get_ray_samples"], [47, 2, 1, "", "get_row_major_sliced_ray_bundle"], [47, 3, 1, "", "metadata"], [47, 3, 1, "", "nears"], [47, 3, 1, "", "origins"], [47, 3, 1, "", "pixel_area"], [47, 2, 1, "", "sample"], [47, 2, 1, "", "set_camera_indices"], [47, 3, 1, "", "times"]], "nerfstudio.cameras.rays.RaySamples": [[47, 3, 1, "", "camera_indices"], [47, 3, 1, "", "deltas"], [47, 3, 1, "", "frustums"], [47, 2, 1, "", "get_weights"], [47, 2, 1, "", "get_weights_and_transmittance_from_alphas"], [47, 3, 1, "", "metadata"], [47, 3, 1, "", "spacing_ends"], [47, 3, 1, "", "spacing_starts"], [47, 3, 1, "", "spacing_to_euclidean_fn"], [47, 3, 1, "", "times"]], "nerfstudio.configs": [[48, 0, 0, "-", "base_config"]], "nerfstudio.configs.base_config": [[48, 1, 1, "", "InstantiateConfig"], [48, 1, 1, "", "LocalWriterConfig"], [48, 1, 1, "", "LoggingConfig"], [48, 1, 1, "", "MachineConfig"], [48, 1, 1, "", "PrintableConfig"], [48, 1, 1, "", "ViewerConfig"]], "nerfstudio.configs.base_config.InstantiateConfig": [[48, 2, 1, "", "setup"]], "nerfstudio.configs.base_config.LocalWriterConfig": [[48, 3, 1, "", "enable"], [48, 3, 1, "", "max_log_size"], [48, 2, 1, "", "setup"], [48, 3, 1, "", "stats_to_track"]], "nerfstudio.configs.base_config.LoggingConfig": [[48, 3, 1, "", "local_writer"], [48, 3, 1, "", "max_buffer_size"], [48, 3, 1, "", "profiler"], [48, 3, 1, "", "relative_log_dir"], [48, 3, 1, "", "steps_per_log"]], "nerfstudio.configs.base_config.MachineConfig": [[48, 3, 1, "", "device_type"], [48, 3, 1, "", "dist_url"], [48, 3, 1, "", "machine_rank"], [48, 3, 1, "", "num_devices"], [48, 3, 1, "", "num_machines"], [48, 3, 1, "", "seed"]], "nerfstudio.configs.base_config.ViewerConfig": [[48, 3, 1, "", "camera_frustum_scale"], [48, 3, 1, "", "default_composite_depth"], [48, 3, 1, "", "image_format"], [48, 3, 1, "", "jpeg_quality"], [48, 3, 1, "", "make_share_url"], [48, 3, 1, "", "max_num_display_images"], [48, 3, 1, "", "num_rays_per_chunk"], [48, 3, 1, "", "quit_on_train_completion"], [48, 3, 1, "", "relative_log_filename"], [48, 3, 1, "", "websocket_host"], [48, 3, 1, "", "websocket_port"], [48, 3, 1, "", "websocket_port_default"]], "nerfstudio.data.datamanagers": [[49, 0, 0, "-", "base_datamanager"]], "nerfstudio.data.datamanagers.base_datamanager": [[49, 1, 1, "", "DataManager"], [49, 1, 1, "", "DataManagerConfig"], [49, 1, 1, "", "VanillaDataManager"], [49, 1, 1, "", "VanillaDataManagerConfig"], [49, 4, 1, "", "variable_res_collate"]], "nerfstudio.data.datamanagers.base_datamanager.DataManager": [[49, 3, 1, "", "eval_count"], [49, 3, 1, "", "eval_dataset"], [49, 2, 1, "", "forward"], [49, 2, 1, "", "get_datapath"], [49, 2, 1, "", "get_eval_iterable"], [49, 2, 1, "", "get_eval_rays_per_batch"], [49, 2, 1, "", "get_param_groups"], [49, 2, 1, "", "get_train_iterable"], [49, 2, 1, "", "get_train_rays_per_batch"], [49, 2, 1, "", "get_training_callbacks"], [49, 3, 1, "", "includes_time"], [49, 2, 1, "", "iter_eval"], [49, 2, 1, "", "iter_train"], [49, 2, 1, "", "next_eval"], [49, 2, 1, "", "next_eval_image"], [49, 2, 1, "", "next_train"], [49, 2, 1, "", "setup_eval"], [49, 2, 1, "", "setup_train"], [49, 3, 1, "", "train_count"], [49, 3, 1, "", "train_dataset"]], "nerfstudio.data.datamanagers.base_datamanager.DataManagerConfig": [[49, 3, 1, "", "data"], [49, 3, 1, "", "images_on_gpu"], [49, 3, 1, "", "masks_on_gpu"]], "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManager": [[49, 2, 1, "", "create_eval_dataset"], [49, 2, 1, "", "create_train_dataset"], [49, 5, 1, "", "dataset_type"], [49, 2, 1, "", "get_datapath"], [49, 2, 1, "", "get_eval_rays_per_batch"], [49, 2, 1, "", "get_param_groups"], [49, 2, 1, "", "get_train_rays_per_batch"], [49, 2, 1, "", "next_eval"], [49, 2, 1, "", "next_eval_image"], [49, 2, 1, "", "next_train"], [49, 2, 1, "", "setup_eval"], [49, 2, 1, "", "setup_train"]], "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManagerConfig": [[49, 2, 1, "", "__post_init__"], [49, 3, 1, "", "camera_optimizer"], [49, 3, 1, "", "camera_res_scale_factor"], [49, 2, 1, "", "collate_fn"], [49, 3, 1, "", "dataparser"], [49, 3, 1, "", "eval_image_indices"], [49, 3, 1, "", "eval_num_images_to_sample_from"], [49, 3, 1, "", "eval_num_rays_per_batch"], [49, 3, 1, "", "eval_num_times_to_repeat_images"], [49, 3, 1, "", "patch_size"], [49, 3, 1, "", "pixel_sampler"], [49, 3, 1, "", "train_num_images_to_sample_from"], [49, 3, 1, "", "train_num_rays_per_batch"], [49, 3, 1, "", "train_num_times_to_repeat_images"]], "nerfstudio.data.dataparsers": [[50, 0, 0, "-", "arkitscenes_dataparser"], [50, 0, 0, "-", "base_dataparser"], [50, 0, 0, "-", "blender_dataparser"], [50, 0, 0, "-", "dnerf_dataparser"], [50, 0, 0, "-", "dycheck_dataparser"], [50, 0, 0, "-", "instant_ngp_dataparser"], [50, 0, 0, "-", "minimal_dataparser"], [50, 0, 0, "-", "nerfosr_dataparser"], [50, 0, 0, "-", "nerfstudio_dataparser"], [50, 0, 0, "-", "nuscenes_dataparser"], [50, 0, 0, "-", "phototourism_dataparser"], [50, 0, 0, "-", "scannet_dataparser"], [50, 0, 0, "-", "sdfstudio_dataparser"], [50, 0, 0, "-", "sitcoms3d_dataparser"]], "nerfstudio.data.dataparsers.arkitscenes_dataparser": [[50, 1, 1, "", "ARKitScenes"], [50, 1, 1, "", "ARKitScenesDataParserConfig"], [50, 4, 1, "", "traj_string_to_matrix"]], "nerfstudio.data.dataparsers.arkitscenes_dataparser.ARKitScenesDataParserConfig": [[50, 3, 1, "", "auto_scale_poses"], [50, 3, 1, "", "center_method"], [50, 3, 1, "", "data"], [50, 3, 1, "", "depth_unit_scale_factor"], [50, 3, 1, "", "scale_factor"], [50, 3, 1, "", "scene_scale"], [50, 3, 1, "", "train_split_fraction"]], "nerfstudio.data.dataparsers.base_dataparser": [[50, 1, 1, "", "DataParser"], [50, 1, 1, "", "DataParserConfig"], [50, 1, 1, "", "DataparserOutputs"], [50, 1, 1, "", "Semantics"], [50, 4, 1, "", "transform_poses_to_original_space"]], "nerfstudio.data.dataparsers.base_dataparser.DataParser": [[50, 3, 1, "", "config"], [50, 2, 1, "", "get_dataparser_outputs"], [50, 3, 1, "", "includes_time"]], "nerfstudio.data.dataparsers.base_dataparser.DataParserConfig": [[50, 3, 1, "", "data"]], "nerfstudio.data.dataparsers.base_dataparser.DataparserOutputs": [[50, 3, 1, "", "alpha_color"], [50, 2, 1, "", "as_dict"], [50, 3, 1, "", "cameras"], [50, 3, 1, "", "dataparser_scale"], [50, 3, 1, "", "dataparser_transform"], [50, 3, 1, "", "image_filenames"], [50, 3, 1, "", "mask_filenames"], [50, 3, 1, "", "metadata"], [50, 2, 1, "", "save_dataparser_transform"], [50, 3, 1, "", "scene_box"], [50, 2, 1, "", "transform_poses_to_original_space"]], "nerfstudio.data.dataparsers.base_dataparser.Semantics": [[50, 3, 1, "", "classes"], [50, 3, 1, "", "colors"], [50, 3, 1, "", "filenames"], [50, 3, 1, "", "mask_classes"]], "nerfstudio.data.dataparsers.blender_dataparser": [[50, 1, 1, "", "Blender"], [50, 1, 1, "", "BlenderDataParserConfig"]], "nerfstudio.data.dataparsers.blender_dataparser.BlenderDataParserConfig": [[50, 3, 1, "", "alpha_color"], [50, 3, 1, "", "data"], [50, 3, 1, "", "scale_factor"]], "nerfstudio.data.dataparsers.dnerf_dataparser": [[50, 1, 1, "", "DNeRF"], [50, 1, 1, "", "DNeRFDataParserConfig"]], "nerfstudio.data.dataparsers.dnerf_dataparser.DNeRFDataParserConfig": [[50, 3, 1, "", "alpha_color"], [50, 3, 1, "", "data"], [50, 3, 1, "", "scale_factor"]], "nerfstudio.data.dataparsers.dycheck_dataparser": [[50, 1, 1, "", "Dycheck"], [50, 1, 1, "", "DycheckDataParserConfig"], [50, 4, 1, "", "downscale"], [50, 4, 1, "", "rescale"], [50, 4, 1, "", "upscale"]], "nerfstudio.data.dataparsers.dycheck_dataparser.Dycheck": [[50, 2, 1, "", "process_frames"]], "nerfstudio.data.dataparsers.dycheck_dataparser.DycheckDataParserConfig": [[50, 3, 1, "", "alpha_color"], [50, 3, 1, "", "data"], [50, 3, 1, "", "downscale_factor"], [50, 3, 1, "", "scale_factor"], [50, 3, 1, "", "scene_box_bound"]], "nerfstudio.data.dataparsers.instant_ngp_dataparser": [[50, 1, 1, "", "InstantNGP"], [50, 1, 1, "", "InstantNGPDataParserConfig"]], "nerfstudio.data.dataparsers.instant_ngp_dataparser.InstantNGP": [[50, 2, 1, "", "get_focal_lengths"]], "nerfstudio.data.dataparsers.instant_ngp_dataparser.InstantNGPDataParserConfig": [[50, 3, 1, "", "data"], [50, 3, 1, "", "eval_interval"], [50, 3, 1, "", "eval_mode"], [50, 3, 1, "", "scene_scale"], [50, 3, 1, "", "train_split_fraction"]], "nerfstudio.data.dataparsers.minimal_dataparser": [[50, 1, 1, "", "MinimalDataParser"], [50, 1, 1, "", "MinimalDataParserConfig"]], "nerfstudio.data.dataparsers.minimal_dataparser.MinimalDataParserConfig": [[50, 3, 1, "", "data"]], "nerfstudio.data.dataparsers.nerfosr_dataparser": [[50, 1, 1, "", "NeRFOSR"], [50, 1, 1, "", "NeRFOSRDataParserConfig"], [50, 4, 1, "", "get_camera_params"]], "nerfstudio.data.dataparsers.nerfosr_dataparser.NeRFOSRDataParserConfig": [[50, 3, 1, "", "auto_scale_poses"], [50, 3, 1, "", "center_method"], [50, 3, 1, "", "data"], [50, 3, 1, "", "orientation_method"], [50, 3, 1, "", "scale_factor"], [50, 3, 1, "", "scene"], [50, 3, 1, "", "scene_scale"], [50, 3, 1, "", "use_masks"]], "nerfstudio.data.dataparsers.nerfstudio_dataparser": [[50, 1, 1, "", "Nerfstudio"], [50, 1, 1, "", "NerfstudioDataParserConfig"]], "nerfstudio.data.dataparsers.nerfstudio_dataparser.NerfstudioDataParserConfig": [[50, 3, 1, "", "auto_scale_poses"], [50, 3, 1, "", "center_method"], [50, 3, 1, "", "data"], [50, 3, 1, "", "depth_unit_scale_factor"], [50, 3, 1, "", "downscale_factor"], [50, 3, 1, "", "eval_interval"], [50, 3, 1, "", "eval_mode"], [50, 3, 1, "", "orientation_method"], [50, 3, 1, "", "scale_factor"], [50, 3, 1, "", "scene_scale"], [50, 3, 1, "", "train_split_fraction"]], "nerfstudio.data.dataparsers.nuscenes_dataparser": [[50, 1, 1, "", "NuScenes"], [50, 1, 1, "", "NuScenesDataParserConfig"], [50, 4, 1, "", "rotation_translation_to_pose"]], "nerfstudio.data.dataparsers.nuscenes_dataparser.NuScenesDataParserConfig": [[50, 3, 1, "", "cameras"], [50, 3, 1, "", "data"], [50, 3, 1, "", "data_dir"], [50, 3, 1, "", "mask_dir"], [50, 3, 1, "", "train_split_fraction"], [50, 3, 1, "", "verbose"], [50, 3, 1, "", "version"]], "nerfstudio.data.dataparsers.phototourism_dataparser": [[50, 1, 1, "", "Phototourism"], [50, 1, 1, "", "PhototourismDataParserConfig"]], "nerfstudio.data.dataparsers.phototourism_dataparser.PhototourismDataParserConfig": [[50, 3, 1, "", "alpha_color"], [50, 3, 1, "", "auto_scale_poses"], [50, 3, 1, "", "center_method"], [50, 3, 1, "", "data"], [50, 3, 1, "", "orientation_method"], [50, 3, 1, "", "scale_factor"], [50, 3, 1, "", "scene_scale"], [50, 3, 1, "", "train_split_fraction"]], "nerfstudio.data.dataparsers.scannet_dataparser": [[50, 1, 1, "", "ScanNet"], [50, 1, 1, "", "ScanNetDataParserConfig"]], "nerfstudio.data.dataparsers.scannet_dataparser.ScanNetDataParserConfig": [[50, 3, 1, "", "auto_scale_poses"], [50, 3, 1, "", "center_method"], [50, 3, 1, "", "data"], [50, 3, 1, "", "depth_unit_scale_factor"], [50, 3, 1, "", "scale_factor"], [50, 3, 1, "", "scene_scale"], [50, 3, 1, "", "train_split_fraction"]], "nerfstudio.data.dataparsers.sdfstudio_dataparser": [[50, 1, 1, "", "SDFStudio"], [50, 1, 1, "", "SDFStudioDataParserConfig"]], "nerfstudio.data.dataparsers.sdfstudio_dataparser.SDFStudioDataParserConfig": [[50, 3, 1, "", "data"], [50, 3, 1, "", "depth_unit_scale_factor"], [50, 3, 1, "", "include_foreground_mask"], [50, 3, 1, "", "include_mono_prior"], [50, 3, 1, "", "scene_scale"], [50, 3, 1, "", "skip_every_for_val_split"]], "nerfstudio.data.dataparsers.sitcoms3d_dataparser": [[50, 1, 1, "", "Sitcoms3D"], [50, 1, 1, "", "Sitcoms3DDataParserConfig"]], "nerfstudio.data.dataparsers.sitcoms3d_dataparser.Sitcoms3DDataParserConfig": [[50, 3, 1, "", "data"], [50, 3, 1, "", "include_semantics"], [50, 3, 1, "", "scene_scale"]], "nerfstudio.data.datasets": [[51, 0, 0, "-", "base_dataset"], [51, 0, 0, "-", "sdf_dataset"], [51, 0, 0, "-", "semantic_dataset"]], "nerfstudio.data.datasets.base_dataset": [[51, 1, 1, "", "InputDataset"]], "nerfstudio.data.datasets.base_dataset.InputDataset": [[51, 2, 1, "", "get_data"], [51, 2, 1, "", "get_image"], [51, 2, 1, "", "get_metadata"], [51, 2, 1, "", "get_numpy_image"], [51, 5, 1, "", "image_filenames"]], "nerfstudio.data.datasets.sdf_dataset": [[51, 1, 1, "", "SDFDataset"]], "nerfstudio.data.datasets.sdf_dataset.SDFDataset": [[51, 2, 1, "", "get_depths_and_normals"], [51, 2, 1, "", "get_metadata"]], "nerfstudio.data.datasets.semantic_dataset": [[51, 1, 1, "", "SemanticDataset"]], "nerfstudio.data.datasets.semantic_dataset.SemanticDataset": [[51, 2, 1, "", "get_metadata"]], "nerfstudio.data": [[52, 0, 0, "-", "pixel_samplers"], [52, 0, 0, "-", "scene_box"]], "nerfstudio.data.pixel_samplers": [[52, 1, 1, "", "PairPixelSampler"], [52, 1, 1, "", "PairPixelSamplerConfig"], [52, 1, 1, "", "PatchPixelSampler"], [52, 1, 1, "", "PatchPixelSamplerConfig"], [52, 1, 1, "", "PixelSampler"], [52, 1, 1, "", "PixelSamplerConfig"]], "nerfstudio.data.pixel_samplers.PairPixelSampler": [[52, 2, 1, "", "sample_method"]], "nerfstudio.data.pixel_samplers.PairPixelSamplerConfig": [[52, 3, 1, "", "radius"]], "nerfstudio.data.pixel_samplers.PatchPixelSampler": [[52, 2, 1, "", "sample_method"], [52, 2, 1, "", "set_num_rays_per_batch"]], "nerfstudio.data.pixel_samplers.PatchPixelSamplerConfig": [[52, 3, 1, "", "patch_size"]], "nerfstudio.data.pixel_samplers.PixelSampler": [[52, 2, 1, "", "collate_image_dataset_batch"], [52, 2, 1, "", "collate_image_dataset_batch_list"], [52, 2, 1, "", "sample"], [52, 2, 1, "", "sample_method"], [52, 2, 1, "", "set_num_rays_per_batch"]], "nerfstudio.data.pixel_samplers.PixelSamplerConfig": [[52, 3, 1, "", "fisheye_crop_radius"], [52, 3, 1, "", "is_equirectangular"], [52, 3, 1, "", "keep_full_image"], [52, 3, 1, "", "num_rays_per_batch"]], "nerfstudio.data.scene_box": [[52, 1, 1, "", "OrientedBox"], [52, 1, 1, "", "SceneBox"]], "nerfstudio.data.scene_box.OrientedBox": [[52, 3, 1, "", "R"], [52, 3, 1, "", "S"], [52, 3, 1, "", "T"], [52, 2, 1, "", "from_params"], [52, 2, 1, "", "within"]], "nerfstudio.data.scene_box.SceneBox": [[52, 3, 1, "", "aabb"], [52, 2, 1, "", "from_camera_poses"], [52, 2, 1, "", "get_center"], [52, 2, 1, "", "get_centered_and_scaled_scene_box"], [52, 2, 1, "", "get_diagonal_length"], [52, 2, 1, "", "get_normalized_positions"]], "nerfstudio.data.utils": [[53, 0, 0, "-", "colmap_parsing_utils"], [53, 0, 0, "-", "data_utils"], [53, 0, 0, "-", "dataloaders"], [53, 0, 0, "-", "nerfstudio_collate"]], "nerfstudio.data.utils.colmap_parsing_utils": [[53, 3, 1, "", "BaseImage"], [53, 1, 1, "", "Camera"], [53, 1, 1, "", "CameraModel"], [53, 1, 1, "", "Image"], [53, 1, 1, "", "Point3D"], [53, 4, 1, "", "read_cameras_binary"], [53, 4, 1, "", "read_cameras_text"], [53, 4, 1, "", "read_images_binary"], [53, 4, 1, "", "read_images_text"], [53, 4, 1, "", "read_next_bytes"], [53, 4, 1, "", "read_points3D_binary"], [53, 4, 1, "", "read_points3D_text"], [53, 4, 1, "", "write_cameras_binary"], [53, 4, 1, "", "write_cameras_text"], [53, 4, 1, "", "write_images_binary"], [53, 4, 1, "", "write_images_text"], [53, 4, 1, "", "write_next_bytes"], [53, 4, 1, "", "write_points3D_binary"], [53, 4, 1, "", "write_points3D_text"]], "nerfstudio.data.utils.colmap_parsing_utils.Camera": [[53, 3, 1, "", "height"], [53, 3, 1, "", "id"], [53, 3, 1, "", "model"], [53, 3, 1, "", "params"], [53, 3, 1, "", "width"]], "nerfstudio.data.utils.colmap_parsing_utils.CameraModel": [[53, 3, 1, "", "model_id"], [53, 3, 1, "", "model_name"], [53, 3, 1, "", "num_params"]], "nerfstudio.data.utils.colmap_parsing_utils.Point3D": [[53, 3, 1, "", "error"], [53, 3, 1, "", "id"], [53, 3, 1, "", "image_ids"], [53, 3, 1, "", "point2D_idxs"], [53, 3, 1, "", "rgb"], [53, 3, 1, "", "xyz"]], "nerfstudio.data.utils.data_utils": [[53, 4, 1, "", "get_depth_image_from_path"], [53, 4, 1, "", "get_image_mask_tensor_from_path"], [53, 4, 1, "", "get_semantics_and_mask_tensors_from_path"]], "nerfstudio.data.utils.dataloaders": [[53, 1, 1, "", "CacheDataloader"], [53, 1, 1, "", "EvalDataloader"], [53, 1, 1, "", "FixedIndicesEvalDataloader"], [53, 1, 1, "", "RandIndicesEvalDataloader"]], "nerfstudio.data.utils.dataloaders.EvalDataloader": [[53, 2, 1, "", "__iter__"], [53, 2, 1, "", "__next__"], [53, 2, 1, "", "get_camera"], [53, 2, 1, "", "get_data_from_image_idx"]], "nerfstudio.data.utils.nerfstudio_collate": [[53, 4, 1, "", "nerfstudio_collate"]], "nerfstudio.engine": [[67, 0, 0, "-", "callbacks"], [67, 0, 0, "-", "optimizers"], [67, 0, 0, "-", "schedulers"], [67, 0, 0, "-", "trainer"]], "nerfstudio.engine.callbacks": [[67, 1, 1, "", "TrainingCallback"], [67, 1, 1, "", "TrainingCallbackAttributes"], [67, 1, 1, "", "TrainingCallbackLocation"]], "nerfstudio.engine.callbacks.TrainingCallback": [[67, 2, 1, "", "run_callback"], [67, 2, 1, "", "run_callback_at_location"]], "nerfstudio.engine.callbacks.TrainingCallbackAttributes": [[67, 3, 1, "", "grad_scaler"], [67, 3, 1, "", "optimizers"], [67, 3, 1, "", "pipeline"]], "nerfstudio.engine.optimizers": [[67, 1, 1, "", "AdamOptimizerConfig"], [67, 1, 1, "", "OptimizerConfig"], [67, 1, 1, "", "Optimizers"], [67, 1, 1, "", "RAdamOptimizerConfig"]], "nerfstudio.engine.optimizers.AdamOptimizerConfig": [[67, 3, 1, "", "weight_decay"]], "nerfstudio.engine.optimizers.OptimizerConfig": [[67, 3, 1, "", "eps"], [67, 3, 1, "", "lr"], [67, 3, 1, "", "max_norm"], [67, 2, 1, "", "setup"]], "nerfstudio.engine.optimizers.Optimizers": [[67, 2, 1, "", "load_optimizers"], [67, 2, 1, "", "load_schedulers"], [67, 2, 1, "", "optimizer_scaler_step_all"], [67, 2, 1, "", "optimizer_scaler_step_some"], [67, 2, 1, "", "optimizer_step"], [67, 2, 1, "", "optimizer_step_all"], [67, 2, 1, "", "scheduler_step"], [67, 2, 1, "", "scheduler_step_all"], [67, 2, 1, "", "zero_grad_all"], [67, 2, 1, "", "zero_grad_some"]], "nerfstudio.engine.optimizers.RAdamOptimizerConfig": [[67, 3, 1, "", "weight_decay"]], "nerfstudio.engine.schedulers": [[67, 1, 1, "", "CosineDecayScheduler"], [67, 1, 1, "", "CosineDecaySchedulerConfig"], [67, 1, 1, "", "ExponentialDecayScheduler"], [67, 1, 1, "", "ExponentialDecaySchedulerConfig"], [67, 1, 1, "", "MultiStepScheduler"], [67, 1, 1, "", "MultiStepSchedulerConfig"], [67, 1, 1, "", "Scheduler"], [67, 1, 1, "", "SchedulerConfig"]], "nerfstudio.engine.schedulers.CosineDecayScheduler": [[67, 2, 1, "", "get_scheduler"]], "nerfstudio.engine.schedulers.CosineDecaySchedulerConfig": [[67, 3, 1, "", "learning_rate_alpha"], [67, 3, 1, "", "max_steps"], [67, 3, 1, "", "warm_up_end"]], "nerfstudio.engine.schedulers.ExponentialDecayScheduler": [[67, 2, 1, "", "get_scheduler"]], "nerfstudio.engine.schedulers.ExponentialDecaySchedulerConfig": [[67, 3, 1, "", "lr_final"], [67, 3, 1, "", "lr_pre_warmup"], [67, 3, 1, "", "max_steps"], [67, 3, 1, "", "ramp"], [67, 3, 1, "", "warmup_steps"]], "nerfstudio.engine.schedulers.MultiStepScheduler": [[67, 2, 1, "", "get_scheduler"]], "nerfstudio.engine.schedulers.MultiStepSchedulerConfig": [[67, 3, 1, "", "gamma"], [67, 3, 1, "", "max_steps"], [67, 3, 1, "", "milestones"]], "nerfstudio.engine.schedulers.Scheduler": [[67, 2, 1, "", "get_scheduler"]], "nerfstudio.engine.trainer": [[67, 1, 1, "", "Trainer"], [67, 1, 1, "", "TrainerConfig"]], "nerfstudio.engine.trainer.Trainer": [[67, 3, 1, "", "callbacks"], [67, 3, 1, "", "config"], [67, 3, 1, "", "device"], [67, 3, 1, "", "local_rank"], [67, 3, 1, "", "optimizers"], [67, 3, 1, "", "pipeline"], [67, 2, 1, "", "setup"], [67, 2, 1, "", "setup_optimizers"], [67, 2, 1, "", "train"], [67, 2, 1, "", "train_iteration"], [67, 3, 1, "", "training_state"], [67, 3, 1, "", "world_size"]], "nerfstudio.engine.trainer.TrainerConfig": [[67, 3, 1, "", "gradient_accumulation_steps"], [67, 3, 1, "", "load_checkpoint"], [67, 3, 1, "", "load_config"], [67, 3, 1, "", "load_dir"], [67, 3, 1, "", "load_step"], [67, 3, 1, "", "log_gradients"], [67, 3, 1, "", "max_num_iterations"], [67, 3, 1, "", "mixed_precision"], [67, 3, 1, "", "save_only_latest_checkpoint"], [67, 3, 1, "", "steps_per_eval_all_images"], [67, 3, 1, "", "steps_per_eval_batch"], [67, 3, 1, "", "steps_per_eval_image"], [67, 3, 1, "", "steps_per_save"], [67, 3, 1, "", "use_grad_scaler"]], "nerfstudio.field_components": [[54, 0, 0, "-", "embedding"], [55, 0, 0, "-", "encodings"], [56, 0, 0, "-", "field_heads"], [58, 0, 0, "-", "mlp"], [59, 0, 0, "-", "spatial_distortions"]], "nerfstudio.field_components.embedding": [[54, 1, 1, "", "Embedding"]], "nerfstudio.field_components.embedding.Embedding": [[54, 2, 1, "", "build_nn_modules"], [54, 2, 1, "", "forward"], [54, 2, 1, "", "mean"]], "nerfstudio.field_components.encodings": [[55, 1, 1, "", "Encoding"], [55, 1, 1, "", "FFEncoding"], [55, 1, 1, "", "HashEncoding"], [55, 1, 1, "", "Identity"], [55, 1, 1, "", "KPlanesEncoding"], [55, 1, 1, "", "NeRFEncoding"], [55, 1, 1, "", "PolyhedronFFEncoding"], [55, 1, 1, "", "RFFEncoding"], [55, 1, 1, "", "SHEncoding"], [55, 1, 1, "", "ScalingAndOffset"], [55, 1, 1, "", "TensorCPEncoding"], [55, 1, 1, "", "TensorVMEncoding"], [55, 1, 1, "", "TriplaneEncoding"]], "nerfstudio.field_components.encodings.Encoding": [[55, 2, 1, "", "forward"], [55, 2, 1, "", "get_tcnn_encoding_config"]], "nerfstudio.field_components.encodings.FFEncoding": [[55, 2, 1, "", "forward"], [55, 2, 1, "", "get_out_dim"]], "nerfstudio.field_components.encodings.HashEncoding": [[55, 2, 1, "", "build_nn_modules"], [55, 2, 1, "", "forward"], [55, 2, 1, "", "get_out_dim"], [55, 2, 1, "", "get_tcnn_encoding_config"], [55, 2, 1, "", "hash_fn"], [55, 2, 1, "", "pytorch_fwd"]], "nerfstudio.field_components.encodings.Identity": [[55, 2, 1, "", "forward"], [55, 2, 1, "", "get_out_dim"]], "nerfstudio.field_components.encodings.KPlanesEncoding": [[55, 2, 1, "", "forward"], [55, 2, 1, "", "get_out_dim"]], "nerfstudio.field_components.encodings.NeRFEncoding": [[55, 2, 1, "", "forward"], [55, 2, 1, "", "get_out_dim"], [55, 2, 1, "", "get_tcnn_encoding_config"], [55, 2, 1, "", "pytorch_fwd"]], "nerfstudio.field_components.encodings.SHEncoding": [[55, 2, 1, "", "forward"], [55, 2, 1, "", "get_out_dim"], [55, 2, 1, "", "get_tcnn_encoding_config"], [55, 2, 1, "", "pytorch_fwd"]], "nerfstudio.field_components.encodings.ScalingAndOffset": [[55, 2, 1, "", "forward"], [55, 2, 1, "", "get_out_dim"]], "nerfstudio.field_components.encodings.TensorCPEncoding": [[55, 2, 1, "", "forward"], [55, 2, 1, "", "get_out_dim"], [55, 2, 1, "", "upsample_grid"]], "nerfstudio.field_components.encodings.TensorVMEncoding": [[55, 2, 1, "", "forward"], [55, 2, 1, "", "get_out_dim"], [55, 2, 1, "", "upsample_grid"]], "nerfstudio.field_components.encodings.TriplaneEncoding": [[55, 2, 1, "", "forward"], [55, 2, 1, "", "get_out_dim"], [55, 2, 1, "", "upsample_grid"]], "nerfstudio.field_components.field_heads": [[56, 1, 1, "", "DensityFieldHead"], [56, 1, 1, "", "FieldHead"], [56, 1, 1, "", "FieldHeadNames"], [56, 1, 1, "", "PredNormalsFieldHead"], [56, 1, 1, "", "RGBFieldHead"], [56, 1, 1, "", "SHFieldHead"], [56, 1, 1, "", "SemanticFieldHead"], [56, 1, 1, "", "TransientDensityFieldHead"], [56, 1, 1, "", "TransientRGBFieldHead"], [56, 1, 1, "", "UncertaintyFieldHead"]], "nerfstudio.field_components.field_heads.FieldHead": [[56, 2, 1, "", "forward"], [56, 2, 1, "", "set_in_dim"]], "nerfstudio.field_components.field_heads.PredNormalsFieldHead": [[56, 2, 1, "", "forward"]], "nerfstudio.field_components.mlp": [[58, 1, 1, "", "MLP"], [58, 1, 1, "", "MLPWithHashEncoding"], [58, 4, 1, "", "activation_to_tcnn_string"]], "nerfstudio.field_components.mlp.MLP": [[58, 2, 1, "", "build_nn_modules"], [58, 2, 1, "", "forward"], [58, 2, 1, "", "get_tcnn_network_config"], [58, 2, 1, "", "pytorch_fwd"]], "nerfstudio.field_components.mlp.MLPWithHashEncoding": [[58, 2, 1, "", "build_nn_modules"], [58, 2, 1, "", "forward"]], "nerfstudio.field_components.spatial_distortions": [[59, 1, 1, "", "SceneContraction"], [59, 1, 1, "", "SpatialDistortion"]], "nerfstudio.field_components.spatial_distortions.SceneContraction": [[59, 2, 1, "", "forward"]], "nerfstudio.field_components.spatial_distortions.SpatialDistortion": [[59, 2, 1, "", "forward"]], "nerfstudio.fields": [[60, 0, 0, "-", "base_field"], [60, 0, 0, "-", "density_fields"], [60, 0, 0, "-", "nerfacto_field"], [60, 0, 0, "-", "nerfw_field"], [60, 0, 0, "-", "sdf_field"], [60, 0, 0, "-", "semantic_nerf_field"], [60, 0, 0, "-", "tensorf_field"], [60, 0, 0, "-", "vanilla_nerf_field"]], "nerfstudio.fields.base_field": [[60, 1, 1, "", "Field"], [60, 1, 1, "", "FieldConfig"], [60, 4, 1, "", "get_normalized_directions"]], "nerfstudio.fields.base_field.Field": [[60, 2, 1, "", "density_fn"], [60, 2, 1, "", "forward"], [60, 2, 1, "", "get_density"], [60, 2, 1, "", "get_normals"], [60, 2, 1, "", "get_outputs"]], "nerfstudio.fields.density_fields": [[60, 1, 1, "", "HashMLPDensityField"]], "nerfstudio.fields.density_fields.HashMLPDensityField": [[60, 2, 1, "", "get_density"], [60, 2, 1, "", "get_outputs"]], "nerfstudio.fields.nerfacto_field": [[60, 1, 1, "", "NerfactoField"]], "nerfstudio.fields.nerfacto_field.NerfactoField": [[60, 2, 1, "", "get_density"], [60, 2, 1, "", "get_outputs"]], "nerfstudio.fields.nerfw_field": [[60, 1, 1, "", "VanillaNerfWField"]], "nerfstudio.fields.nerfw_field.VanillaNerfWField": [[60, 2, 1, "", "get_density"], [60, 2, 1, "", "get_outputs"]], "nerfstudio.fields.sdf_field": [[60, 1, 1, "", "LearnedVariance"], [60, 1, 1, "", "SDFField"], [60, 1, 1, "", "SDFFieldConfig"]], "nerfstudio.fields.sdf_field.LearnedVariance": [[60, 2, 1, "", "forward"], [60, 2, 1, "", "get_variance"]], "nerfstudio.fields.sdf_field.SDFField": [[60, 2, 1, "", "forward"], [60, 2, 1, "", "forward_geonetwork"], [60, 2, 1, "", "get_alpha"], [60, 2, 1, "", "get_colors"], [60, 2, 1, "", "get_density"], [60, 2, 1, "", "get_outputs"], [60, 2, 1, "", "get_sdf"], [60, 2, 1, "", "initialize_geo_layers"], [60, 2, 1, "", "set_cos_anneal_ratio"]], "nerfstudio.fields.sdf_field.SDFFieldConfig": [[60, 3, 1, "", "appearance_embedding_dim"], [60, 3, 1, "", "base_res"], [60, 3, 1, "", "beta_init"], [60, 3, 1, "", "bias"], [60, 3, 1, "", "divide_factor"], [60, 3, 1, "", "features_per_level"], [60, 3, 1, "", "geo_feat_dim"], [60, 3, 1, "", "geometric_init"], [60, 3, 1, "", "hidden_dim"], [60, 3, 1, "", "hidden_dim_color"], [60, 3, 1, "", "inside_outside"], [60, 3, 1, "", "log2_hashmap_size"], [60, 3, 1, "", "max_res"], [60, 3, 1, "", "num_layers"], [60, 3, 1, "", "num_layers_color"], [60, 3, 1, "", "num_levels"], [60, 3, 1, "", "smoothstep"], [60, 3, 1, "", "use_appearance_embedding"], [60, 3, 1, "", "use_grid_feature"], [60, 3, 1, "", "use_hash"], [60, 3, 1, "", "weight_norm"]], "nerfstudio.fields.semantic_nerf_field": [[60, 1, 1, "", "SemanticNerfField"]], "nerfstudio.fields.semantic_nerf_field.SemanticNerfField": [[60, 2, 1, "", "get_density"], [60, 2, 1, "", "get_outputs"]], "nerfstudio.fields.tensorf_field": [[60, 1, 1, "", "TensoRFField"]], "nerfstudio.fields.tensorf_field.TensoRFField": [[60, 2, 1, "", "forward"], [60, 2, 1, "", "get_density"], [60, 2, 1, "", "get_outputs"]], "nerfstudio.fields.vanilla_nerf_field": [[60, 1, 1, "", "NeRFField"]], "nerfstudio.fields.vanilla_nerf_field.NeRFField": [[60, 2, 1, "", "get_density"], [60, 2, 1, "", "get_outputs"]], "nerfstudio.model_components": [[63, 0, 0, "-", "losses"], [64, 0, 0, "-", "ray_samplers"], [65, 0, 0, "-", "renderers"]], "nerfstudio.model_components.losses": [[63, 1, 1, "", "DepthLossType"], [63, 1, 1, "", "GradientLoss"], [63, 1, 1, "", "MiDaSMSELoss"], [63, 1, 1, "", "ScaleAndShiftInvariantLoss"], [63, 4, 1, "", "depth_loss"], [63, 4, 1, "", "depth_ranking_loss"], [63, 4, 1, "", "distortion_loss"], [63, 4, 1, "", "ds_nerf_depth_loss"], [63, 4, 1, "", "interlevel_loss"], [63, 4, 1, "", "lossfun_distortion"], [63, 4, 1, "", "lossfun_outer"], [63, 4, 1, "", "monosdf_normal_loss"], [63, 4, 1, "", "nerfstudio_distortion_loss"], [63, 4, 1, "", "orientation_loss"], [63, 4, 1, "", "outer"], [63, 4, 1, "", "pred_normal_loss"], [63, 4, 1, "", "ray_samples_to_sdist"], [63, 4, 1, "", "scale_gradients_by_distance_squared"], [63, 4, 1, "", "tv_loss"], [63, 4, 1, "", "urban_radiance_field_depth_loss"]], "nerfstudio.model_components.losses.GradientLoss": [[63, 2, 1, "", "forward"], [63, 2, 1, "", "gradient_loss"]], "nerfstudio.model_components.losses.MiDaSMSELoss": [[63, 2, 1, "", "forward"]], "nerfstudio.model_components.losses.ScaleAndShiftInvariantLoss": [[63, 2, 1, "", "forward"], [63, 5, 1, "", "prediction_ssi"]], "nerfstudio.model_components.ray_samplers": [[64, 1, 1, "", "DensityFn"], [64, 1, 1, "", "LinearDisparitySampler"], [64, 1, 1, "", "LogSampler"], [64, 1, 1, "", "NeuSSampler"], [64, 1, 1, "", "PDFSampler"], [64, 1, 1, "", "ProposalNetworkSampler"], [64, 1, 1, "", "Sampler"], [64, 1, 1, "", "SpacedSampler"], [64, 1, 1, "", "SqrtSampler"], [64, 1, 1, "", "UniformLinDispPiecewiseSampler"], [64, 1, 1, "", "UniformSampler"], [64, 1, 1, "", "VolumetricSampler"]], "nerfstudio.model_components.ray_samplers.NeuSSampler": [[64, 2, 1, "", "generate_ray_samples"], [64, 2, 1, "", "merge_ray_samples"], [64, 2, 1, "", "rendering_sdf_with_fixed_inv_s"]], "nerfstudio.model_components.ray_samplers.PDFSampler": [[64, 2, 1, "", "generate_ray_samples"]], "nerfstudio.model_components.ray_samplers.ProposalNetworkSampler": [[64, 2, 1, "", "generate_ray_samples"], [64, 2, 1, "", "set_anneal"], [64, 2, 1, "", "step_cb"]], "nerfstudio.model_components.ray_samplers.Sampler": [[64, 2, 1, "", "forward"], [64, 2, 1, "", "generate_ray_samples"]], "nerfstudio.model_components.ray_samplers.SpacedSampler": [[64, 2, 1, "", "generate_ray_samples"]], "nerfstudio.model_components.ray_samplers.VolumetricSampler": [[64, 2, 1, "", "forward"], [64, 2, 1, "", "generate_ray_samples"], [64, 2, 1, "", "get_sigma_fn"]], "nerfstudio.model_components.renderers": [[65, 1, 1, "", "AccumulationRenderer"], [65, 1, 1, "", "DepthRenderer"], [65, 1, 1, "", "NormalsRenderer"], [65, 1, 1, "", "RGBRenderer"], [65, 1, 1, "", "SHRenderer"], [65, 1, 1, "", "SemanticRenderer"], [65, 1, 1, "", "UncertaintyRenderer"], [65, 4, 1, "", "background_color_override_context"]], "nerfstudio.model_components.renderers.AccumulationRenderer": [[65, 2, 1, "", "forward"]], "nerfstudio.model_components.renderers.DepthRenderer": [[65, 2, 1, "", "forward"]], "nerfstudio.model_components.renderers.NormalsRenderer": [[65, 2, 1, "", "forward"]], "nerfstudio.model_components.renderers.RGBRenderer": [[65, 2, 1, "", "blend_background"], [65, 2, 1, "", "blend_background_for_loss_computation"], [65, 2, 1, "", "combine_rgb"], [65, 2, 1, "", "forward"], [65, 2, 1, "", "get_background_color"]], "nerfstudio.model_components.renderers.SHRenderer": [[65, 2, 1, "", "forward"]], "nerfstudio.model_components.renderers.SemanticRenderer": [[65, 2, 1, "", "forward"]], "nerfstudio.model_components.renderers.UncertaintyRenderer": [[65, 2, 1, "", "forward"]], "nerfstudio.models": [[66, 0, 0, "-", "base_model"], [66, 0, 0, "-", "instant_ngp"], [66, 0, 0, "-", "semantic_nerfw"], [66, 0, 0, "-", "vanilla_nerf"]], "nerfstudio.models.base_model": [[66, 1, 1, "", "Model"], [66, 1, 1, "", "ModelConfig"]], "nerfstudio.models.base_model.Model": [[66, 5, 1, "", "device"], [66, 2, 1, "", "forward"], [66, 2, 1, "", "get_image_metrics_and_images"], [66, 2, 1, "", "get_loss_dict"], [66, 2, 1, "", "get_metrics_dict"], [66, 2, 1, "", "get_outputs"], [66, 2, 1, "", "get_outputs_for_camera"], [66, 2, 1, "", "get_outputs_for_camera_ray_bundle"], [66, 2, 1, "", "get_param_groups"], [66, 2, 1, "", "get_rgba_image"], [66, 2, 1, "", "get_training_callbacks"], [66, 2, 1, "", "load_model"], [66, 2, 1, "", "populate_modules"], [66, 2, 1, "", "update_to_step"]], "nerfstudio.models.base_model.ModelConfig": [[66, 3, 1, "", "collider_params"], [66, 3, 1, "", "enable_collider"], [66, 3, 1, "", "eval_num_rays_per_chunk"], [66, 3, 1, "", "loss_coefficients"], [66, 3, 1, "", "prompt"]], "nerfstudio.models.instant_ngp": [[66, 1, 1, "", "InstantNGPModelConfig"], [66, 1, 1, "", "NGPModel"]], "nerfstudio.models.instant_ngp.InstantNGPModelConfig": [[66, 3, 1, "", "alpha_thre"], [66, 3, 1, "", "background_color"], [66, 3, 1, "", "collider_params"], [66, 3, 1, "", "cone_angle"], [66, 3, 1, "", "disable_scene_contraction"], [66, 3, 1, "", "enable_collider"], [66, 3, 1, "", "far_plane"], [66, 3, 1, "", "grid_levels"], [66, 3, 1, "", "grid_resolution"], [66, 3, 1, "", "log2_hashmap_size"], [66, 3, 1, "", "max_res"], [66, 3, 1, "", "near_plane"], [66, 3, 1, "", "render_step_size"], [66, 3, 1, "", "use_appearance_embedding"], [66, 3, 1, "", "use_gradient_scaling"]], "nerfstudio.models.instant_ngp.NGPModel": [[66, 2, 1, "", "get_image_metrics_and_images"], [66, 2, 1, "", "get_loss_dict"], [66, 2, 1, "", "get_metrics_dict"], [66, 2, 1, "", "get_outputs"], [66, 2, 1, "", "get_param_groups"], [66, 2, 1, "", "get_training_callbacks"], [66, 2, 1, "", "populate_modules"]], "nerfstudio.models.semantic_nerfw": [[66, 1, 1, "", "SemanticNerfWModel"], [66, 1, 1, "", "SemanticNerfWModelConfig"]], "nerfstudio.models.semantic_nerfw.SemanticNerfWModel": [[66, 2, 1, "", "get_image_metrics_and_images"], [66, 2, 1, "", "get_loss_dict"], [66, 2, 1, "", "get_metrics_dict"], [66, 2, 1, "", "get_outputs"], [66, 2, 1, "", "get_param_groups"], [66, 2, 1, "", "get_training_callbacks"], [66, 2, 1, "", "populate_modules"]], "nerfstudio.models.semantic_nerfw.SemanticNerfWModelConfig": [[66, 3, 1, "", "use_transient_embedding"]], "nerfstudio.models.vanilla_nerf": [[66, 1, 1, "", "NeRFModel"], [66, 1, 1, "", "VanillaModelConfig"]], "nerfstudio.models.vanilla_nerf.NeRFModel": [[66, 2, 1, "", "get_image_metrics_and_images"], [66, 2, 1, "", "get_loss_dict"], [66, 2, 1, "", "get_outputs"], [66, 2, 1, "", "get_param_groups"], [66, 2, 1, "", "populate_modules"]], "nerfstudio.models.vanilla_nerf.VanillaModelConfig": [[66, 3, 1, "", "background_color"], [66, 3, 1, "", "enable_temporal_distortion"], [66, 3, 1, "", "num_coarse_samples"], [66, 3, 1, "", "num_importance_samples"], [66, 3, 1, "", "temporal_distortion_params"], [66, 3, 1, "", "use_gradient_scaling"]], "nerfstudio.plugins": [[68, 0, 0, "-", "registry"], [68, 0, 0, "-", "registry_dataparser"], [68, 0, 0, "-", "types"]], "nerfstudio.plugins.registry": [[68, 4, 1, "", "discover_methods"]], "nerfstudio.plugins.registry_dataparser": [[68, 1, 1, "", "DataParserSpecification"], [68, 4, 1, "", "discover_dataparsers"]], "nerfstudio.plugins.registry_dataparser.DataParserSpecification": [[68, 3, 1, "", "config"], [68, 3, 1, "", "description"]], "nerfstudio.plugins.types": [[68, 1, 1, "", "MethodSpecification"]], "nerfstudio.plugins.types.MethodSpecification": [[68, 3, 1, "", "config"], [68, 3, 1, "", "description"]], "nerfstudio.utils": [[69, 0, 0, "-", "colormaps"], [70, 0, 0, "-", "colors"], [72, 0, 0, "-", "math"], [73, 0, 0, "-", "tensor_dataclass"]], "nerfstudio.utils.colormaps": [[69, 1, 1, "", "ColormapOptions"], [69, 4, 1, "", "apply_boolean_colormap"], [69, 4, 1, "", "apply_colormap"], [69, 4, 1, "", "apply_depth_colormap"], [69, 4, 1, "", "apply_float_colormap"], [69, 4, 1, "", "apply_pca_colormap"]], "nerfstudio.utils.colormaps.ColormapOptions": [[69, 3, 1, "", "colormap"], [69, 3, 1, "", "colormap_max"], [69, 3, 1, "", "colormap_min"], [69, 3, 1, "", "invert"], [69, 3, 1, "", "normalize"]], "nerfstudio.utils.colors": [[70, 4, 1, "", "get_color"]], "nerfstudio.utils.math": [[72, 1, 1, "", "Gaussians"], [72, 4, 1, "", "columnwise_squared_l2_distance"], [72, 4, 1, "", "components_from_spherical_harmonics"], [72, 4, 1, "", "compute_3d_gaussian"], [72, 4, 1, "", "conical_frustum_to_gaussian"], [72, 4, 1, "", "cylinder_to_gaussian"], [72, 4, 1, "", "expected_sin"], [72, 4, 1, "", "generate_polyhedron_basis"], [72, 4, 1, "", "intersect_aabb"], [72, 4, 1, "", "intersect_obb"], [72, 4, 1, "", "masked_reduction"], [72, 4, 1, "", "normalized_depth_scale_and_shift"], [72, 4, 1, "", "safe_normalize"]], "nerfstudio.utils.tensor_dataclass": [[73, 1, 1, "", "TensorDataclass"]], "nerfstudio.utils.tensor_dataclass.TensorDataclass": [[73, 2, 1, "", "__post_init__"], [73, 2, 1, "", "broadcast_to"], [73, 2, 1, "", "flatten"], [73, 5, 1, "", "ndim"], [73, 2, 1, "", "pin_memory"], [73, 2, 1, "", "reshape"], [73, 5, 1, "", "shape"], [73, 5, 1, "", "size"], [73, 2, 1, "", "to"]], "nerfstudio.viewer": [[74, 0, 0, "-", "viewer_elements"]], "nerfstudio.viewer.viewer_elements": [[74, 1, 1, "", "ViewerButton"], [74, 1, 1, "", "ViewerButtonGroup"], [74, 1, 1, "", "ViewerCheckbox"], [74, 1, 1, "", "ViewerClick"], [74, 1, 1, "", "ViewerControl"], [74, 1, 1, "", "ViewerDropdown"], [74, 1, 1, "", "ViewerElement"], [74, 1, 1, "", "ViewerNumber"], [74, 1, 1, "", "ViewerParameter"], [74, 1, 1, "", "ViewerRGB"], [74, 1, 1, "", "ViewerSlider"], [74, 1, 1, "", "ViewerText"], [74, 1, 1, "", "ViewerVec3"]], "nerfstudio.viewer.viewer_elements.ViewerButton": [[74, 2, 1, "", "install"]], "nerfstudio.viewer.viewer_elements.ViewerButtonGroup": [[74, 2, 1, "", "install"]], "nerfstudio.viewer.viewer_elements.ViewerClick": [[74, 3, 1, "", "direction"], [74, 3, 1, "", "origin"]], "nerfstudio.viewer.viewer_elements.ViewerControl": [[74, 2, 1, "", "get_camera"], [74, 2, 1, "", "register_click_cb"], [74, 2, 1, "", "set_crop"], [74, 2, 1, "", "set_fov"], [74, 2, 1, "", "set_pose"], [74, 2, 1, "", "unregister_click_cb"]], "nerfstudio.viewer.viewer_elements.ViewerDropdown": [[74, 2, 1, "", "set_options"]], "nerfstudio.viewer.viewer_elements.ViewerElement": [[74, 2, 1, "", "install"], [74, 2, 1, "", "remove"], [74, 2, 1, "", "set_disabled"], [74, 2, 1, "", "set_hidden"], [74, 2, 1, "", "set_visible"]], "nerfstudio.viewer.viewer_elements.ViewerParameter": [[74, 2, 1, "", "install"], [74, 5, 1, "", "value"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "titleterms": {"customiz": 0, "config": [0, 10, 44, 48], "base": [0, 49, 50, 51, 53, 60, 66], "compon": [0, 35, 62], "creat": [0, 6, 11, 16, 45, 46], "new": [0, 5], "tip": [0, 1, 3, 4, 41, 84], "see": 0, "also": 0, "updat": [0, 21, 22], "method": [0, 5, 11, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 43, 68], "modifi": 0, "from": [0, 16, 44], "cli": [0, 44, 75, 79], "benchmark": [1, 28], "workflow": 1, "launch": [1, 14], "train": [1, 7, 41, 44, 46, 82], "blender": [1, 16, 28, 50, 76], "dataset": [1, 21, 22, 30, 42, 51, 81], "evalu": [1, 30, 41, 44], "model": [1, 5, 10, 17, 18, 24, 27, 28, 30, 33, 35, 36, 44, 62, 66], "warn": [1, 12, 42], "debug": 2, "tool": 2, "local": [3, 14, 46], "writer": 3, "code": [4, 84], "profil": 4, "support": [4, 19], "In": 4, "hous": 4, "pytorch": [4, 45], "pyspi": 4, "attent": [4, 84], "ad": [5, 12, 23, 84], "file": 5, "structur": 5, "regist": 5, "custom": [5, 11, 12, 34, 41], "nerfstudio": [5, 16, 17, 44, 45, 50, 53, 76], "datapars": [5, 7, 68], "run": [5, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 44], "nerf": [5, 9, 16, 27, 28, 30, 34, 37, 43, 50, 60, 66], "studio": 5, "document": [5, 84], "datamanag": [6, 49], "what": [6, 7, 8, 10, 11], "i": [6, 7, 8, 10, 11], "exampl": [6, 7, 12, 16, 20], "your": [6, 18, 23, 41, 44], "own": [6, 23], "eval": [7, 77], "logic": 7, "includ": [7, 19], "field": [8, 28, 29, 37, 56, 57, 60], "separ": [8, 41], "densiti": [8, 29, 60], "output": 8, "us": [8, 41, 45, 46], "frustum": [8, 39], "instead": 8, "posit": [8, 28, 37], "pipelin": [9, 11, 21, 22, 28, 29], "overview": [9, 16, 17, 18, 21, 22, 24, 27, 28, 29, 30, 31, 33, 38, 84], "note": [9, 11, 23, 25, 41, 44, 45, 46, 80, 81, 84], "why": 9, "implement": [9, 10, 11, 16, 21, 23], "paper": 9, "function": 10, "python": [10, 15], "vanilla": [11, 60], "gui": 12, "an": [12, 43, 45], "element": 12, "viewer": [13, 15, 44, 46, 74, 83], "acknowledg": 13, "refer": 13, "server": 14, "instal": [14, 20, 21, 22, 25, 26, 30, 31, 32, 34, 41, 45, 79], "depend": [14, 43, 45], "web": 14, "client": 14, "faq": [14, 45], "engin": [14, 18, 41, 67], "node": 14, "incompat": 14, "control": 15, "usag": 15, "get": [15, 46], "camera": [15, 16, 36, 42, 46, 47, 78, 81], "matrix": 15, "set": [15, 41], "properti": 15, "scene": [15, 16, 40, 52], "click": 15, "callback": [15, 67], "thread": 15, "safeti": 15, "vfx": 16, "add": 16, "setup": [16, 41], "instruct": [16, 21, 22, 41], "gener": [16, 44], "json": 16, "path": [16, 47, 81], "addit": [16, 41], "detail": 16, "composit": 16, "object": 16, "environ": [16, 45], "sdfstudio": [17, 50, 76], "surfac": [17, 43], "citat": [17, 19], "export": [18, 43, 44, 78], "unreal": 18, "nvol": 18, "content": 19, "third": 19, "parti": 19, "quicklink": 19, "sponsor": 19, "built": 19, "On": 19, "contributor": 19, "maintain": [19, 84], "generfacto": 20, "result": [20, 21, 22, 26, 30, 44], "gs2g": 21, "how": [21, 22], "work": [21, 22], "edit": [21, 22], "imag": [21, 22, 41, 42, 45, 80], "instructpix2pix": [21, 22], "iter": [21, 22], "nerf2nerf": 22, "instant": [24, 50, 66], "ngp": [24, 50, 66], "multi": [24, 26, 44], "resolut": 24, "hash": [24, 37], "encod": [24, 28, 37, 55], "k": 25, "plane": 25, "lerf": 26, "scale": 26, "supervis": 26, "optim": [26, 47, 67], "visual": [26, 44], "relev": 26, "text": 26, "queri": 26, "mip": 27, "assumpt": 28, "represent": [28, 39], "render": [28, 41, 44, 46, 65, 81], "sampl": [28, 38, 39], "synthet": 28, "nerfacto": [29, 60], "tldr": 29, "pose": 29, "refin": 29, "piecewis": 29, "sampler": [29, 38, 52, 64], "propos": 29, "nerfbust": 30, "abstract": 30, "casual": 30, "captur": [30, 41], "video": [30, 41, 44, 46, 80], "visibiltii": 30, "loss": [30, 63], "preview": 30, "nerfplay": 31, "pynerf": 32, "tensorf": [33, 60], "tetra": 34, "data": [34, 41, 42, 50, 52, 53, 76, 80], "exist": [34, 43, 44], "checkpoint": [34, 44], "predict": 34, "perspect": 36, "fishey": 36, "equirectangular": [36, 41], "spheric": [36, 37], "distort": [36, 40, 59], "paramet": 36, "random": 37, "fourier": 37, "featur": 37, "rff": 37, "harmon": 37, "rai": [38, 47, 64], "stratifi": 38, "hierarch": 38, "space": [38, 42], "pdf": 38, "3d": 39, "repres": 39, "point": [39, 43, 44], "gaussian": [39, 78], "spatial": [40, 59], "contract": 40, "befor": 40, "after": 40, "process": [41, 80], "colmap": 41, "polycam": [41, 80], "up": 41, "kiri": 41, "record3d": [41, 76, 80], "spectacular": 41, "ai": 41, "metashap": [41, 80], "realitycaptur": [41, 80], "odm": [41, 80], "aria": [41, 80], "360": 41, "vr": 41, "omni": 41, "direct": 41, "stereo": 41, "vr180": 41, "convent": 42, "coordin": 42, "view": 42, "world": 42, "format": 42, "intrins": 42, "extrins": 42, "depth": [42, 78], "mask": 42, "geometri": 43, "mesh": 43, "1": 43, "tsdf": [43, 78], "fusion": 43, "2": 43, "poisson": [43, 78], "reconstruct": 43, "cloud": [43, 44], "other": 43, "textur": 43, "first": 44, "resum": 44, "intro": 44, "comet": 44, "tensorboard": 44, "wandb": 44, "gpu": 44, "prerequisit": 45, "tini": 45, "cuda": 45, "nn": 45, "docker": 45, "interact": 45, "contain": 45, "call": 45, "command": [45, 75, 76, 78, 80, 81], "directli": 45, "start": 46, "basic": 46, "trajectori": 46, "v": 46, "remot": 46, "comput": 46, "machin": 46, "util": [47, 53, 71], "lie": 47, "group": 47, "parser": 50, "arkitscen": 50, "d": 50, "dycheck": 50, "minim": 50, "osr": 50, "nuscen": 50, "phototour": [50, 76], "scannet": 50, "sitcoms3d": [50, 76], "sdf": [51, 60], "semant": [51, 60, 66], "pixel": 52, "box": 52, "dataload": 53, "collat": 53, "embed": 54, "head": 56, "modul": 57, "mlp": 58, "w": [60, 66], "api": 61, "schedul": 67, "trainer": 67, "plugin": 68, "registri": 68, "type": 68, "colormap": [69, 81], "color": 70, "math": 72, "tensordataclass": 73, "n": [76, 77, 78, 79, 80, 81, 82, 83], "download": 76, "subcommand": [76, 78, 80, 81], "sub": [76, 78, 80, 81], "option": [76, 77, 78, 79, 80, 81, 83], "dnerf": 76, "nerfosr": 76, "mill19": 76, "pointcloud": 78, "march": 78, "cube": 78, "splat": 78, "interpol": 81, "spiral": 81, "contribut": 84, "requir": 84, "commit": 84, "build": 84, "auto": 84, "notebook": 84}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Customizable configs": [[0, "customizable-configs"]], "Base components": [[0, "base-components"]], "Creating new configs": [[0, "creating-new-configs"]], "Tip": [[0, null], [1, null], [3, null], [4, null], [41, null], [84, null], [84, null]], "See Also": [[0, null]], "Updating method configs": [[0, "updating-method-configs"]], "Modifying from CLI": [[0, "modifying-from-cli"]], "Benchmarking workflow": [[1, "benchmarking-workflow"]], "Launching training on Blender dataset": [[1, "launching-training-on-blender-dataset"]], "Evaluating trained Blender models": [[1, "evaluating-trained-blender-models"]], "Warning": [[1, null], [12, null], [42, null]], "Debugging tools": [[2, "debugging-tools"]], "Local writer": [[3, "local-writer"]], "Code profiling support": [[4, "code-profiling-support"]], "In-house profiler": [[4, "in-house-profiler"]], "Profiling with PyTorch profiler": [[4, "profiling-with-pytorch-profiler"]], "Profiling with PySpy": [[4, "profiling-with-pyspy"]], "Attention": [[4, null], [84, null]], "Adding a New Method": [[5, "adding-a-new-method"]], "File Structure": [[5, "file-structure"]], "Registering custom model with nerfstudio": [[5, "registering-custom-model-with-nerfstudio"]], "Registering custom dataparser with nerfstudio": [[5, "registering-custom-dataparser-with-nerfstudio"]], "Running custom method": [[5, "running-custom-method"]], "Adding to the nerf.studio documentation": [[5, "adding-to-the-nerf-studio-documentation"]], "DataManagers": [[6, "datamanagers"]], "What is a DataManager?": [[6, "what-is-a-datamanager"]], "Example": [[6, "example"], [7, "example"]], "Creating Your Own": [[6, "creating-your-own"]], "DataParsers": [[7, "dataparsers"]], "What is a DataParser?": [[7, "what-is-a-dataparser"]], "Train and Eval Logic": [[7, "train-and-eval-logic"]], "Included DataParsers": [[7, "included-dataparsers"]], "Fields": [[8, "fields"], [60, "fields"]], "What is a Field?": [[8, "what-is-a-field"]], "Separate density and outputs": [[8, "separate-density-and-outputs"]], "Using Frustums instead of positions": [[8, "using-frustums-instead-of-positions"]], "Pipelines overview": [[9, "pipelines-overview"]], "Note": [[9, null], [11, null], [23, null], [25, null], [41, null], [41, null], [41, null], [41, null], [44, null], [45, null], [45, "note"], [46, null], [80, null], [81, null], [84, null]], "Why Pipelines?": [[9, "why-pipelines"]], "Implementing NeRF Papers": [[9, "implementing-nerf-papers"]], "Models": [[10, "models"], [66, "models"]], "What is a Model?": [[10, "what-is-a-model"]], "Functions to Implement": [[10, "functions-to-implement"]], "Pythonic Configs with Models": [[10, "pythonic-configs-with-models"]], "Implementing a Model": [[10, "implementing-a-model"]], "Pipelines": [[11, "pipelines"]], "What is a Pipeline?": [[11, "what-is-a-pipeline"]], "Vanilla Implementation": [[11, "vanilla-implementation"]], "Creating Custom Methods": [[11, "creating-custom-methods"]], "Custom GUI": [[12, "custom-gui"]], "Adding an Element": [[12, "adding-an-element"]], "Example Elements": [[12, "example-elements"]], "Viewer": [[13, "viewer"], [74, "viewer"]], "Acknowledgements and references": [[13, "acknowledgements-and-references"]], "Local Server": [[14, "local-server"]], "Installing Dependencies": [[14, "installing-dependencies"]], "Launch the web client": [[14, "launch-the-web-client"]], "FAQ": [[14, "faq"]], "Engine node incompatible": [[14, "engine-node-incompatible"]], "Python Viewer Control": [[15, "python-viewer-control"]], "Usage": [[15, "usage"]], "Get Camera Matrix": [[15, "get-camera-matrix"]], "Set Camera Properties": [[15, "set-camera-properties"]], "Scene Click Callbacks": [[15, "scene-click-callbacks"]], "Thread safety": [[15, "thread-safety"]], "Blender VFX add-on": [[16, "blender-vfx-add-on"]], "Overview": [[16, "overview"], [17, "overview"], [18, "overview"], [21, "overview"], [22, "overview"], [24, "overview"], [27, "overview"], [29, "overview"], [33, "overview"], [38, "overview"], [84, "overview"]], "Add-on Setup Instructions": [[16, "add-on-setup-instructions"]], "Scene Setup": [[16, "scene-setup"]], "Generate Nerfstudio JSON Camera Path from Blender Camera": [[16, "generate-nerfstudio-json-camera-path-from-blender-camera"]], "Examples": [[16, "examples"], [16, "id3"]], "Additional details": [[16, "additional-details"], [16, "id1"]], "Create Blender Camera from Nerfstudio JSON Camera Path": [[16, "create-blender-camera-from-nerfstudio-json-camera-path"]], "Compositing NeRF Objects in NeRF Environments": [[16, "compositing-nerf-objects-in-nerf-environments"]], "Additional Details": [[16, "id2"]], "Implementation Details": [[16, "implementation-details"]], "SDFStudio": [[17, "sdfstudio"], [50, "sdfstudio"]], "Surface models in nerfstudio": [[17, "surface-models-in-nerfstudio"]], "Citation": [[17, "citation"], [19, "citation"]], "Exporting to Unreal Engine": [[18, "exporting-to-unreal-engine"]], "Exporting your model to NVOL": [[18, "exporting-your-model-to-nvol"]], "Contents": [[19, "contents"]], "Supported Methods": [[19, "supported-methods"]], "Included Methods": [[19, "included-methods"]], "Third-party Methods": [[19, "third-party-methods"]], "Quicklinks": [[19, "quicklinks"]], "Sponsors": [[19, "sponsors"]], "Built On": [[19, "built-on"]], "Contributors": [[19, "contributors"]], "Maintainers": [[19, "maintainers"]], "Generfacto": [[20, "generfacto"]], "Installation": [[20, "installation"], [21, "installation"], [22, "installation"], [25, "installation"], [26, "installation"], [30, "installation"], [31, "installation"], [32, "installation"], [34, "installation"], [45, "installation"]], "Running Generfacto": [[20, "running-generfacto"]], "Example Results": [[20, "example-results"]], "Instruct-GS2GS": [[21, "instruct-gs2gs"]], "Running Instruct-GS2GS": [[21, "running-instruct-gs2gs"]], "Method": [[21, "method"], [22, "method"], [24, "method"], [25, "method"], [26, "method"], [29, "method"], [32, "method"], [34, "method"]], "Pipeline": [[21, "pipeline"], [22, "pipeline"], [28, "pipeline"], [29, "pipeline"]], "How it Works": [[21, "how-it-works"], [22, "how-it-works"]], "Editing Images with InstructPix2Pix": [[21, "editing-images-with-instructpix2pix"], [22, "editing-images-with-instructpix2pix"]], "Iterative Dataset Update and Implementation": [[21, "iterative-dataset-update-and-implementation"]], "Results": [[21, "results"], [22, "results"], [26, "results"]], "Instruct-NeRF2NeRF": [[22, "instruct-nerf2nerf"]], "Running Instruct-NeRF2NeRF": [[22, "running-instruct-nerf2nerf"]], "Iterative Dataset Update": [[22, "iterative-dataset-update"]], "Methods": [[23, "methods"]], "Running a method": [[23, "running-a-method"]], "Implemented Methods": [[23, "implemented-methods"]], "Adding Your Own Method": [[23, "adding-your-own-method"]], "Instant-NGP": [[24, "instant-ngp"], [50, "instant-ngp"]], "Running the Model": [[24, "running-the-model"]], "Multi-Resolution Hash Encoding": [[24, "multi-resolution-hash-encoding"]], "K-Planes": [[25, "k-planes"]], "Running K-Planes": [[25, "running-k-planes"]], "LERF": [[26, "lerf"]], "Running LERF": [[26, "running-lerf"]], "Multi-scale supervision": [[26, "multi-scale-supervision"]], "LERF Optimization": [[26, "lerf-optimization"]], "Visualizing relevancy for text queries": [[26, "visualizing-relevancy-for-text-queries"]], "Mip-NeRF": [[27, "mip-nerf"]], "Running Model": [[27, "running-model"], [33, "running-model"]], "NeRF": [[28, "nerf"], [66, "nerf"]], "Running the model": [[28, "running-the-model"]], "Method overview": [[28, "method-overview"]], "Assumptions": [[28, null]], "Field representation": [[28, "field-representation"]], "Positional encoding": [[28, "positional-encoding"]], "Rendering": [[28, "rendering"]], "Sampling": [[28, "sampling"]], "Benchmarks": [[28, "benchmarks"]], "Blender synthetic": [[28, "blender-synthetic"]], "Nerfacto": [[29, "nerfacto"], [60, "nerfacto"]], "Running the Method": [[29, "running-the-method"], [30, "running-the-method"]], "TLDR": [[29, null]], "Pose Refinement": [[29, "pose-refinement"]], "Piecewise Sampler": [[29, "piecewise-sampler"]], "Proposal Sampler": [[29, "proposal-sampler"]], "Density Field": [[29, "density-field"]], "Nerfacto Field": [[29, "nerfacto-field"]], "Nerfbusters": [[30, "nerfbusters"]], "Abstract": [[30, "abstract"]], "NeRF evaluation for casually captured videos": [[30, "nerf-evaluation-for-casually-captured-videos"]], "Model Overview": [[30, "model-overview"]], "Visibiltiy Loss": [[30, "visibiltiy-loss"]], "Results and dataset preview": [[30, "results-and-dataset-preview"]], "NeRFPlayer": [[31, "nerfplayer"]], "Running NeRFPlayer": [[31, "running-nerfplayer"]], "Method Overview": [[31, "method-overview"]], "PyNeRF": [[32, "pynerf"]], "Running PyNeRF": [[32, "running-pynerf"]], "TensoRF": [[33, "tensorf"], [60, "tensorf"]], "Tetra-NeRF": [[34, "tetra-nerf"]], "Running Tetra-NeRF on custom data": [[34, "running-tetra-nerf-on-custom-data"]], "Existing checkpoints and predictions": [[34, "existing-checkpoints-and-predictions"]], "Model components": [[35, "model-components"], [62, "model-components"]], "Camera Models": [[36, "camera-models"]], "Perspective Camera Model": [[36, "perspective-camera-model"]], "Fisheye Camera Model": [[36, "fisheye-camera-model"]], "Equirectangular/Spherical Camera Model": [[36, "equirectangular-spherical-camera-model"]], "Distortion Parameters": [[36, "distortion-parameters"]], "Field Encoders": [[37, "field-encoders"]], "NeRF Positional Encoding": [[37, "nerf-positional-encoding"]], "Random Fourier Feature (RFF) Encoding": [[37, "random-fourier-feature-rff-encoding"]], "Hash Encoding": [[37, "hash-encoding"]], "Spherical Harmonic Encoding": [[37, "spherical-harmonic-encoding"]], "Ray Samplers": [[38, "ray-samplers"]], "Stratified Sampling": [[38, "stratified-sampling"]], "Hierarchical Sampling": [[38, "hierarchical-sampling"]], "Spaced Samplers": [[38, "spaced-samplers"]], "PDF Sampler": [[38, "pdf-sampler"]], "Sample Representation": [[39, "sample-representation"]], "3D Frustum": [[39, "d-frustum"]], "Representing Frustums as Points": [[39, "representing-frustums-as-points"]], "Representing Frustums as Gaussians": [[39, "representing-frustums-as-gaussians"]], "Spatial Distortions": [[40, "spatial-distortions"], [59, "spatial-distortions"]], "Scene Contraction": [[40, "scene-contraction"]], "Before Contraction": [[40, "before-contraction"]], "After Contraction": [[40, "after-contraction"]], "Using custom data": [[41, "using-custom-data"]], "Images or Video": [[41, "images-or-video"]], "Processing Data": [[41, "processing-data"]], "Training on your data": [[41, "training-on-your-data"]], "Training and evaluation on separate data": [[41, "training-and-evaluation-on-separate-data"]], "Installing COLMAP": [[41, "installing-colmap"]], "Polycam Capture": [[41, "polycam-capture"]], "Setting up Polycam": [[41, "setting-up-polycam"]], "Process data": [[41, "process-data"], [41, "id1"]], "KIRI Engine Capture": [[41, "kiri-engine-capture"]], "Setting up KIRI Engine": [[41, "setting-up-kiri-engine"]], "Record3D Capture": [[41, "record3d-capture"]], "Spectacular AI": [[41, "spectacular-ai"]], "Metashape": [[41, "metashape"]], "RealityCapture": [[41, "realitycapture"]], "ODM": [[41, "odm"]], "Aria": [[41, "aria"]], "360 Data (Equirectangular)": [[41, "data-equirectangular"]], "Images": [[41, "images"]], "Videos": [[41, "videos"]], "\ud83e\udd7d Render VR Video": [[41, "render-vr-video"]], "Omni-directional Stereo (360 VR)": [[41, "omni-directional-stereo-360-vr"]], "VR180": [[41, "vr180"]], "Setup instructions": [[41, "setup-instructions"]], "Additional Notes": [[41, "additional-notes"]], "Data conventions": [[42, "data-conventions"]], "Coordinate conventions": [[42, "coordinate-conventions"]], "Camera/view space": [[42, "camera-view-space"]], "World space": [[42, "world-space"]], "Dataset format": [[42, "dataset-format"]], "Camera intrinsics": [[42, "camera-intrinsics"]], "Camera extrinsics": [[42, "camera-extrinsics"]], "Depth images": [[42, "depth-images"]], "Masks": [[42, "masks"]], "Export geometry": [[43, "export-geometry"]], "Exporting a mesh": [[43, "exporting-a-mesh"]], "1. TSDF Fusion": [[43, "tsdf-fusion"]], "2. Poisson surface reconstruction": [[43, "poisson-surface-reconstruction"]], "Exporting a point cloud": [[43, "exporting-a-point-cloud"]], "Other exporting methods": [[43, "other-exporting-methods"]], "Texturing an existing mesh with NeRF": [[43, "texturing-an-existing-mesh-with-nerf"]], "Dependencies": [[43, "dependencies"], [45, "dependencies"]], "Training your first model": [[44, "training-your-first-model"]], "Train and run viewer": [[44, "train-and-run-viewer"]], "Resume from checkpoint": [[44, "resume-from-checkpoint"]], "Visualize existing run": [[44, "visualize-existing-run"]], "Exporting Results": [[44, "exporting-results"]], "Render Video": [[44, "render-video"]], "Generate Point Cloud": [[44, "generate-point-cloud"]], "Intro to nerfstudio CLI and Configs": [[44, "intro-to-nerfstudio-cli-and-configs"]], "Comet / Tensorboard / WandB / Viewer": [[44, "comet-tensorboard-wandb-viewer"]], "Evaluating Runs": [[44, "evaluating-runs"]], "Multi-GPU Training": [[44, "multi-gpu-training"]], "Prerequisites": [[45, "prerequisites"], [45, "id2"]], "Create environment": [[45, "create-environment"]], "PyTorch": [[45, "pytorch"]], "tiny-cuda-nn": [[45, "tiny-cuda-nn"]], "Installing nerfstudio": [[45, "installing-nerfstudio"]], "Use docker image": [[45, "use-docker-image"]], "Using an interactive container": [[45, "using-an-interactive-container"]], "Call nerfstudio commands directly": [[45, "call-nerfstudio-commands-directly"]], "Installation FAQ": [[45, "installation-faq"]], "Using the viewer": [[46, "using-the-viewer"]], "Getting started": [[46, "getting-started"]], "Viewer basics": [[46, "viewer-basics"]], "Creating camera trajectories": [[46, "creating-camera-trajectories"]], "Rendering a video": [[46, "rendering-a-video"]], "Local vs. remote compute": [[46, "local-vs-remote-compute"]], "Training on a local machine": [[46, "training-on-a-local-machine"]], "Training on a remote machine": [[46, "training-on-a-remote-machine"]], "Cameras": [[47, "cameras"], [47, "id2"]], "Camera Optimizers": [[47, "camera-optimizers"]], "Camera Paths": [[47, "camera-paths"]], "Camera Utils": [[47, "camera-utils"]], "Lie Groups": [[47, "lie-groups"]], "Rays": [[47, "rays"]], "Configs": [[48, "configs"]], "Datamanagers": [[49, "datamanagers"]], "Base": [[49, "base"], [51, "base"], [53, "base"], [60, "base"], [66, "base"]], "Data Parsers": [[50, "data-parsers"]], "Base Data Parser": [[50, "base-data-parser"]], "ARKitScenes": [[50, "arkitscenes"]], "Blender": [[50, "blender"]], "D-NeRF": [[50, "d-nerf"]], "dycheck": [[50, "dycheck"]], "Minimal": [[50, "minimal"]], "NeRF-OSR": [[50, "nerf-osr"]], "Nerfstudio": [[50, "nerfstudio"]], "nuScenes": [[50, "nuscenes"]], "Phototourism": [[50, "phototourism"]], "ScanNet": [[50, "scannet"]], "sitcoms3D": [[50, "sitcoms3d"]], "Datasets": [[51, "datasets"]], "SDF Dataset": [[51, "sdf-dataset"]], "Semantic Dataset": [[51, "semantic-dataset"]], "Data": [[52, "data"], [53, "data"]], "Pixel Samplers": [[52, "pixel-samplers"]], "Scene Box": [[52, "scene-box"]], "Utils": [[53, "utils"], [71, "utils"]], "Dataloader": [[53, "dataloader"]], "Nerfstudio Collate": [[53, "nerfstudio-collate"]], "Embeddings": [[54, "embeddings"]], "Encodings": [[55, "encodings"]], "Field Heads": [[56, "field-heads"]], "Field Modules": [[57, "field-modules"]], "MLP": [[58, "mlp"]], "Density": [[60, "density"]], "Nerf-W": [[60, "nerf-w"]], "SDF": [[60, "sdf"]], "Semantic NeRF": [[60, "semantic-nerf"]], "Vanilla NeRF": [[60, "vanilla-nerf"]], "API": [[61, "api"]], "Losses": [[63, "losses"]], "Ray Sampler": [[64, "ray-sampler"]], "Renderers": [[65, "renderers"]], "Instant NGP": [[66, "instant-ngp"]], "Semantic NeRF-W": [[66, "semantic-nerf-w"]], "Engine": [[67, "engine"]], "Optimizers": [[67, "optimizers"]], "Schedulers": [[67, "schedulers"]], "Trainer": [[67, "trainer"]], "Callbacks": [[67, "callbacks"]], "Plugins": [[68, "plugins"]], "Method Registry": [[68, "method-registry"]], "DataParser Registry": [[68, "dataparser-registry"]], "Types": [[68, "types"]], "Colormaps": [[69, "colormaps"]], "Colors": [[70, "colors"]], "Math": [[72, "math"]], "TensorDataclass": [[73, "tensordataclass"]], "CLI": [[75, "cli"]], "Commands": [[75, "commands"]], "ns-download-data": [[76, "ns-download-data"]], "subcommands": [[76, "subcommands"], [78, "subcommands"], [80, "subcommands"], [81, "subcommands"]], "Sub-commands:": [[76, "Sub-commands:"], [78, "Sub-commands:"], [80, "Sub-commands:"], [81, "Sub-commands:"]], "blender": [[76, "blender"]], "options": [[76, "options"], [76, "options_repeat1"], [76, "options_repeat2"], [76, "options_repeat3"], [76, "options_repeat4"], [76, "options_repeat5"], [76, "options_repeat6"], [76, "options_repeat7"], [76, "options_repeat8"], [77, "options"], [78, "options"], [78, "options_repeat1"], [78, "options_repeat2"], [78, "options_repeat3"], [78, "options_repeat4"], [78, "options_repeat5"], [78, "options_repeat6"], [79, "options"], [80, "options"], [80, "options_repeat1"], [80, "options_repeat2"], [80, "options_repeat3"], [80, "options_repeat4"], [80, "options_repeat5"], [80, "options_repeat6"], [81, "options"], [81, "options_repeat1"], [81, "options_repeat2"], [81, "options_repeat3"], [83, "options"]], "sitcoms3d": [[76, "sitcoms3d"]], "nerfstudio": [[76, "nerfstudio"]], "record3d": [[76, "record3d"], [80, "record3d"]], "dnerf": [[76, "dnerf"]], "phototourism": [[76, "phototourism"]], "sdfstudio": [[76, "sdfstudio"]], "nerfosr": [[76, "nerfosr"]], "mill19": [[76, "mill19"]], "ns-eval": [[77, "ns-eval"]], "ns-export": [[78, "ns-export"]], "pointcloud": [[78, "pointcloud"]], "tsdf": [[78, "tsdf"]], "poisson": [[78, "poisson"]], "marching-cubes": [[78, "marching-cubes"]], "cameras": [[78, "cameras"]], "depth": [[78, "depth"]], "gaussian-splat": [[78, "gaussian-splat"]], "ns-install-cli": [[79, "ns-install-cli"]], "ns-process-data": [[80, "ns-process-data"]], "images": [[80, "images"]], "video": [[80, "video"]], "polycam": [[80, "polycam"]], "metashape": [[80, "metashape"]], "realitycapture": [[80, "realitycapture"]], "odm": [[80, "odm"]], "aria": [[80, "aria"]], "ns-render": [[81, "ns-render"]], "camera-path": [[81, "camera-path"]], "colormap-options options": [[81, "colormap-options options"], [81, "colormap-options options_repeat1"], [81, "colormap-options options_repeat2"], [81, "colormap-options options_repeat3"]], "interpolate": [[81, "interpolate"]], "spiral": [[81, "spiral"]], "dataset": [[81, "dataset"]], "ns-train": [[82, "ns-train"]], "ns-viewer": [[83, "ns-viewer"]], "viewer options": [[83, "viewer options"]], "Contributing": [[84, "contributing"]], "Requirements": [[84, "requirements"]], "Committing code": [[84, "committing-code"]], "Maintaining documentation": [[84, "maintaining-documentation"]], "Building": [[84, "building"]], "Auto build": [[84, "auto-build"]], "Adding notebooks": [[84, "adding-notebooks"]]}, "indexentries": {"cameraoptimizer (class in nerfstudio.cameras.camera_optimizers)": [[47, "nerfstudio.cameras.camera_optimizers.CameraOptimizer"]], "cameraoptimizerconfig (class in nerfstudio.cameras.camera_optimizers)": [[47, "nerfstudio.cameras.camera_optimizers.CameraOptimizerConfig"]], "cameratype (class in nerfstudio.cameras.cameras)": [[47, "nerfstudio.cameras.cameras.CameraType"]], "cameras (class in nerfstudio.cameras.cameras)": [[47, "nerfstudio.cameras.cameras.Cameras"]], "frustums (class in nerfstudio.cameras.rays)": [[47, "nerfstudio.cameras.rays.Frustums"]], "raybundle (class in nerfstudio.cameras.rays)": [[47, "nerfstudio.cameras.rays.RayBundle"]], "raysamples (class in nerfstudio.cameras.rays)": [[47, "nerfstudio.cameras.rays.RaySamples"]], "apply_to_camera() (nerfstudio.cameras.camera_optimizers.cameraoptimizer method)": [[47, "nerfstudio.cameras.camera_optimizers.CameraOptimizer.apply_to_camera"]], "apply_to_raybundle() (nerfstudio.cameras.camera_optimizers.cameraoptimizer method)": [[47, "nerfstudio.cameras.camera_optimizers.CameraOptimizer.apply_to_raybundle"]], "auto_orient_and_center_poses() (in module nerfstudio.cameras.camera_utils)": [[47, "nerfstudio.cameras.camera_utils.auto_orient_and_center_poses"]], "camera_indices (nerfstudio.cameras.rays.raybundle attribute)": [[47, "nerfstudio.cameras.rays.RayBundle.camera_indices"]], "camera_indices (nerfstudio.cameras.rays.raysamples attribute)": [[47, "nerfstudio.cameras.rays.RaySamples.camera_indices"]], "deltas (nerfstudio.cameras.rays.raysamples attribute)": [[47, "nerfstudio.cameras.rays.RaySamples.deltas"]], "device (nerfstudio.cameras.cameras.cameras property)": [[47, "nerfstudio.cameras.cameras.Cameras.device"]], "directions (nerfstudio.cameras.rays.frustums attribute)": [[47, "nerfstudio.cameras.rays.Frustums.directions"]], "directions (nerfstudio.cameras.rays.raybundle attribute)": [[47, "nerfstudio.cameras.rays.RayBundle.directions"]], "ends (nerfstudio.cameras.rays.frustums attribute)": [[47, "nerfstudio.cameras.rays.Frustums.ends"]], "exp_map_se3() (in module nerfstudio.cameras.lie_groups)": [[47, "nerfstudio.cameras.lie_groups.exp_map_SE3"]], "exp_map_so3xr3() (in module nerfstudio.cameras.lie_groups)": [[47, "nerfstudio.cameras.lie_groups.exp_map_SO3xR3"]], "fars (nerfstudio.cameras.rays.raybundle attribute)": [[47, "nerfstudio.cameras.rays.RayBundle.fars"]], "focus_of_attention() (in module nerfstudio.cameras.camera_utils)": [[47, "nerfstudio.cameras.camera_utils.focus_of_attention"]], "forward() (nerfstudio.cameras.camera_optimizers.cameraoptimizer method)": [[47, "nerfstudio.cameras.camera_optimizers.CameraOptimizer.forward"]], "frustums (nerfstudio.cameras.rays.raysamples attribute)": [[47, "nerfstudio.cameras.rays.RaySamples.frustums"]], "generate_rays() (nerfstudio.cameras.cameras.cameras method)": [[47, "nerfstudio.cameras.cameras.Cameras.generate_rays"]], "get_correction_matrices() (nerfstudio.cameras.camera_optimizers.cameraoptimizer method)": [[47, "nerfstudio.cameras.camera_optimizers.CameraOptimizer.get_correction_matrices"]], "get_distortion_params() (in module nerfstudio.cameras.camera_utils)": [[47, "nerfstudio.cameras.camera_utils.get_distortion_params"]], "get_gaussian_blob() (nerfstudio.cameras.rays.frustums method)": [[47, "nerfstudio.cameras.rays.Frustums.get_gaussian_blob"]], "get_image_coords() (nerfstudio.cameras.cameras.cameras method)": [[47, "nerfstudio.cameras.cameras.Cameras.get_image_coords"]], "get_interpolated_camera_path() (in module nerfstudio.cameras.camera_paths)": [[47, "nerfstudio.cameras.camera_paths.get_interpolated_camera_path"]], "get_interpolated_k() (in module nerfstudio.cameras.camera_utils)": [[47, "nerfstudio.cameras.camera_utils.get_interpolated_k"]], "get_interpolated_poses() (in module nerfstudio.cameras.camera_utils)": [[47, "nerfstudio.cameras.camera_utils.get_interpolated_poses"]], "get_interpolated_poses_many() (in module nerfstudio.cameras.camera_utils)": [[47, "nerfstudio.cameras.camera_utils.get_interpolated_poses_many"]], "get_intrinsics_matrices() (nerfstudio.cameras.cameras.cameras method)": [[47, "nerfstudio.cameras.cameras.Cameras.get_intrinsics_matrices"]], "get_loss_dict() (nerfstudio.cameras.camera_optimizers.cameraoptimizer method)": [[47, "nerfstudio.cameras.camera_optimizers.CameraOptimizer.get_loss_dict"]], "get_metrics_dict() (nerfstudio.cameras.camera_optimizers.cameraoptimizer method)": [[47, "nerfstudio.cameras.camera_optimizers.CameraOptimizer.get_metrics_dict"]], "get_mock_frustum() (nerfstudio.cameras.rays.frustums class method)": [[47, "nerfstudio.cameras.rays.Frustums.get_mock_frustum"]], "get_ordered_poses_and_k() (in module nerfstudio.cameras.camera_utils)": [[47, "nerfstudio.cameras.camera_utils.get_ordered_poses_and_k"]], "get_param_groups() (nerfstudio.cameras.camera_optimizers.cameraoptimizer method)": [[47, "nerfstudio.cameras.camera_optimizers.CameraOptimizer.get_param_groups"]], "get_path_from_json() (in module nerfstudio.cameras.camera_paths)": [[47, "nerfstudio.cameras.camera_paths.get_path_from_json"]], "get_positions() (nerfstudio.cameras.rays.frustums method)": [[47, "nerfstudio.cameras.rays.Frustums.get_positions"]], "get_ray_samples() (nerfstudio.cameras.rays.raybundle method)": [[47, "nerfstudio.cameras.rays.RayBundle.get_ray_samples"]], "get_row_major_sliced_ray_bundle() (nerfstudio.cameras.rays.raybundle method)": [[47, "nerfstudio.cameras.rays.RayBundle.get_row_major_sliced_ray_bundle"]], "get_spiral_path() (in module nerfstudio.cameras.camera_paths)": [[47, "nerfstudio.cameras.camera_paths.get_spiral_path"]], "get_start_positions() (nerfstudio.cameras.rays.frustums method)": [[47, "nerfstudio.cameras.rays.Frustums.get_start_positions"]], "get_weights() (nerfstudio.cameras.rays.raysamples method)": [[47, "nerfstudio.cameras.rays.RaySamples.get_weights"]], "get_weights_and_transmittance_from_alphas() (nerfstudio.cameras.rays.raysamples static method)": [[47, "nerfstudio.cameras.rays.RaySamples.get_weights_and_transmittance_from_alphas"]], "image_height (nerfstudio.cameras.cameras.cameras property)": [[47, "nerfstudio.cameras.cameras.Cameras.image_height"]], "image_width (nerfstudio.cameras.cameras.cameras property)": [[47, "nerfstudio.cameras.cameras.Cameras.image_width"]], "is_jagged (nerfstudio.cameras.cameras.cameras property)": [[47, "nerfstudio.cameras.cameras.Cameras.is_jagged"]], "metadata (nerfstudio.cameras.rays.raybundle attribute)": [[47, "nerfstudio.cameras.rays.RayBundle.metadata"]], "metadata (nerfstudio.cameras.rays.raysamples attribute)": [[47, "nerfstudio.cameras.rays.RaySamples.metadata"]], "mode (nerfstudio.cameras.camera_optimizers.cameraoptimizerconfig attribute)": [[47, "nerfstudio.cameras.camera_optimizers.CameraOptimizerConfig.mode"]], "module": [[47, "module-nerfstudio.cameras.camera_optimizers"], [47, "module-nerfstudio.cameras.camera_paths"], [47, "module-nerfstudio.cameras.camera_utils"], [47, "module-nerfstudio.cameras.cameras"], [47, "module-nerfstudio.cameras.lie_groups"], [47, "module-nerfstudio.cameras.rays"], [48, "module-nerfstudio.configs.base_config"], [49, "module-nerfstudio.data.datamanagers.base_datamanager"], [50, "module-nerfstudio.data.dataparsers.arkitscenes_dataparser"], [50, "module-nerfstudio.data.dataparsers.base_dataparser"], [50, "module-nerfstudio.data.dataparsers.blender_dataparser"], [50, "module-nerfstudio.data.dataparsers.dnerf_dataparser"], [50, "module-nerfstudio.data.dataparsers.dycheck_dataparser"], [50, "module-nerfstudio.data.dataparsers.instant_ngp_dataparser"], [50, "module-nerfstudio.data.dataparsers.minimal_dataparser"], [50, "module-nerfstudio.data.dataparsers.nerfosr_dataparser"], [50, "module-nerfstudio.data.dataparsers.nerfstudio_dataparser"], [50, "module-nerfstudio.data.dataparsers.nuscenes_dataparser"], [50, "module-nerfstudio.data.dataparsers.phototourism_dataparser"], [50, "module-nerfstudio.data.dataparsers.scannet_dataparser"], [50, "module-nerfstudio.data.dataparsers.sdfstudio_dataparser"], [50, "module-nerfstudio.data.dataparsers.sitcoms3d_dataparser"], [51, "module-nerfstudio.data.datasets.base_dataset"], [51, "module-nerfstudio.data.datasets.sdf_dataset"], [51, "module-nerfstudio.data.datasets.semantic_dataset"], [52, "module-nerfstudio.data.pixel_samplers"], [52, "module-nerfstudio.data.scene_box"], [53, "module-nerfstudio.data.utils.colmap_parsing_utils"], [53, "module-nerfstudio.data.utils.data_utils"], [53, "module-nerfstudio.data.utils.dataloaders"], [53, "module-nerfstudio.data.utils.nerfstudio_collate"], [54, "module-nerfstudio.field_components.embedding"], [55, "module-nerfstudio.field_components.encodings"], [56, "module-nerfstudio.field_components.field_heads"], [58, "module-nerfstudio.field_components.mlp"], [59, "module-nerfstudio.field_components.spatial_distortions"], [60, "module-nerfstudio.fields.base_field"], [60, "module-nerfstudio.fields.density_fields"], [60, "module-nerfstudio.fields.nerfacto_field"], [60, "module-nerfstudio.fields.nerfw_field"], [60, "module-nerfstudio.fields.sdf_field"], [60, "module-nerfstudio.fields.semantic_nerf_field"], [60, "module-nerfstudio.fields.tensorf_field"], [60, "module-nerfstudio.fields.vanilla_nerf_field"], [63, "module-nerfstudio.model_components.losses"], [64, "module-nerfstudio.model_components.ray_samplers"], [65, "module-nerfstudio.model_components.renderers"], [66, "module-nerfstudio.models.base_model"], [66, "module-nerfstudio.models.instant_ngp"], [66, "module-nerfstudio.models.semantic_nerfw"], [66, "module-nerfstudio.models.vanilla_nerf"], [67, "module-nerfstudio.engine.callbacks"], [67, "module-nerfstudio.engine.optimizers"], [67, "module-nerfstudio.engine.schedulers"], [67, "module-nerfstudio.engine.trainer"], [68, "module-nerfstudio.plugins.registry"], [68, "module-nerfstudio.plugins.registry_dataparser"], [68, "module-nerfstudio.plugins.types"], [69, "module-nerfstudio.utils.colormaps"], [70, "module-nerfstudio.utils.colors"], [72, "module-nerfstudio.utils.math"], [73, "module-nerfstudio.utils.tensor_dataclass"], [74, "module-nerfstudio.viewer.viewer_elements"]], "nears (nerfstudio.cameras.rays.raybundle attribute)": [[47, "nerfstudio.cameras.rays.RayBundle.nears"]], "nerfstudio.cameras.camera_optimizers": [[47, "module-nerfstudio.cameras.camera_optimizers"]], "nerfstudio.cameras.camera_paths": [[47, "module-nerfstudio.cameras.camera_paths"]], "nerfstudio.cameras.camera_utils": [[47, "module-nerfstudio.cameras.camera_utils"]], "nerfstudio.cameras.cameras": [[47, "module-nerfstudio.cameras.cameras"]], "nerfstudio.cameras.lie_groups": [[47, "module-nerfstudio.cameras.lie_groups"]], "nerfstudio.cameras.rays": [[47, "module-nerfstudio.cameras.rays"]], "normalize() (in module nerfstudio.cameras.camera_utils)": [[47, "nerfstudio.cameras.camera_utils.normalize"]], "normalize_with_norm() (in module nerfstudio.cameras.camera_utils)": [[47, "nerfstudio.cameras.camera_utils.normalize_with_norm"]], "offsets (nerfstudio.cameras.rays.frustums attribute)": [[47, "nerfstudio.cameras.rays.Frustums.offsets"]], "optimizer (nerfstudio.cameras.camera_optimizers.cameraoptimizerconfig attribute)": [[47, "nerfstudio.cameras.camera_optimizers.CameraOptimizerConfig.optimizer"]], "origins (nerfstudio.cameras.rays.frustums attribute)": [[47, "nerfstudio.cameras.rays.Frustums.origins"]], "origins (nerfstudio.cameras.rays.raybundle attribute)": [[47, "nerfstudio.cameras.rays.RayBundle.origins"]], "pixel_area (nerfstudio.cameras.rays.frustums attribute)": [[47, "nerfstudio.cameras.rays.Frustums.pixel_area"]], "pixel_area (nerfstudio.cameras.rays.raybundle attribute)": [[47, "nerfstudio.cameras.rays.RayBundle.pixel_area"]], "quaternion_from_matrix() (in module nerfstudio.cameras.camera_utils)": [[47, "nerfstudio.cameras.camera_utils.quaternion_from_matrix"]], "quaternion_matrix() (in module nerfstudio.cameras.camera_utils)": [[47, "nerfstudio.cameras.camera_utils.quaternion_matrix"]], "quaternion_slerp() (in module nerfstudio.cameras.camera_utils)": [[47, "nerfstudio.cameras.camera_utils.quaternion_slerp"]], "radial_and_tangential_undistort() (in module nerfstudio.cameras.camera_utils)": [[47, "nerfstudio.cameras.camera_utils.radial_and_tangential_undistort"]], "rescale_output_resolution() (nerfstudio.cameras.cameras.cameras method)": [[47, "nerfstudio.cameras.cameras.Cameras.rescale_output_resolution"]], "rot_l2_penalty (nerfstudio.cameras.camera_optimizers.cameraoptimizerconfig attribute)": [[47, "nerfstudio.cameras.camera_optimizers.CameraOptimizerConfig.rot_l2_penalty"]], "rotation_matrix() (in module nerfstudio.cameras.camera_utils)": [[47, "nerfstudio.cameras.camera_utils.rotation_matrix"]], "sample() (nerfstudio.cameras.rays.raybundle method)": [[47, "nerfstudio.cameras.rays.RayBundle.sample"]], "scheduler (nerfstudio.cameras.camera_optimizers.cameraoptimizerconfig attribute)": [[47, "nerfstudio.cameras.camera_optimizers.CameraOptimizerConfig.scheduler"]], "set_camera_indices() (nerfstudio.cameras.rays.raybundle method)": [[47, "nerfstudio.cameras.rays.RayBundle.set_camera_indices"]], "set_offsets() (nerfstudio.cameras.rays.frustums method)": [[47, "nerfstudio.cameras.rays.Frustums.set_offsets"]], "spacing_ends (nerfstudio.cameras.rays.raysamples attribute)": [[47, "nerfstudio.cameras.rays.RaySamples.spacing_ends"]], "spacing_starts (nerfstudio.cameras.rays.raysamples attribute)": [[47, "nerfstudio.cameras.rays.RaySamples.spacing_starts"]], "spacing_to_euclidean_fn (nerfstudio.cameras.rays.raysamples attribute)": [[47, "nerfstudio.cameras.rays.RaySamples.spacing_to_euclidean_fn"]], "starts (nerfstudio.cameras.rays.frustums attribute)": [[47, "nerfstudio.cameras.rays.Frustums.starts"]], "times (nerfstudio.cameras.rays.raybundle attribute)": [[47, "nerfstudio.cameras.rays.RayBundle.times"]], "times (nerfstudio.cameras.rays.raysamples attribute)": [[47, "nerfstudio.cameras.rays.RaySamples.times"]], "to_json() (nerfstudio.cameras.cameras.cameras method)": [[47, "nerfstudio.cameras.cameras.Cameras.to_json"]], "trans_l2_penalty (nerfstudio.cameras.camera_optimizers.cameraoptimizerconfig attribute)": [[47, "nerfstudio.cameras.camera_optimizers.CameraOptimizerConfig.trans_l2_penalty"]], "unit_vector() (in module nerfstudio.cameras.camera_utils)": [[47, "nerfstudio.cameras.camera_utils.unit_vector"]], "viewmatrix() (in module nerfstudio.cameras.camera_utils)": [[47, "nerfstudio.cameras.camera_utils.viewmatrix"]], "instantiateconfig (class in nerfstudio.configs.base_config)": [[48, "nerfstudio.configs.base_config.InstantiateConfig"]], "localwriterconfig (class in nerfstudio.configs.base_config)": [[48, "nerfstudio.configs.base_config.LocalWriterConfig"]], "loggingconfig (class in nerfstudio.configs.base_config)": [[48, "nerfstudio.configs.base_config.LoggingConfig"]], "machineconfig (class in nerfstudio.configs.base_config)": [[48, "nerfstudio.configs.base_config.MachineConfig"]], "printableconfig (class in nerfstudio.configs.base_config)": [[48, "nerfstudio.configs.base_config.PrintableConfig"]], "viewerconfig (class in nerfstudio.configs.base_config)": [[48, "nerfstudio.configs.base_config.ViewerConfig"]], "camera_frustum_scale (nerfstudio.configs.base_config.viewerconfig attribute)": [[48, "nerfstudio.configs.base_config.ViewerConfig.camera_frustum_scale"]], "default_composite_depth (nerfstudio.configs.base_config.viewerconfig attribute)": [[48, "nerfstudio.configs.base_config.ViewerConfig.default_composite_depth"]], "device_type (nerfstudio.configs.base_config.machineconfig attribute)": [[48, "nerfstudio.configs.base_config.MachineConfig.device_type"]], "dist_url (nerfstudio.configs.base_config.machineconfig attribute)": [[48, "nerfstudio.configs.base_config.MachineConfig.dist_url"]], "enable (nerfstudio.configs.base_config.localwriterconfig attribute)": [[48, "nerfstudio.configs.base_config.LocalWriterConfig.enable"]], "image_format (nerfstudio.configs.base_config.viewerconfig attribute)": [[48, "nerfstudio.configs.base_config.ViewerConfig.image_format"]], "jpeg_quality (nerfstudio.configs.base_config.viewerconfig attribute)": [[48, "nerfstudio.configs.base_config.ViewerConfig.jpeg_quality"]], "local_writer (nerfstudio.configs.base_config.loggingconfig attribute)": [[48, "nerfstudio.configs.base_config.LoggingConfig.local_writer"]], "machine_rank (nerfstudio.configs.base_config.machineconfig attribute)": [[48, "nerfstudio.configs.base_config.MachineConfig.machine_rank"]], "make_share_url (nerfstudio.configs.base_config.viewerconfig attribute)": [[48, "nerfstudio.configs.base_config.ViewerConfig.make_share_url"]], "max_buffer_size (nerfstudio.configs.base_config.loggingconfig attribute)": [[48, "nerfstudio.configs.base_config.LoggingConfig.max_buffer_size"]], "max_log_size (nerfstudio.configs.base_config.localwriterconfig attribute)": [[48, "nerfstudio.configs.base_config.LocalWriterConfig.max_log_size"]], "max_num_display_images (nerfstudio.configs.base_config.viewerconfig attribute)": [[48, "nerfstudio.configs.base_config.ViewerConfig.max_num_display_images"]], "nerfstudio.configs.base_config": [[48, "module-nerfstudio.configs.base_config"]], "num_devices (nerfstudio.configs.base_config.machineconfig attribute)": [[48, "nerfstudio.configs.base_config.MachineConfig.num_devices"]], "num_machines (nerfstudio.configs.base_config.machineconfig attribute)": [[48, "nerfstudio.configs.base_config.MachineConfig.num_machines"]], "num_rays_per_chunk (nerfstudio.configs.base_config.viewerconfig attribute)": [[48, "nerfstudio.configs.base_config.ViewerConfig.num_rays_per_chunk"]], "profiler (nerfstudio.configs.base_config.loggingconfig attribute)": [[48, "nerfstudio.configs.base_config.LoggingConfig.profiler"]], "quit_on_train_completion (nerfstudio.configs.base_config.viewerconfig attribute)": [[48, "nerfstudio.configs.base_config.ViewerConfig.quit_on_train_completion"]], "relative_log_dir (nerfstudio.configs.base_config.loggingconfig attribute)": [[48, "nerfstudio.configs.base_config.LoggingConfig.relative_log_dir"]], "relative_log_filename (nerfstudio.configs.base_config.viewerconfig attribute)": [[48, "nerfstudio.configs.base_config.ViewerConfig.relative_log_filename"]], "seed (nerfstudio.configs.base_config.machineconfig attribute)": [[48, "nerfstudio.configs.base_config.MachineConfig.seed"]], "setup() (nerfstudio.configs.base_config.instantiateconfig method)": [[48, "nerfstudio.configs.base_config.InstantiateConfig.setup"]], "setup() (nerfstudio.configs.base_config.localwriterconfig method)": [[48, "nerfstudio.configs.base_config.LocalWriterConfig.setup"]], "stats_to_track (nerfstudio.configs.base_config.localwriterconfig attribute)": [[48, "nerfstudio.configs.base_config.LocalWriterConfig.stats_to_track"]], "steps_per_log (nerfstudio.configs.base_config.loggingconfig attribute)": [[48, "nerfstudio.configs.base_config.LoggingConfig.steps_per_log"]], "websocket_host (nerfstudio.configs.base_config.viewerconfig attribute)": [[48, "nerfstudio.configs.base_config.ViewerConfig.websocket_host"]], "websocket_port (nerfstudio.configs.base_config.viewerconfig attribute)": [[48, "nerfstudio.configs.base_config.ViewerConfig.websocket_port"]], "websocket_port_default (nerfstudio.configs.base_config.viewerconfig attribute)": [[48, "nerfstudio.configs.base_config.ViewerConfig.websocket_port_default"]], "datamanager (class in nerfstudio.data.datamanagers.base_datamanager)": [[49, "nerfstudio.data.datamanagers.base_datamanager.DataManager"]], "datamanagerconfig (class in nerfstudio.data.datamanagers.base_datamanager)": [[49, "nerfstudio.data.datamanagers.base_datamanager.DataManagerConfig"]], "vanilladatamanager (class in nerfstudio.data.datamanagers.base_datamanager)": [[49, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManager"]], "vanilladatamanagerconfig (class in nerfstudio.data.datamanagers.base_datamanager)": [[49, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManagerConfig"]], "__post_init__() (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanagerconfig method)": [[49, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManagerConfig.__post_init__"]], "camera_optimizer (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanagerconfig attribute)": [[49, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManagerConfig.camera_optimizer"]], "camera_res_scale_factor (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanagerconfig attribute)": [[49, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManagerConfig.camera_res_scale_factor"]], "collate_fn() (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanagerconfig static method)": [[49, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManagerConfig.collate_fn"]], "create_eval_dataset() (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanager method)": [[49, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManager.create_eval_dataset"]], "create_train_dataset() (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanager method)": [[49, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManager.create_train_dataset"]], "data (nerfstudio.data.datamanagers.base_datamanager.datamanagerconfig attribute)": [[49, "nerfstudio.data.datamanagers.base_datamanager.DataManagerConfig.data"]], "dataparser (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanagerconfig attribute)": [[49, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManagerConfig.dataparser"]], "dataset_type (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanager property)": [[49, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManager.dataset_type"]], "eval_count (nerfstudio.data.datamanagers.base_datamanager.datamanager attribute)": [[49, "nerfstudio.data.datamanagers.base_datamanager.DataManager.eval_count"]], "eval_dataset (nerfstudio.data.datamanagers.base_datamanager.datamanager attribute)": [[49, "nerfstudio.data.datamanagers.base_datamanager.DataManager.eval_dataset"]], "eval_image_indices (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanagerconfig attribute)": [[49, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManagerConfig.eval_image_indices"]], "eval_num_images_to_sample_from (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanagerconfig attribute)": [[49, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManagerConfig.eval_num_images_to_sample_from"]], "eval_num_rays_per_batch (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanagerconfig attribute)": [[49, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManagerConfig.eval_num_rays_per_batch"]], "eval_num_times_to_repeat_images (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanagerconfig attribute)": [[49, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManagerConfig.eval_num_times_to_repeat_images"]], "forward() (nerfstudio.data.datamanagers.base_datamanager.datamanager method)": [[49, "nerfstudio.data.datamanagers.base_datamanager.DataManager.forward"]], "get_datapath() (nerfstudio.data.datamanagers.base_datamanager.datamanager method)": [[49, "nerfstudio.data.datamanagers.base_datamanager.DataManager.get_datapath"]], "get_datapath() (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanager method)": [[49, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManager.get_datapath"]], "get_eval_iterable() (nerfstudio.data.datamanagers.base_datamanager.datamanager method)": [[49, "nerfstudio.data.datamanagers.base_datamanager.DataManager.get_eval_iterable"]], "get_eval_rays_per_batch() (nerfstudio.data.datamanagers.base_datamanager.datamanager method)": [[49, "nerfstudio.data.datamanagers.base_datamanager.DataManager.get_eval_rays_per_batch"]], "get_eval_rays_per_batch() (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanager method)": [[49, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManager.get_eval_rays_per_batch"]], "get_param_groups() (nerfstudio.data.datamanagers.base_datamanager.datamanager method)": [[49, "nerfstudio.data.datamanagers.base_datamanager.DataManager.get_param_groups"]], "get_param_groups() (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanager method)": [[49, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManager.get_param_groups"]], "get_train_iterable() (nerfstudio.data.datamanagers.base_datamanager.datamanager method)": [[49, "nerfstudio.data.datamanagers.base_datamanager.DataManager.get_train_iterable"]], "get_train_rays_per_batch() (nerfstudio.data.datamanagers.base_datamanager.datamanager method)": [[49, "nerfstudio.data.datamanagers.base_datamanager.DataManager.get_train_rays_per_batch"]], "get_train_rays_per_batch() (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanager method)": [[49, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManager.get_train_rays_per_batch"]], "get_training_callbacks() (nerfstudio.data.datamanagers.base_datamanager.datamanager method)": [[49, "nerfstudio.data.datamanagers.base_datamanager.DataManager.get_training_callbacks"]], "images_on_gpu (nerfstudio.data.datamanagers.base_datamanager.datamanagerconfig attribute)": [[49, "nerfstudio.data.datamanagers.base_datamanager.DataManagerConfig.images_on_gpu"]], "includes_time (nerfstudio.data.datamanagers.base_datamanager.datamanager attribute)": [[49, "nerfstudio.data.datamanagers.base_datamanager.DataManager.includes_time"]], "iter_eval() (nerfstudio.data.datamanagers.base_datamanager.datamanager method)": [[49, "nerfstudio.data.datamanagers.base_datamanager.DataManager.iter_eval"]], "iter_train() (nerfstudio.data.datamanagers.base_datamanager.datamanager method)": [[49, "nerfstudio.data.datamanagers.base_datamanager.DataManager.iter_train"]], "masks_on_gpu (nerfstudio.data.datamanagers.base_datamanager.datamanagerconfig attribute)": [[49, "nerfstudio.data.datamanagers.base_datamanager.DataManagerConfig.masks_on_gpu"]], "nerfstudio.data.datamanagers.base_datamanager": [[49, "module-nerfstudio.data.datamanagers.base_datamanager"]], "next_eval() (nerfstudio.data.datamanagers.base_datamanager.datamanager method)": [[49, "nerfstudio.data.datamanagers.base_datamanager.DataManager.next_eval"]], "next_eval() (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanager method)": [[49, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManager.next_eval"]], "next_eval_image() (nerfstudio.data.datamanagers.base_datamanager.datamanager method)": [[49, "nerfstudio.data.datamanagers.base_datamanager.DataManager.next_eval_image"]], "next_eval_image() (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanager method)": [[49, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManager.next_eval_image"]], "next_train() (nerfstudio.data.datamanagers.base_datamanager.datamanager method)": [[49, "nerfstudio.data.datamanagers.base_datamanager.DataManager.next_train"]], "next_train() (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanager method)": [[49, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManager.next_train"]], "patch_size (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanagerconfig attribute)": [[49, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManagerConfig.patch_size"]], "pixel_sampler (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanagerconfig attribute)": [[49, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManagerConfig.pixel_sampler"]], "setup_eval() (nerfstudio.data.datamanagers.base_datamanager.datamanager method)": [[49, "nerfstudio.data.datamanagers.base_datamanager.DataManager.setup_eval"]], "setup_eval() (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanager method)": [[49, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManager.setup_eval"]], "setup_train() (nerfstudio.data.datamanagers.base_datamanager.datamanager method)": [[49, "nerfstudio.data.datamanagers.base_datamanager.DataManager.setup_train"]], "setup_train() (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanager method)": [[49, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManager.setup_train"]], "train_count (nerfstudio.data.datamanagers.base_datamanager.datamanager attribute)": [[49, "nerfstudio.data.datamanagers.base_datamanager.DataManager.train_count"]], "train_dataset (nerfstudio.data.datamanagers.base_datamanager.datamanager attribute)": [[49, "nerfstudio.data.datamanagers.base_datamanager.DataManager.train_dataset"]], "train_num_images_to_sample_from (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanagerconfig attribute)": [[49, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManagerConfig.train_num_images_to_sample_from"]], "train_num_rays_per_batch (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanagerconfig attribute)": [[49, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManagerConfig.train_num_rays_per_batch"]], "train_num_times_to_repeat_images (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanagerconfig attribute)": [[49, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManagerConfig.train_num_times_to_repeat_images"]], "variable_res_collate() (in module nerfstudio.data.datamanagers.base_datamanager)": [[49, "nerfstudio.data.datamanagers.base_datamanager.variable_res_collate"]], "arkitscenes (class in nerfstudio.data.dataparsers.arkitscenes_dataparser)": [[50, "nerfstudio.data.dataparsers.arkitscenes_dataparser.ARKitScenes"]], "arkitscenesdataparserconfig (class in nerfstudio.data.dataparsers.arkitscenes_dataparser)": [[50, "nerfstudio.data.dataparsers.arkitscenes_dataparser.ARKitScenesDataParserConfig"]], "blender (class in nerfstudio.data.dataparsers.blender_dataparser)": [[50, "nerfstudio.data.dataparsers.blender_dataparser.Blender"]], "blenderdataparserconfig (class in nerfstudio.data.dataparsers.blender_dataparser)": [[50, "nerfstudio.data.dataparsers.blender_dataparser.BlenderDataParserConfig"]], "dnerf (class in nerfstudio.data.dataparsers.dnerf_dataparser)": [[50, "nerfstudio.data.dataparsers.dnerf_dataparser.DNeRF"]], "dnerfdataparserconfig (class in nerfstudio.data.dataparsers.dnerf_dataparser)": [[50, "nerfstudio.data.dataparsers.dnerf_dataparser.DNeRFDataParserConfig"]], "dataparser (class in nerfstudio.data.dataparsers.base_dataparser)": [[50, "nerfstudio.data.dataparsers.base_dataparser.DataParser"]], "dataparserconfig (class in nerfstudio.data.dataparsers.base_dataparser)": [[50, "nerfstudio.data.dataparsers.base_dataparser.DataParserConfig"]], "dataparseroutputs (class in nerfstudio.data.dataparsers.base_dataparser)": [[50, "nerfstudio.data.dataparsers.base_dataparser.DataparserOutputs"]], "dycheck (class in nerfstudio.data.dataparsers.dycheck_dataparser)": [[50, "nerfstudio.data.dataparsers.dycheck_dataparser.Dycheck"]], "dycheckdataparserconfig (class in nerfstudio.data.dataparsers.dycheck_dataparser)": [[50, "nerfstudio.data.dataparsers.dycheck_dataparser.DycheckDataParserConfig"]], "instantngp (class in nerfstudio.data.dataparsers.instant_ngp_dataparser)": [[50, "nerfstudio.data.dataparsers.instant_ngp_dataparser.InstantNGP"]], "instantngpdataparserconfig (class in nerfstudio.data.dataparsers.instant_ngp_dataparser)": [[50, "nerfstudio.data.dataparsers.instant_ngp_dataparser.InstantNGPDataParserConfig"]], "minimaldataparser (class in nerfstudio.data.dataparsers.minimal_dataparser)": [[50, "nerfstudio.data.dataparsers.minimal_dataparser.MinimalDataParser"]], "minimaldataparserconfig (class in nerfstudio.data.dataparsers.minimal_dataparser)": [[50, "nerfstudio.data.dataparsers.minimal_dataparser.MinimalDataParserConfig"]], "nerfosr (class in nerfstudio.data.dataparsers.nerfosr_dataparser)": [[50, "nerfstudio.data.dataparsers.nerfosr_dataparser.NeRFOSR"]], "nerfosrdataparserconfig (class in nerfstudio.data.dataparsers.nerfosr_dataparser)": [[50, "nerfstudio.data.dataparsers.nerfosr_dataparser.NeRFOSRDataParserConfig"]], "nerfstudio (class in nerfstudio.data.dataparsers.nerfstudio_dataparser)": [[50, "nerfstudio.data.dataparsers.nerfstudio_dataparser.Nerfstudio"]], "nerfstudiodataparserconfig (class in nerfstudio.data.dataparsers.nerfstudio_dataparser)": [[50, "nerfstudio.data.dataparsers.nerfstudio_dataparser.NerfstudioDataParserConfig"]], "nuscenes (class in nerfstudio.data.dataparsers.nuscenes_dataparser)": [[50, "nerfstudio.data.dataparsers.nuscenes_dataparser.NuScenes"]], "nuscenesdataparserconfig (class in nerfstudio.data.dataparsers.nuscenes_dataparser)": [[50, "nerfstudio.data.dataparsers.nuscenes_dataparser.NuScenesDataParserConfig"]], "phototourism (class in nerfstudio.data.dataparsers.phototourism_dataparser)": [[50, "nerfstudio.data.dataparsers.phototourism_dataparser.Phototourism"]], "phototourismdataparserconfig (class in nerfstudio.data.dataparsers.phototourism_dataparser)": [[50, "nerfstudio.data.dataparsers.phototourism_dataparser.PhototourismDataParserConfig"]], "sdfstudio (class in nerfstudio.data.dataparsers.sdfstudio_dataparser)": [[50, "nerfstudio.data.dataparsers.sdfstudio_dataparser.SDFStudio"]], "sdfstudiodataparserconfig (class in nerfstudio.data.dataparsers.sdfstudio_dataparser)": [[50, "nerfstudio.data.dataparsers.sdfstudio_dataparser.SDFStudioDataParserConfig"]], "scannet (class in nerfstudio.data.dataparsers.scannet_dataparser)": [[50, "nerfstudio.data.dataparsers.scannet_dataparser.ScanNet"]], "scannetdataparserconfig (class in nerfstudio.data.dataparsers.scannet_dataparser)": [[50, "nerfstudio.data.dataparsers.scannet_dataparser.ScanNetDataParserConfig"]], "semantics (class in nerfstudio.data.dataparsers.base_dataparser)": [[50, "nerfstudio.data.dataparsers.base_dataparser.Semantics"]], "sitcoms3d (class in nerfstudio.data.dataparsers.sitcoms3d_dataparser)": [[50, "nerfstudio.data.dataparsers.sitcoms3d_dataparser.Sitcoms3D"]], "sitcoms3ddataparserconfig (class in nerfstudio.data.dataparsers.sitcoms3d_dataparser)": [[50, "nerfstudio.data.dataparsers.sitcoms3d_dataparser.Sitcoms3DDataParserConfig"]], "alpha_color (nerfstudio.data.dataparsers.base_dataparser.dataparseroutputs attribute)": [[50, "nerfstudio.data.dataparsers.base_dataparser.DataparserOutputs.alpha_color"]], "alpha_color (nerfstudio.data.dataparsers.blender_dataparser.blenderdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.blender_dataparser.BlenderDataParserConfig.alpha_color"]], "alpha_color (nerfstudio.data.dataparsers.dnerf_dataparser.dnerfdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.dnerf_dataparser.DNeRFDataParserConfig.alpha_color"]], "alpha_color (nerfstudio.data.dataparsers.dycheck_dataparser.dycheckdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.dycheck_dataparser.DycheckDataParserConfig.alpha_color"]], "alpha_color (nerfstudio.data.dataparsers.phototourism_dataparser.phototourismdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.phototourism_dataparser.PhototourismDataParserConfig.alpha_color"]], "as_dict() (nerfstudio.data.dataparsers.base_dataparser.dataparseroutputs method)": [[50, "nerfstudio.data.dataparsers.base_dataparser.DataparserOutputs.as_dict"]], "auto_scale_poses (nerfstudio.data.dataparsers.arkitscenes_dataparser.arkitscenesdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.arkitscenes_dataparser.ARKitScenesDataParserConfig.auto_scale_poses"]], "auto_scale_poses (nerfstudio.data.dataparsers.nerfosr_dataparser.nerfosrdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.nerfosr_dataparser.NeRFOSRDataParserConfig.auto_scale_poses"]], "auto_scale_poses (nerfstudio.data.dataparsers.nerfstudio_dataparser.nerfstudiodataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.nerfstudio_dataparser.NerfstudioDataParserConfig.auto_scale_poses"]], "auto_scale_poses (nerfstudio.data.dataparsers.phototourism_dataparser.phototourismdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.phototourism_dataparser.PhototourismDataParserConfig.auto_scale_poses"]], "auto_scale_poses (nerfstudio.data.dataparsers.scannet_dataparser.scannetdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.scannet_dataparser.ScanNetDataParserConfig.auto_scale_poses"]], "cameras (nerfstudio.data.dataparsers.base_dataparser.dataparseroutputs attribute)": [[50, "nerfstudio.data.dataparsers.base_dataparser.DataparserOutputs.cameras"]], "cameras (nerfstudio.data.dataparsers.nuscenes_dataparser.nuscenesdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.nuscenes_dataparser.NuScenesDataParserConfig.cameras"]], "center_method (nerfstudio.data.dataparsers.arkitscenes_dataparser.arkitscenesdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.arkitscenes_dataparser.ARKitScenesDataParserConfig.center_method"]], "center_method (nerfstudio.data.dataparsers.nerfosr_dataparser.nerfosrdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.nerfosr_dataparser.NeRFOSRDataParserConfig.center_method"]], "center_method (nerfstudio.data.dataparsers.nerfstudio_dataparser.nerfstudiodataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.nerfstudio_dataparser.NerfstudioDataParserConfig.center_method"]], "center_method (nerfstudio.data.dataparsers.phototourism_dataparser.phototourismdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.phototourism_dataparser.PhototourismDataParserConfig.center_method"]], "center_method (nerfstudio.data.dataparsers.scannet_dataparser.scannetdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.scannet_dataparser.ScanNetDataParserConfig.center_method"]], "classes (nerfstudio.data.dataparsers.base_dataparser.semantics attribute)": [[50, "nerfstudio.data.dataparsers.base_dataparser.Semantics.classes"]], "colors (nerfstudio.data.dataparsers.base_dataparser.semantics attribute)": [[50, "nerfstudio.data.dataparsers.base_dataparser.Semantics.colors"]], "config (nerfstudio.data.dataparsers.base_dataparser.dataparser attribute)": [[50, "nerfstudio.data.dataparsers.base_dataparser.DataParser.config"]], "data (nerfstudio.data.dataparsers.arkitscenes_dataparser.arkitscenesdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.arkitscenes_dataparser.ARKitScenesDataParserConfig.data"]], "data (nerfstudio.data.dataparsers.base_dataparser.dataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.base_dataparser.DataParserConfig.data"]], "data (nerfstudio.data.dataparsers.blender_dataparser.blenderdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.blender_dataparser.BlenderDataParserConfig.data"]], "data (nerfstudio.data.dataparsers.dnerf_dataparser.dnerfdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.dnerf_dataparser.DNeRFDataParserConfig.data"]], "data (nerfstudio.data.dataparsers.dycheck_dataparser.dycheckdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.dycheck_dataparser.DycheckDataParserConfig.data"]], "data (nerfstudio.data.dataparsers.instant_ngp_dataparser.instantngpdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.instant_ngp_dataparser.InstantNGPDataParserConfig.data"]], "data (nerfstudio.data.dataparsers.minimal_dataparser.minimaldataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.minimal_dataparser.MinimalDataParserConfig.data"]], "data (nerfstudio.data.dataparsers.nerfosr_dataparser.nerfosrdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.nerfosr_dataparser.NeRFOSRDataParserConfig.data"]], "data (nerfstudio.data.dataparsers.nerfstudio_dataparser.nerfstudiodataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.nerfstudio_dataparser.NerfstudioDataParserConfig.data"]], "data (nerfstudio.data.dataparsers.nuscenes_dataparser.nuscenesdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.nuscenes_dataparser.NuScenesDataParserConfig.data"]], "data (nerfstudio.data.dataparsers.phototourism_dataparser.phototourismdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.phototourism_dataparser.PhototourismDataParserConfig.data"]], "data (nerfstudio.data.dataparsers.scannet_dataparser.scannetdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.scannet_dataparser.ScanNetDataParserConfig.data"]], "data (nerfstudio.data.dataparsers.sdfstudio_dataparser.sdfstudiodataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.sdfstudio_dataparser.SDFStudioDataParserConfig.data"]], "data (nerfstudio.data.dataparsers.sitcoms3d_dataparser.sitcoms3ddataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.sitcoms3d_dataparser.Sitcoms3DDataParserConfig.data"]], "data_dir (nerfstudio.data.dataparsers.nuscenes_dataparser.nuscenesdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.nuscenes_dataparser.NuScenesDataParserConfig.data_dir"]], "dataparser_scale (nerfstudio.data.dataparsers.base_dataparser.dataparseroutputs attribute)": [[50, "nerfstudio.data.dataparsers.base_dataparser.DataparserOutputs.dataparser_scale"]], "dataparser_transform (nerfstudio.data.dataparsers.base_dataparser.dataparseroutputs attribute)": [[50, "nerfstudio.data.dataparsers.base_dataparser.DataparserOutputs.dataparser_transform"]], "depth_unit_scale_factor (nerfstudio.data.dataparsers.arkitscenes_dataparser.arkitscenesdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.arkitscenes_dataparser.ARKitScenesDataParserConfig.depth_unit_scale_factor"]], "depth_unit_scale_factor (nerfstudio.data.dataparsers.nerfstudio_dataparser.nerfstudiodataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.nerfstudio_dataparser.NerfstudioDataParserConfig.depth_unit_scale_factor"]], "depth_unit_scale_factor (nerfstudio.data.dataparsers.scannet_dataparser.scannetdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.scannet_dataparser.ScanNetDataParserConfig.depth_unit_scale_factor"]], "depth_unit_scale_factor (nerfstudio.data.dataparsers.sdfstudio_dataparser.sdfstudiodataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.sdfstudio_dataparser.SDFStudioDataParserConfig.depth_unit_scale_factor"]], "downscale() (in module nerfstudio.data.dataparsers.dycheck_dataparser)": [[50, "nerfstudio.data.dataparsers.dycheck_dataparser.downscale"]], "downscale_factor (nerfstudio.data.dataparsers.dycheck_dataparser.dycheckdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.dycheck_dataparser.DycheckDataParserConfig.downscale_factor"]], "downscale_factor (nerfstudio.data.dataparsers.nerfstudio_dataparser.nerfstudiodataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.nerfstudio_dataparser.NerfstudioDataParserConfig.downscale_factor"]], "eval_interval (nerfstudio.data.dataparsers.instant_ngp_dataparser.instantngpdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.instant_ngp_dataparser.InstantNGPDataParserConfig.eval_interval"]], "eval_interval (nerfstudio.data.dataparsers.nerfstudio_dataparser.nerfstudiodataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.nerfstudio_dataparser.NerfstudioDataParserConfig.eval_interval"]], "eval_mode (nerfstudio.data.dataparsers.instant_ngp_dataparser.instantngpdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.instant_ngp_dataparser.InstantNGPDataParserConfig.eval_mode"]], "eval_mode (nerfstudio.data.dataparsers.nerfstudio_dataparser.nerfstudiodataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.nerfstudio_dataparser.NerfstudioDataParserConfig.eval_mode"]], "filenames (nerfstudio.data.dataparsers.base_dataparser.semantics attribute)": [[50, "nerfstudio.data.dataparsers.base_dataparser.Semantics.filenames"]], "get_camera_params() (in module nerfstudio.data.dataparsers.nerfosr_dataparser)": [[50, "nerfstudio.data.dataparsers.nerfosr_dataparser.get_camera_params"]], "get_dataparser_outputs() (nerfstudio.data.dataparsers.base_dataparser.dataparser method)": [[50, "nerfstudio.data.dataparsers.base_dataparser.DataParser.get_dataparser_outputs"]], "get_focal_lengths() (nerfstudio.data.dataparsers.instant_ngp_dataparser.instantngp class method)": [[50, "nerfstudio.data.dataparsers.instant_ngp_dataparser.InstantNGP.get_focal_lengths"]], "image_filenames (nerfstudio.data.dataparsers.base_dataparser.dataparseroutputs attribute)": [[50, "nerfstudio.data.dataparsers.base_dataparser.DataparserOutputs.image_filenames"]], "include_foreground_mask (nerfstudio.data.dataparsers.sdfstudio_dataparser.sdfstudiodataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.sdfstudio_dataparser.SDFStudioDataParserConfig.include_foreground_mask"]], "include_mono_prior (nerfstudio.data.dataparsers.sdfstudio_dataparser.sdfstudiodataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.sdfstudio_dataparser.SDFStudioDataParserConfig.include_mono_prior"]], "include_semantics (nerfstudio.data.dataparsers.sitcoms3d_dataparser.sitcoms3ddataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.sitcoms3d_dataparser.Sitcoms3DDataParserConfig.include_semantics"]], "includes_time (nerfstudio.data.dataparsers.base_dataparser.dataparser attribute)": [[50, "nerfstudio.data.dataparsers.base_dataparser.DataParser.includes_time"]], "mask_classes (nerfstudio.data.dataparsers.base_dataparser.semantics attribute)": [[50, "nerfstudio.data.dataparsers.base_dataparser.Semantics.mask_classes"]], "mask_dir (nerfstudio.data.dataparsers.nuscenes_dataparser.nuscenesdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.nuscenes_dataparser.NuScenesDataParserConfig.mask_dir"]], "mask_filenames (nerfstudio.data.dataparsers.base_dataparser.dataparseroutputs attribute)": [[50, "nerfstudio.data.dataparsers.base_dataparser.DataparserOutputs.mask_filenames"]], "metadata (nerfstudio.data.dataparsers.base_dataparser.dataparseroutputs attribute)": [[50, "nerfstudio.data.dataparsers.base_dataparser.DataparserOutputs.metadata"]], "nerfstudio.data.dataparsers.arkitscenes_dataparser": [[50, "module-nerfstudio.data.dataparsers.arkitscenes_dataparser"]], "nerfstudio.data.dataparsers.base_dataparser": [[50, "module-nerfstudio.data.dataparsers.base_dataparser"]], "nerfstudio.data.dataparsers.blender_dataparser": [[50, "module-nerfstudio.data.dataparsers.blender_dataparser"]], "nerfstudio.data.dataparsers.dnerf_dataparser": [[50, "module-nerfstudio.data.dataparsers.dnerf_dataparser"]], "nerfstudio.data.dataparsers.dycheck_dataparser": [[50, "module-nerfstudio.data.dataparsers.dycheck_dataparser"]], "nerfstudio.data.dataparsers.instant_ngp_dataparser": [[50, "module-nerfstudio.data.dataparsers.instant_ngp_dataparser"]], "nerfstudio.data.dataparsers.minimal_dataparser": [[50, "module-nerfstudio.data.dataparsers.minimal_dataparser"]], "nerfstudio.data.dataparsers.nerfosr_dataparser": [[50, "module-nerfstudio.data.dataparsers.nerfosr_dataparser"]], "nerfstudio.data.dataparsers.nerfstudio_dataparser": [[50, "module-nerfstudio.data.dataparsers.nerfstudio_dataparser"]], "nerfstudio.data.dataparsers.nuscenes_dataparser": [[50, "module-nerfstudio.data.dataparsers.nuscenes_dataparser"]], "nerfstudio.data.dataparsers.phototourism_dataparser": [[50, "module-nerfstudio.data.dataparsers.phototourism_dataparser"]], "nerfstudio.data.dataparsers.scannet_dataparser": [[50, "module-nerfstudio.data.dataparsers.scannet_dataparser"]], "nerfstudio.data.dataparsers.sdfstudio_dataparser": [[50, "module-nerfstudio.data.dataparsers.sdfstudio_dataparser"]], "nerfstudio.data.dataparsers.sitcoms3d_dataparser": [[50, "module-nerfstudio.data.dataparsers.sitcoms3d_dataparser"]], "orientation_method (nerfstudio.data.dataparsers.nerfosr_dataparser.nerfosrdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.nerfosr_dataparser.NeRFOSRDataParserConfig.orientation_method"]], "orientation_method (nerfstudio.data.dataparsers.nerfstudio_dataparser.nerfstudiodataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.nerfstudio_dataparser.NerfstudioDataParserConfig.orientation_method"]], "orientation_method (nerfstudio.data.dataparsers.phototourism_dataparser.phototourismdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.phototourism_dataparser.PhototourismDataParserConfig.orientation_method"]], "process_frames() (nerfstudio.data.dataparsers.dycheck_dataparser.dycheck method)": [[50, "nerfstudio.data.dataparsers.dycheck_dataparser.Dycheck.process_frames"]], "rescale() (in module nerfstudio.data.dataparsers.dycheck_dataparser)": [[50, "nerfstudio.data.dataparsers.dycheck_dataparser.rescale"]], "rotation_translation_to_pose() (in module nerfstudio.data.dataparsers.nuscenes_dataparser)": [[50, "nerfstudio.data.dataparsers.nuscenes_dataparser.rotation_translation_to_pose"]], "save_dataparser_transform() (nerfstudio.data.dataparsers.base_dataparser.dataparseroutputs method)": [[50, "nerfstudio.data.dataparsers.base_dataparser.DataparserOutputs.save_dataparser_transform"]], "scale_factor (nerfstudio.data.dataparsers.arkitscenes_dataparser.arkitscenesdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.arkitscenes_dataparser.ARKitScenesDataParserConfig.scale_factor"]], "scale_factor (nerfstudio.data.dataparsers.blender_dataparser.blenderdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.blender_dataparser.BlenderDataParserConfig.scale_factor"]], "scale_factor (nerfstudio.data.dataparsers.dnerf_dataparser.dnerfdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.dnerf_dataparser.DNeRFDataParserConfig.scale_factor"]], "scale_factor (nerfstudio.data.dataparsers.dycheck_dataparser.dycheckdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.dycheck_dataparser.DycheckDataParserConfig.scale_factor"]], "scale_factor (nerfstudio.data.dataparsers.nerfosr_dataparser.nerfosrdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.nerfosr_dataparser.NeRFOSRDataParserConfig.scale_factor"]], "scale_factor (nerfstudio.data.dataparsers.nerfstudio_dataparser.nerfstudiodataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.nerfstudio_dataparser.NerfstudioDataParserConfig.scale_factor"]], "scale_factor (nerfstudio.data.dataparsers.phototourism_dataparser.phototourismdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.phototourism_dataparser.PhototourismDataParserConfig.scale_factor"]], "scale_factor (nerfstudio.data.dataparsers.scannet_dataparser.scannetdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.scannet_dataparser.ScanNetDataParserConfig.scale_factor"]], "scene (nerfstudio.data.dataparsers.nerfosr_dataparser.nerfosrdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.nerfosr_dataparser.NeRFOSRDataParserConfig.scene"]], "scene_box (nerfstudio.data.dataparsers.base_dataparser.dataparseroutputs attribute)": [[50, "nerfstudio.data.dataparsers.base_dataparser.DataparserOutputs.scene_box"]], "scene_box_bound (nerfstudio.data.dataparsers.dycheck_dataparser.dycheckdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.dycheck_dataparser.DycheckDataParserConfig.scene_box_bound"]], "scene_scale (nerfstudio.data.dataparsers.arkitscenes_dataparser.arkitscenesdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.arkitscenes_dataparser.ARKitScenesDataParserConfig.scene_scale"]], "scene_scale (nerfstudio.data.dataparsers.instant_ngp_dataparser.instantngpdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.instant_ngp_dataparser.InstantNGPDataParserConfig.scene_scale"]], "scene_scale (nerfstudio.data.dataparsers.nerfosr_dataparser.nerfosrdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.nerfosr_dataparser.NeRFOSRDataParserConfig.scene_scale"]], "scene_scale (nerfstudio.data.dataparsers.nerfstudio_dataparser.nerfstudiodataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.nerfstudio_dataparser.NerfstudioDataParserConfig.scene_scale"]], "scene_scale (nerfstudio.data.dataparsers.phototourism_dataparser.phototourismdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.phototourism_dataparser.PhototourismDataParserConfig.scene_scale"]], "scene_scale (nerfstudio.data.dataparsers.scannet_dataparser.scannetdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.scannet_dataparser.ScanNetDataParserConfig.scene_scale"]], "scene_scale (nerfstudio.data.dataparsers.sdfstudio_dataparser.sdfstudiodataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.sdfstudio_dataparser.SDFStudioDataParserConfig.scene_scale"]], "scene_scale (nerfstudio.data.dataparsers.sitcoms3d_dataparser.sitcoms3ddataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.sitcoms3d_dataparser.Sitcoms3DDataParserConfig.scene_scale"]], "skip_every_for_val_split (nerfstudio.data.dataparsers.sdfstudio_dataparser.sdfstudiodataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.sdfstudio_dataparser.SDFStudioDataParserConfig.skip_every_for_val_split"]], "train_split_fraction (nerfstudio.data.dataparsers.arkitscenes_dataparser.arkitscenesdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.arkitscenes_dataparser.ARKitScenesDataParserConfig.train_split_fraction"]], "train_split_fraction (nerfstudio.data.dataparsers.instant_ngp_dataparser.instantngpdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.instant_ngp_dataparser.InstantNGPDataParserConfig.train_split_fraction"]], "train_split_fraction (nerfstudio.data.dataparsers.nerfstudio_dataparser.nerfstudiodataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.nerfstudio_dataparser.NerfstudioDataParserConfig.train_split_fraction"]], "train_split_fraction (nerfstudio.data.dataparsers.nuscenes_dataparser.nuscenesdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.nuscenes_dataparser.NuScenesDataParserConfig.train_split_fraction"]], "train_split_fraction (nerfstudio.data.dataparsers.phototourism_dataparser.phototourismdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.phototourism_dataparser.PhototourismDataParserConfig.train_split_fraction"]], "train_split_fraction (nerfstudio.data.dataparsers.scannet_dataparser.scannetdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.scannet_dataparser.ScanNetDataParserConfig.train_split_fraction"]], "traj_string_to_matrix() (in module nerfstudio.data.dataparsers.arkitscenes_dataparser)": [[50, "nerfstudio.data.dataparsers.arkitscenes_dataparser.traj_string_to_matrix"]], "transform_poses_to_original_space() (in module nerfstudio.data.dataparsers.base_dataparser)": [[50, "nerfstudio.data.dataparsers.base_dataparser.transform_poses_to_original_space"]], "transform_poses_to_original_space() (nerfstudio.data.dataparsers.base_dataparser.dataparseroutputs method)": [[50, "nerfstudio.data.dataparsers.base_dataparser.DataparserOutputs.transform_poses_to_original_space"]], "upscale() (in module nerfstudio.data.dataparsers.dycheck_dataparser)": [[50, "nerfstudio.data.dataparsers.dycheck_dataparser.upscale"]], "use_masks (nerfstudio.data.dataparsers.nerfosr_dataparser.nerfosrdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.nerfosr_dataparser.NeRFOSRDataParserConfig.use_masks"]], "verbose (nerfstudio.data.dataparsers.nuscenes_dataparser.nuscenesdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.nuscenes_dataparser.NuScenesDataParserConfig.verbose"]], "version (nerfstudio.data.dataparsers.nuscenes_dataparser.nuscenesdataparserconfig attribute)": [[50, "nerfstudio.data.dataparsers.nuscenes_dataparser.NuScenesDataParserConfig.version"]], "inputdataset (class in nerfstudio.data.datasets.base_dataset)": [[51, "nerfstudio.data.datasets.base_dataset.InputDataset"]], "sdfdataset (class in nerfstudio.data.datasets.sdf_dataset)": [[51, "nerfstudio.data.datasets.sdf_dataset.SDFDataset"]], "semanticdataset (class in nerfstudio.data.datasets.semantic_dataset)": [[51, "nerfstudio.data.datasets.semantic_dataset.SemanticDataset"]], "get_data() (nerfstudio.data.datasets.base_dataset.inputdataset method)": [[51, "nerfstudio.data.datasets.base_dataset.InputDataset.get_data"]], "get_depths_and_normals() (nerfstudio.data.datasets.sdf_dataset.sdfdataset method)": [[51, "nerfstudio.data.datasets.sdf_dataset.SDFDataset.get_depths_and_normals"]], "get_image() (nerfstudio.data.datasets.base_dataset.inputdataset method)": [[51, "nerfstudio.data.datasets.base_dataset.InputDataset.get_image"]], "get_metadata() (nerfstudio.data.datasets.base_dataset.inputdataset method)": [[51, "nerfstudio.data.datasets.base_dataset.InputDataset.get_metadata"]], "get_metadata() (nerfstudio.data.datasets.sdf_dataset.sdfdataset method)": [[51, "nerfstudio.data.datasets.sdf_dataset.SDFDataset.get_metadata"]], "get_metadata() (nerfstudio.data.datasets.semantic_dataset.semanticdataset method)": [[51, "nerfstudio.data.datasets.semantic_dataset.SemanticDataset.get_metadata"]], "get_numpy_image() (nerfstudio.data.datasets.base_dataset.inputdataset method)": [[51, "nerfstudio.data.datasets.base_dataset.InputDataset.get_numpy_image"]], "image_filenames (nerfstudio.data.datasets.base_dataset.inputdataset property)": [[51, "nerfstudio.data.datasets.base_dataset.InputDataset.image_filenames"]], "nerfstudio.data.datasets.base_dataset": [[51, "module-nerfstudio.data.datasets.base_dataset"]], "nerfstudio.data.datasets.sdf_dataset": [[51, "module-nerfstudio.data.datasets.sdf_dataset"]], "nerfstudio.data.datasets.semantic_dataset": [[51, "module-nerfstudio.data.datasets.semantic_dataset"]], "orientedbox (class in nerfstudio.data.scene_box)": [[52, "nerfstudio.data.scene_box.OrientedBox"]], "pairpixelsampler (class in nerfstudio.data.pixel_samplers)": [[52, "nerfstudio.data.pixel_samplers.PairPixelSampler"]], "pairpixelsamplerconfig (class in nerfstudio.data.pixel_samplers)": [[52, "nerfstudio.data.pixel_samplers.PairPixelSamplerConfig"]], "patchpixelsampler (class in nerfstudio.data.pixel_samplers)": [[52, "nerfstudio.data.pixel_samplers.PatchPixelSampler"]], "patchpixelsamplerconfig (class in nerfstudio.data.pixel_samplers)": [[52, "nerfstudio.data.pixel_samplers.PatchPixelSamplerConfig"]], "pixelsampler (class in nerfstudio.data.pixel_samplers)": [[52, "nerfstudio.data.pixel_samplers.PixelSampler"]], "pixelsamplerconfig (class in nerfstudio.data.pixel_samplers)": [[52, "nerfstudio.data.pixel_samplers.PixelSamplerConfig"]], "r (nerfstudio.data.scene_box.orientedbox attribute)": [[52, "nerfstudio.data.scene_box.OrientedBox.R"]], "s (nerfstudio.data.scene_box.orientedbox attribute)": [[52, "nerfstudio.data.scene_box.OrientedBox.S"]], "scenebox (class in nerfstudio.data.scene_box)": [[52, "nerfstudio.data.scene_box.SceneBox"]], "t (nerfstudio.data.scene_box.orientedbox attribute)": [[52, "nerfstudio.data.scene_box.OrientedBox.T"]], "aabb (nerfstudio.data.scene_box.scenebox attribute)": [[52, "nerfstudio.data.scene_box.SceneBox.aabb"]], "collate_image_dataset_batch() (nerfstudio.data.pixel_samplers.pixelsampler method)": [[52, "nerfstudio.data.pixel_samplers.PixelSampler.collate_image_dataset_batch"]], "collate_image_dataset_batch_list() (nerfstudio.data.pixel_samplers.pixelsampler method)": [[52, "nerfstudio.data.pixel_samplers.PixelSampler.collate_image_dataset_batch_list"]], "fisheye_crop_radius (nerfstudio.data.pixel_samplers.pixelsamplerconfig attribute)": [[52, "nerfstudio.data.pixel_samplers.PixelSamplerConfig.fisheye_crop_radius"]], "from_camera_poses() (nerfstudio.data.scene_box.scenebox static method)": [[52, "nerfstudio.data.scene_box.SceneBox.from_camera_poses"]], "from_params() (nerfstudio.data.scene_box.orientedbox static method)": [[52, "nerfstudio.data.scene_box.OrientedBox.from_params"]], "get_center() (nerfstudio.data.scene_box.scenebox method)": [[52, "nerfstudio.data.scene_box.SceneBox.get_center"]], "get_centered_and_scaled_scene_box() (nerfstudio.data.scene_box.scenebox method)": [[52, "nerfstudio.data.scene_box.SceneBox.get_centered_and_scaled_scene_box"]], "get_diagonal_length() (nerfstudio.data.scene_box.scenebox method)": [[52, "nerfstudio.data.scene_box.SceneBox.get_diagonal_length"]], "get_normalized_positions() (nerfstudio.data.scene_box.scenebox static method)": [[52, "nerfstudio.data.scene_box.SceneBox.get_normalized_positions"]], "is_equirectangular (nerfstudio.data.pixel_samplers.pixelsamplerconfig attribute)": [[52, "nerfstudio.data.pixel_samplers.PixelSamplerConfig.is_equirectangular"]], "keep_full_image (nerfstudio.data.pixel_samplers.pixelsamplerconfig attribute)": [[52, "nerfstudio.data.pixel_samplers.PixelSamplerConfig.keep_full_image"]], "nerfstudio.data.pixel_samplers": [[52, "module-nerfstudio.data.pixel_samplers"]], "nerfstudio.data.scene_box": [[52, "module-nerfstudio.data.scene_box"]], "num_rays_per_batch (nerfstudio.data.pixel_samplers.pixelsamplerconfig attribute)": [[52, "nerfstudio.data.pixel_samplers.PixelSamplerConfig.num_rays_per_batch"]], "patch_size (nerfstudio.data.pixel_samplers.patchpixelsamplerconfig attribute)": [[52, "nerfstudio.data.pixel_samplers.PatchPixelSamplerConfig.patch_size"]], "radius (nerfstudio.data.pixel_samplers.pairpixelsamplerconfig attribute)": [[52, "nerfstudio.data.pixel_samplers.PairPixelSamplerConfig.radius"]], "sample() (nerfstudio.data.pixel_samplers.pixelsampler method)": [[52, "nerfstudio.data.pixel_samplers.PixelSampler.sample"]], "sample_method() (nerfstudio.data.pixel_samplers.pairpixelsampler method)": [[52, "nerfstudio.data.pixel_samplers.PairPixelSampler.sample_method"]], "sample_method() (nerfstudio.data.pixel_samplers.patchpixelsampler method)": [[52, "nerfstudio.data.pixel_samplers.PatchPixelSampler.sample_method"]], "sample_method() (nerfstudio.data.pixel_samplers.pixelsampler method)": [[52, "nerfstudio.data.pixel_samplers.PixelSampler.sample_method"]], "set_num_rays_per_batch() (nerfstudio.data.pixel_samplers.patchpixelsampler method)": [[52, "nerfstudio.data.pixel_samplers.PatchPixelSampler.set_num_rays_per_batch"]], "set_num_rays_per_batch() (nerfstudio.data.pixel_samplers.pixelsampler method)": [[52, "nerfstudio.data.pixel_samplers.PixelSampler.set_num_rays_per_batch"]], "within() (nerfstudio.data.scene_box.orientedbox method)": [[52, "nerfstudio.data.scene_box.OrientedBox.within"]], "baseimage (in module nerfstudio.data.utils.colmap_parsing_utils)": [[53, "nerfstudio.data.utils.colmap_parsing_utils.BaseImage"]], "cachedataloader (class in nerfstudio.data.utils.dataloaders)": [[53, "nerfstudio.data.utils.dataloaders.CacheDataloader"]], "camera (class in nerfstudio.data.utils.colmap_parsing_utils)": [[53, "nerfstudio.data.utils.colmap_parsing_utils.Camera"]], "cameramodel (class in nerfstudio.data.utils.colmap_parsing_utils)": [[53, "nerfstudio.data.utils.colmap_parsing_utils.CameraModel"]], "evaldataloader (class in nerfstudio.data.utils.dataloaders)": [[53, "nerfstudio.data.utils.dataloaders.EvalDataloader"]], "fixedindicesevaldataloader (class in nerfstudio.data.utils.dataloaders)": [[53, "nerfstudio.data.utils.dataloaders.FixedIndicesEvalDataloader"]], "image (class in nerfstudio.data.utils.colmap_parsing_utils)": [[53, "nerfstudio.data.utils.colmap_parsing_utils.Image"]], "point3d (class in nerfstudio.data.utils.colmap_parsing_utils)": [[53, "nerfstudio.data.utils.colmap_parsing_utils.Point3D"]], "randindicesevaldataloader (class in nerfstudio.data.utils.dataloaders)": [[53, "nerfstudio.data.utils.dataloaders.RandIndicesEvalDataloader"]], "__iter__() (nerfstudio.data.utils.dataloaders.evaldataloader method)": [[53, "nerfstudio.data.utils.dataloaders.EvalDataloader.__iter__"]], "__next__() (nerfstudio.data.utils.dataloaders.evaldataloader method)": [[53, "nerfstudio.data.utils.dataloaders.EvalDataloader.__next__"]], "error (nerfstudio.data.utils.colmap_parsing_utils.point3d attribute)": [[53, "nerfstudio.data.utils.colmap_parsing_utils.Point3D.error"]], "get_camera() (nerfstudio.data.utils.dataloaders.evaldataloader method)": [[53, "nerfstudio.data.utils.dataloaders.EvalDataloader.get_camera"]], "get_data_from_image_idx() (nerfstudio.data.utils.dataloaders.evaldataloader method)": [[53, "nerfstudio.data.utils.dataloaders.EvalDataloader.get_data_from_image_idx"]], "get_depth_image_from_path() (in module nerfstudio.data.utils.data_utils)": [[53, "nerfstudio.data.utils.data_utils.get_depth_image_from_path"]], "get_image_mask_tensor_from_path() (in module nerfstudio.data.utils.data_utils)": [[53, "nerfstudio.data.utils.data_utils.get_image_mask_tensor_from_path"]], "get_semantics_and_mask_tensors_from_path() (in module nerfstudio.data.utils.data_utils)": [[53, "nerfstudio.data.utils.data_utils.get_semantics_and_mask_tensors_from_path"]], "height (nerfstudio.data.utils.colmap_parsing_utils.camera attribute)": [[53, "nerfstudio.data.utils.colmap_parsing_utils.Camera.height"]], "id (nerfstudio.data.utils.colmap_parsing_utils.camera attribute)": [[53, "nerfstudio.data.utils.colmap_parsing_utils.Camera.id"]], "id (nerfstudio.data.utils.colmap_parsing_utils.point3d attribute)": [[53, "nerfstudio.data.utils.colmap_parsing_utils.Point3D.id"]], "image_ids (nerfstudio.data.utils.colmap_parsing_utils.point3d attribute)": [[53, "nerfstudio.data.utils.colmap_parsing_utils.Point3D.image_ids"]], "model (nerfstudio.data.utils.colmap_parsing_utils.camera attribute)": [[53, "nerfstudio.data.utils.colmap_parsing_utils.Camera.model"]], "model_id (nerfstudio.data.utils.colmap_parsing_utils.cameramodel attribute)": [[53, "nerfstudio.data.utils.colmap_parsing_utils.CameraModel.model_id"]], "model_name (nerfstudio.data.utils.colmap_parsing_utils.cameramodel attribute)": [[53, "nerfstudio.data.utils.colmap_parsing_utils.CameraModel.model_name"]], "nerfstudio.data.utils.colmap_parsing_utils": [[53, "module-nerfstudio.data.utils.colmap_parsing_utils"]], "nerfstudio.data.utils.data_utils": [[53, "module-nerfstudio.data.utils.data_utils"]], "nerfstudio.data.utils.dataloaders": [[53, "module-nerfstudio.data.utils.dataloaders"]], "nerfstudio.data.utils.nerfstudio_collate": [[53, "module-nerfstudio.data.utils.nerfstudio_collate"]], "nerfstudio_collate() (in module nerfstudio.data.utils.nerfstudio_collate)": [[53, "nerfstudio.data.utils.nerfstudio_collate.nerfstudio_collate"]], "num_params (nerfstudio.data.utils.colmap_parsing_utils.cameramodel attribute)": [[53, "nerfstudio.data.utils.colmap_parsing_utils.CameraModel.num_params"]], "params (nerfstudio.data.utils.colmap_parsing_utils.camera attribute)": [[53, "nerfstudio.data.utils.colmap_parsing_utils.Camera.params"]], "point2d_idxs (nerfstudio.data.utils.colmap_parsing_utils.point3d attribute)": [[53, "nerfstudio.data.utils.colmap_parsing_utils.Point3D.point2D_idxs"]], "read_cameras_binary() (in module nerfstudio.data.utils.colmap_parsing_utils)": [[53, "nerfstudio.data.utils.colmap_parsing_utils.read_cameras_binary"]], "read_cameras_text() (in module nerfstudio.data.utils.colmap_parsing_utils)": [[53, "nerfstudio.data.utils.colmap_parsing_utils.read_cameras_text"]], "read_images_binary() (in module nerfstudio.data.utils.colmap_parsing_utils)": [[53, "nerfstudio.data.utils.colmap_parsing_utils.read_images_binary"]], "read_images_text() (in module nerfstudio.data.utils.colmap_parsing_utils)": [[53, "nerfstudio.data.utils.colmap_parsing_utils.read_images_text"]], "read_next_bytes() (in module nerfstudio.data.utils.colmap_parsing_utils)": [[53, "nerfstudio.data.utils.colmap_parsing_utils.read_next_bytes"]], "read_points3d_binary() (in module nerfstudio.data.utils.colmap_parsing_utils)": [[53, "nerfstudio.data.utils.colmap_parsing_utils.read_points3D_binary"]], "read_points3d_text() (in module nerfstudio.data.utils.colmap_parsing_utils)": [[53, "nerfstudio.data.utils.colmap_parsing_utils.read_points3D_text"]], "rgb (nerfstudio.data.utils.colmap_parsing_utils.point3d attribute)": [[53, "nerfstudio.data.utils.colmap_parsing_utils.Point3D.rgb"]], "width (nerfstudio.data.utils.colmap_parsing_utils.camera attribute)": [[53, "nerfstudio.data.utils.colmap_parsing_utils.Camera.width"]], "write_cameras_binary() (in module nerfstudio.data.utils.colmap_parsing_utils)": [[53, "nerfstudio.data.utils.colmap_parsing_utils.write_cameras_binary"]], "write_cameras_text() (in module nerfstudio.data.utils.colmap_parsing_utils)": [[53, "nerfstudio.data.utils.colmap_parsing_utils.write_cameras_text"]], "write_images_binary() (in module nerfstudio.data.utils.colmap_parsing_utils)": [[53, "nerfstudio.data.utils.colmap_parsing_utils.write_images_binary"]], "write_images_text() (in module nerfstudio.data.utils.colmap_parsing_utils)": [[53, "nerfstudio.data.utils.colmap_parsing_utils.write_images_text"]], "write_next_bytes() (in module nerfstudio.data.utils.colmap_parsing_utils)": [[53, "nerfstudio.data.utils.colmap_parsing_utils.write_next_bytes"]], "write_points3d_binary() (in module nerfstudio.data.utils.colmap_parsing_utils)": [[53, "nerfstudio.data.utils.colmap_parsing_utils.write_points3D_binary"]], "write_points3d_text() (in module nerfstudio.data.utils.colmap_parsing_utils)": [[53, "nerfstudio.data.utils.colmap_parsing_utils.write_points3D_text"]], "xyz (nerfstudio.data.utils.colmap_parsing_utils.point3d attribute)": [[53, "nerfstudio.data.utils.colmap_parsing_utils.Point3D.xyz"]], "embedding (class in nerfstudio.field_components.embedding)": [[54, "nerfstudio.field_components.embedding.Embedding"]], "build_nn_modules() (nerfstudio.field_components.embedding.embedding method)": [[54, "nerfstudio.field_components.embedding.Embedding.build_nn_modules"]], "forward() (nerfstudio.field_components.embedding.embedding method)": [[54, "nerfstudio.field_components.embedding.Embedding.forward"]], "mean() (nerfstudio.field_components.embedding.embedding method)": [[54, "nerfstudio.field_components.embedding.Embedding.mean"]], "nerfstudio.field_components.embedding": [[54, "module-nerfstudio.field_components.embedding"]], "encoding (class in nerfstudio.field_components.encodings)": [[55, "nerfstudio.field_components.encodings.Encoding"]], "ffencoding (class in nerfstudio.field_components.encodings)": [[55, "nerfstudio.field_components.encodings.FFEncoding"]], "hashencoding (class in nerfstudio.field_components.encodings)": [[55, "nerfstudio.field_components.encodings.HashEncoding"]], "identity (class in nerfstudio.field_components.encodings)": [[55, "nerfstudio.field_components.encodings.Identity"]], "kplanesencoding (class in nerfstudio.field_components.encodings)": [[55, "nerfstudio.field_components.encodings.KPlanesEncoding"]], "nerfencoding (class in nerfstudio.field_components.encodings)": [[55, "nerfstudio.field_components.encodings.NeRFEncoding"]], "polyhedronffencoding (class in nerfstudio.field_components.encodings)": [[55, "nerfstudio.field_components.encodings.PolyhedronFFEncoding"]], "rffencoding (class in nerfstudio.field_components.encodings)": [[55, "nerfstudio.field_components.encodings.RFFEncoding"]], "shencoding (class in nerfstudio.field_components.encodings)": [[55, "nerfstudio.field_components.encodings.SHEncoding"]], "scalingandoffset (class in nerfstudio.field_components.encodings)": [[55, "nerfstudio.field_components.encodings.ScalingAndOffset"]], "tensorcpencoding (class in nerfstudio.field_components.encodings)": [[55, "nerfstudio.field_components.encodings.TensorCPEncoding"]], "tensorvmencoding (class in nerfstudio.field_components.encodings)": [[55, "nerfstudio.field_components.encodings.TensorVMEncoding"]], "triplaneencoding (class in nerfstudio.field_components.encodings)": [[55, "nerfstudio.field_components.encodings.TriplaneEncoding"]], "build_nn_modules() (nerfstudio.field_components.encodings.hashencoding method)": [[55, "nerfstudio.field_components.encodings.HashEncoding.build_nn_modules"]], "forward() (nerfstudio.field_components.encodings.encoding method)": [[55, "nerfstudio.field_components.encodings.Encoding.forward"]], "forward() (nerfstudio.field_components.encodings.ffencoding method)": [[55, "nerfstudio.field_components.encodings.FFEncoding.forward"]], "forward() (nerfstudio.field_components.encodings.hashencoding method)": [[55, "nerfstudio.field_components.encodings.HashEncoding.forward"]], "forward() (nerfstudio.field_components.encodings.identity method)": [[55, "nerfstudio.field_components.encodings.Identity.forward"]], "forward() (nerfstudio.field_components.encodings.kplanesencoding method)": [[55, "nerfstudio.field_components.encodings.KPlanesEncoding.forward"]], "forward() (nerfstudio.field_components.encodings.nerfencoding method)": [[55, "nerfstudio.field_components.encodings.NeRFEncoding.forward"]], "forward() (nerfstudio.field_components.encodings.shencoding method)": [[55, "nerfstudio.field_components.encodings.SHEncoding.forward"]], "forward() (nerfstudio.field_components.encodings.scalingandoffset method)": [[55, "nerfstudio.field_components.encodings.ScalingAndOffset.forward"]], "forward() (nerfstudio.field_components.encodings.tensorcpencoding method)": [[55, "nerfstudio.field_components.encodings.TensorCPEncoding.forward"]], "forward() (nerfstudio.field_components.encodings.tensorvmencoding method)": [[55, "nerfstudio.field_components.encodings.TensorVMEncoding.forward"]], "forward() (nerfstudio.field_components.encodings.triplaneencoding method)": [[55, "nerfstudio.field_components.encodings.TriplaneEncoding.forward"]], "get_out_dim() (nerfstudio.field_components.encodings.ffencoding method)": [[55, "nerfstudio.field_components.encodings.FFEncoding.get_out_dim"]], "get_out_dim() (nerfstudio.field_components.encodings.hashencoding method)": [[55, "nerfstudio.field_components.encodings.HashEncoding.get_out_dim"]], "get_out_dim() (nerfstudio.field_components.encodings.identity method)": [[55, "nerfstudio.field_components.encodings.Identity.get_out_dim"]], "get_out_dim() (nerfstudio.field_components.encodings.kplanesencoding method)": [[55, "nerfstudio.field_components.encodings.KPlanesEncoding.get_out_dim"]], "get_out_dim() (nerfstudio.field_components.encodings.nerfencoding method)": [[55, "nerfstudio.field_components.encodings.NeRFEncoding.get_out_dim"]], "get_out_dim() (nerfstudio.field_components.encodings.shencoding method)": [[55, "nerfstudio.field_components.encodings.SHEncoding.get_out_dim"]], "get_out_dim() (nerfstudio.field_components.encodings.scalingandoffset method)": [[55, "nerfstudio.field_components.encodings.ScalingAndOffset.get_out_dim"]], "get_out_dim() (nerfstudio.field_components.encodings.tensorcpencoding method)": [[55, "nerfstudio.field_components.encodings.TensorCPEncoding.get_out_dim"]], "get_out_dim() (nerfstudio.field_components.encodings.tensorvmencoding method)": [[55, "nerfstudio.field_components.encodings.TensorVMEncoding.get_out_dim"]], "get_out_dim() (nerfstudio.field_components.encodings.triplaneencoding method)": [[55, "nerfstudio.field_components.encodings.TriplaneEncoding.get_out_dim"]], "get_tcnn_encoding_config() (nerfstudio.field_components.encodings.encoding class method)": [[55, "nerfstudio.field_components.encodings.Encoding.get_tcnn_encoding_config"]], "get_tcnn_encoding_config() (nerfstudio.field_components.encodings.hashencoding class method)": [[55, "nerfstudio.field_components.encodings.HashEncoding.get_tcnn_encoding_config"]], "get_tcnn_encoding_config() (nerfstudio.field_components.encodings.nerfencoding class method)": [[55, "nerfstudio.field_components.encodings.NeRFEncoding.get_tcnn_encoding_config"]], "get_tcnn_encoding_config() (nerfstudio.field_components.encodings.shencoding class method)": [[55, "nerfstudio.field_components.encodings.SHEncoding.get_tcnn_encoding_config"]], "hash_fn() (nerfstudio.field_components.encodings.hashencoding method)": [[55, "nerfstudio.field_components.encodings.HashEncoding.hash_fn"]], "nerfstudio.field_components.encodings": [[55, "module-nerfstudio.field_components.encodings"]], "pytorch_fwd() (nerfstudio.field_components.encodings.hashencoding method)": [[55, "nerfstudio.field_components.encodings.HashEncoding.pytorch_fwd"]], "pytorch_fwd() (nerfstudio.field_components.encodings.nerfencoding method)": [[55, "nerfstudio.field_components.encodings.NeRFEncoding.pytorch_fwd"]], "pytorch_fwd() (nerfstudio.field_components.encodings.shencoding method)": [[55, "nerfstudio.field_components.encodings.SHEncoding.pytorch_fwd"]], "upsample_grid() (nerfstudio.field_components.encodings.tensorcpencoding method)": [[55, "nerfstudio.field_components.encodings.TensorCPEncoding.upsample_grid"]], "upsample_grid() (nerfstudio.field_components.encodings.tensorvmencoding method)": [[55, "nerfstudio.field_components.encodings.TensorVMEncoding.upsample_grid"]], "upsample_grid() (nerfstudio.field_components.encodings.triplaneencoding method)": [[55, "nerfstudio.field_components.encodings.TriplaneEncoding.upsample_grid"]], "densityfieldhead (class in nerfstudio.field_components.field_heads)": [[56, "nerfstudio.field_components.field_heads.DensityFieldHead"]], "fieldhead (class in nerfstudio.field_components.field_heads)": [[56, "nerfstudio.field_components.field_heads.FieldHead"]], "fieldheadnames (class in nerfstudio.field_components.field_heads)": [[56, "nerfstudio.field_components.field_heads.FieldHeadNames"]], "prednormalsfieldhead (class in nerfstudio.field_components.field_heads)": [[56, "nerfstudio.field_components.field_heads.PredNormalsFieldHead"]], "rgbfieldhead (class in nerfstudio.field_components.field_heads)": [[56, "nerfstudio.field_components.field_heads.RGBFieldHead"]], "shfieldhead (class in nerfstudio.field_components.field_heads)": [[56, "nerfstudio.field_components.field_heads.SHFieldHead"]], "semanticfieldhead (class in nerfstudio.field_components.field_heads)": [[56, "nerfstudio.field_components.field_heads.SemanticFieldHead"]], "transientdensityfieldhead (class in nerfstudio.field_components.field_heads)": [[56, "nerfstudio.field_components.field_heads.TransientDensityFieldHead"]], "transientrgbfieldhead (class in nerfstudio.field_components.field_heads)": [[56, "nerfstudio.field_components.field_heads.TransientRGBFieldHead"]], "uncertaintyfieldhead (class in nerfstudio.field_components.field_heads)": [[56, "nerfstudio.field_components.field_heads.UncertaintyFieldHead"]], "forward() (nerfstudio.field_components.field_heads.fieldhead method)": [[56, "nerfstudio.field_components.field_heads.FieldHead.forward"]], "forward() (nerfstudio.field_components.field_heads.prednormalsfieldhead method)": [[56, "nerfstudio.field_components.field_heads.PredNormalsFieldHead.forward"]], "nerfstudio.field_components.field_heads": [[56, "module-nerfstudio.field_components.field_heads"]], "set_in_dim() (nerfstudio.field_components.field_heads.fieldhead method)": [[56, "nerfstudio.field_components.field_heads.FieldHead.set_in_dim"]], "mlp (class in nerfstudio.field_components.mlp)": [[58, "nerfstudio.field_components.mlp.MLP"]], "mlpwithhashencoding (class in nerfstudio.field_components.mlp)": [[58, "nerfstudio.field_components.mlp.MLPWithHashEncoding"]], "activation_to_tcnn_string() (in module nerfstudio.field_components.mlp)": [[58, "nerfstudio.field_components.mlp.activation_to_tcnn_string"]], "build_nn_modules() (nerfstudio.field_components.mlp.mlp method)": [[58, "nerfstudio.field_components.mlp.MLP.build_nn_modules"]], "build_nn_modules() (nerfstudio.field_components.mlp.mlpwithhashencoding method)": [[58, "nerfstudio.field_components.mlp.MLPWithHashEncoding.build_nn_modules"]], "forward() (nerfstudio.field_components.mlp.mlp method)": [[58, "nerfstudio.field_components.mlp.MLP.forward"]], "forward() (nerfstudio.field_components.mlp.mlpwithhashencoding method)": [[58, "nerfstudio.field_components.mlp.MLPWithHashEncoding.forward"]], "get_tcnn_network_config() (nerfstudio.field_components.mlp.mlp class method)": [[58, "nerfstudio.field_components.mlp.MLP.get_tcnn_network_config"]], "nerfstudio.field_components.mlp": [[58, "module-nerfstudio.field_components.mlp"]], "pytorch_fwd() (nerfstudio.field_components.mlp.mlp method)": [[58, "nerfstudio.field_components.mlp.MLP.pytorch_fwd"]], "scenecontraction (class in nerfstudio.field_components.spatial_distortions)": [[59, "nerfstudio.field_components.spatial_distortions.SceneContraction"]], "spatialdistortion (class in nerfstudio.field_components.spatial_distortions)": [[59, "nerfstudio.field_components.spatial_distortions.SpatialDistortion"]], "forward() (nerfstudio.field_components.spatial_distortions.scenecontraction method)": [[59, "nerfstudio.field_components.spatial_distortions.SceneContraction.forward"]], "forward() (nerfstudio.field_components.spatial_distortions.spatialdistortion method)": [[59, "nerfstudio.field_components.spatial_distortions.SpatialDistortion.forward"]], "nerfstudio.field_components.spatial_distortions": [[59, "module-nerfstudio.field_components.spatial_distortions"]], "field (class in nerfstudio.fields.base_field)": [[60, "nerfstudio.fields.base_field.Field"]], "fieldconfig (class in nerfstudio.fields.base_field)": [[60, "nerfstudio.fields.base_field.FieldConfig"]], "hashmlpdensityfield (class in nerfstudio.fields.density_fields)": [[60, "nerfstudio.fields.density_fields.HashMLPDensityField"]], "learnedvariance (class in nerfstudio.fields.sdf_field)": [[60, "nerfstudio.fields.sdf_field.LearnedVariance"]], "nerffield (class in nerfstudio.fields.vanilla_nerf_field)": [[60, "nerfstudio.fields.vanilla_nerf_field.NeRFField"]], "nerfactofield (class in nerfstudio.fields.nerfacto_field)": [[60, "nerfstudio.fields.nerfacto_field.NerfactoField"]], "sdffield (class in nerfstudio.fields.sdf_field)": [[60, "nerfstudio.fields.sdf_field.SDFField"]], "sdffieldconfig (class in nerfstudio.fields.sdf_field)": [[60, "nerfstudio.fields.sdf_field.SDFFieldConfig"]], "semanticnerffield (class in nerfstudio.fields.semantic_nerf_field)": [[60, "nerfstudio.fields.semantic_nerf_field.SemanticNerfField"]], "tensorffield (class in nerfstudio.fields.tensorf_field)": [[60, "nerfstudio.fields.tensorf_field.TensoRFField"]], "vanillanerfwfield (class in nerfstudio.fields.nerfw_field)": [[60, "nerfstudio.fields.nerfw_field.VanillaNerfWField"]], "appearance_embedding_dim (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[60, "nerfstudio.fields.sdf_field.SDFFieldConfig.appearance_embedding_dim"]], "base_res (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[60, "nerfstudio.fields.sdf_field.SDFFieldConfig.base_res"]], "beta_init (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[60, "nerfstudio.fields.sdf_field.SDFFieldConfig.beta_init"]], "bias (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[60, "nerfstudio.fields.sdf_field.SDFFieldConfig.bias"]], "density_fn() (nerfstudio.fields.base_field.field method)": [[60, "nerfstudio.fields.base_field.Field.density_fn"]], "divide_factor (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[60, "nerfstudio.fields.sdf_field.SDFFieldConfig.divide_factor"]], "features_per_level (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[60, "nerfstudio.fields.sdf_field.SDFFieldConfig.features_per_level"]], "forward() (nerfstudio.fields.base_field.field method)": [[60, "nerfstudio.fields.base_field.Field.forward"]], "forward() (nerfstudio.fields.sdf_field.learnedvariance method)": [[60, "nerfstudio.fields.sdf_field.LearnedVariance.forward"]], "forward() (nerfstudio.fields.sdf_field.sdffield method)": [[60, "nerfstudio.fields.sdf_field.SDFField.forward"]], "forward() (nerfstudio.fields.tensorf_field.tensorffield method)": [[60, "nerfstudio.fields.tensorf_field.TensoRFField.forward"]], "forward_geonetwork() (nerfstudio.fields.sdf_field.sdffield method)": [[60, "nerfstudio.fields.sdf_field.SDFField.forward_geonetwork"]], "geo_feat_dim (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[60, "nerfstudio.fields.sdf_field.SDFFieldConfig.geo_feat_dim"]], "geometric_init (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[60, "nerfstudio.fields.sdf_field.SDFFieldConfig.geometric_init"]], "get_alpha() (nerfstudio.fields.sdf_field.sdffield method)": [[60, "nerfstudio.fields.sdf_field.SDFField.get_alpha"]], "get_colors() (nerfstudio.fields.sdf_field.sdffield method)": [[60, "nerfstudio.fields.sdf_field.SDFField.get_colors"]], "get_density() (nerfstudio.fields.base_field.field method)": [[60, "nerfstudio.fields.base_field.Field.get_density"]], "get_density() (nerfstudio.fields.density_fields.hashmlpdensityfield method)": [[60, "nerfstudio.fields.density_fields.HashMLPDensityField.get_density"]], "get_density() (nerfstudio.fields.nerfacto_field.nerfactofield method)": [[60, "nerfstudio.fields.nerfacto_field.NerfactoField.get_density"]], "get_density() (nerfstudio.fields.nerfw_field.vanillanerfwfield method)": [[60, "nerfstudio.fields.nerfw_field.VanillaNerfWField.get_density"]], "get_density() (nerfstudio.fields.sdf_field.sdffield method)": [[60, "nerfstudio.fields.sdf_field.SDFField.get_density"]], "get_density() (nerfstudio.fields.semantic_nerf_field.semanticnerffield method)": [[60, "nerfstudio.fields.semantic_nerf_field.SemanticNerfField.get_density"]], "get_density() (nerfstudio.fields.tensorf_field.tensorffield method)": [[60, "nerfstudio.fields.tensorf_field.TensoRFField.get_density"]], "get_density() (nerfstudio.fields.vanilla_nerf_field.nerffield method)": [[60, "nerfstudio.fields.vanilla_nerf_field.NeRFField.get_density"]], "get_normalized_directions() (in module nerfstudio.fields.base_field)": [[60, "nerfstudio.fields.base_field.get_normalized_directions"]], "get_normals() (nerfstudio.fields.base_field.field method)": [[60, "nerfstudio.fields.base_field.Field.get_normals"]], "get_outputs() (nerfstudio.fields.base_field.field method)": [[60, "nerfstudio.fields.base_field.Field.get_outputs"]], "get_outputs() (nerfstudio.fields.density_fields.hashmlpdensityfield method)": [[60, "nerfstudio.fields.density_fields.HashMLPDensityField.get_outputs"]], "get_outputs() (nerfstudio.fields.nerfacto_field.nerfactofield method)": [[60, "nerfstudio.fields.nerfacto_field.NerfactoField.get_outputs"]], "get_outputs() (nerfstudio.fields.nerfw_field.vanillanerfwfield method)": [[60, "nerfstudio.fields.nerfw_field.VanillaNerfWField.get_outputs"]], "get_outputs() (nerfstudio.fields.sdf_field.sdffield method)": [[60, "nerfstudio.fields.sdf_field.SDFField.get_outputs"]], "get_outputs() (nerfstudio.fields.semantic_nerf_field.semanticnerffield method)": [[60, "nerfstudio.fields.semantic_nerf_field.SemanticNerfField.get_outputs"]], "get_outputs() (nerfstudio.fields.tensorf_field.tensorffield method)": [[60, "nerfstudio.fields.tensorf_field.TensoRFField.get_outputs"]], "get_outputs() (nerfstudio.fields.vanilla_nerf_field.nerffield method)": [[60, "nerfstudio.fields.vanilla_nerf_field.NeRFField.get_outputs"]], "get_sdf() (nerfstudio.fields.sdf_field.sdffield method)": [[60, "nerfstudio.fields.sdf_field.SDFField.get_sdf"]], "get_variance() (nerfstudio.fields.sdf_field.learnedvariance method)": [[60, "nerfstudio.fields.sdf_field.LearnedVariance.get_variance"]], "hidden_dim (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[60, "nerfstudio.fields.sdf_field.SDFFieldConfig.hidden_dim"]], "hidden_dim_color (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[60, "nerfstudio.fields.sdf_field.SDFFieldConfig.hidden_dim_color"]], "initialize_geo_layers() (nerfstudio.fields.sdf_field.sdffield method)": [[60, "nerfstudio.fields.sdf_field.SDFField.initialize_geo_layers"]], "inside_outside (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[60, "nerfstudio.fields.sdf_field.SDFFieldConfig.inside_outside"]], "log2_hashmap_size (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[60, "nerfstudio.fields.sdf_field.SDFFieldConfig.log2_hashmap_size"]], "max_res (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[60, "nerfstudio.fields.sdf_field.SDFFieldConfig.max_res"]], "nerfstudio.fields.base_field": [[60, "module-nerfstudio.fields.base_field"]], "nerfstudio.fields.density_fields": [[60, "module-nerfstudio.fields.density_fields"]], "nerfstudio.fields.nerfacto_field": [[60, "module-nerfstudio.fields.nerfacto_field"]], "nerfstudio.fields.nerfw_field": [[60, "module-nerfstudio.fields.nerfw_field"]], "nerfstudio.fields.sdf_field": [[60, "module-nerfstudio.fields.sdf_field"]], "nerfstudio.fields.semantic_nerf_field": [[60, "module-nerfstudio.fields.semantic_nerf_field"]], "nerfstudio.fields.tensorf_field": [[60, "module-nerfstudio.fields.tensorf_field"]], "nerfstudio.fields.vanilla_nerf_field": [[60, "module-nerfstudio.fields.vanilla_nerf_field"]], "num_layers (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[60, "nerfstudio.fields.sdf_field.SDFFieldConfig.num_layers"]], "num_layers_color (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[60, "nerfstudio.fields.sdf_field.SDFFieldConfig.num_layers_color"]], "num_levels (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[60, "nerfstudio.fields.sdf_field.SDFFieldConfig.num_levels"]], "set_cos_anneal_ratio() (nerfstudio.fields.sdf_field.sdffield method)": [[60, "nerfstudio.fields.sdf_field.SDFField.set_cos_anneal_ratio"]], "smoothstep (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[60, "nerfstudio.fields.sdf_field.SDFFieldConfig.smoothstep"]], "use_appearance_embedding (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[60, "nerfstudio.fields.sdf_field.SDFFieldConfig.use_appearance_embedding"]], "use_grid_feature (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[60, "nerfstudio.fields.sdf_field.SDFFieldConfig.use_grid_feature"]], "use_hash (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[60, "nerfstudio.fields.sdf_field.SDFFieldConfig.use_hash"]], "weight_norm (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[60, "nerfstudio.fields.sdf_field.SDFFieldConfig.weight_norm"]], "depthlosstype (class in nerfstudio.model_components.losses)": [[63, "nerfstudio.model_components.losses.DepthLossType"]], "gradientloss (class in nerfstudio.model_components.losses)": [[63, "nerfstudio.model_components.losses.GradientLoss"]], "midasmseloss (class in nerfstudio.model_components.losses)": [[63, "nerfstudio.model_components.losses.MiDaSMSELoss"]], "scaleandshiftinvariantloss (class in nerfstudio.model_components.losses)": [[63, "nerfstudio.model_components.losses.ScaleAndShiftInvariantLoss"]], "depth_loss() (in module nerfstudio.model_components.losses)": [[63, "nerfstudio.model_components.losses.depth_loss"]], "depth_ranking_loss() (in module nerfstudio.model_components.losses)": [[63, "nerfstudio.model_components.losses.depth_ranking_loss"]], "distortion_loss() (in module nerfstudio.model_components.losses)": [[63, "nerfstudio.model_components.losses.distortion_loss"]], "ds_nerf_depth_loss() (in module nerfstudio.model_components.losses)": [[63, "nerfstudio.model_components.losses.ds_nerf_depth_loss"]], "forward() (nerfstudio.model_components.losses.gradientloss method)": [[63, "nerfstudio.model_components.losses.GradientLoss.forward"]], "forward() (nerfstudio.model_components.losses.midasmseloss method)": [[63, "nerfstudio.model_components.losses.MiDaSMSELoss.forward"]], "forward() (nerfstudio.model_components.losses.scaleandshiftinvariantloss method)": [[63, "nerfstudio.model_components.losses.ScaleAndShiftInvariantLoss.forward"]], "gradient_loss() (nerfstudio.model_components.losses.gradientloss method)": [[63, "nerfstudio.model_components.losses.GradientLoss.gradient_loss"]], "interlevel_loss() (in module nerfstudio.model_components.losses)": [[63, "nerfstudio.model_components.losses.interlevel_loss"]], "lossfun_distortion() (in module nerfstudio.model_components.losses)": [[63, "nerfstudio.model_components.losses.lossfun_distortion"]], "lossfun_outer() (in module nerfstudio.model_components.losses)": [[63, "nerfstudio.model_components.losses.lossfun_outer"]], "monosdf_normal_loss() (in module nerfstudio.model_components.losses)": [[63, "nerfstudio.model_components.losses.monosdf_normal_loss"]], "nerfstudio.model_components.losses": [[63, "module-nerfstudio.model_components.losses"]], "nerfstudio_distortion_loss() (in module nerfstudio.model_components.losses)": [[63, "nerfstudio.model_components.losses.nerfstudio_distortion_loss"]], "orientation_loss() (in module nerfstudio.model_components.losses)": [[63, "nerfstudio.model_components.losses.orientation_loss"]], "outer() (in module nerfstudio.model_components.losses)": [[63, "nerfstudio.model_components.losses.outer"]], "pred_normal_loss() (in module nerfstudio.model_components.losses)": [[63, "nerfstudio.model_components.losses.pred_normal_loss"]], "prediction_ssi (nerfstudio.model_components.losses.scaleandshiftinvariantloss property)": [[63, "nerfstudio.model_components.losses.ScaleAndShiftInvariantLoss.prediction_ssi"]], "ray_samples_to_sdist() (in module nerfstudio.model_components.losses)": [[63, "nerfstudio.model_components.losses.ray_samples_to_sdist"]], "scale_gradients_by_distance_squared() (in module nerfstudio.model_components.losses)": [[63, "nerfstudio.model_components.losses.scale_gradients_by_distance_squared"]], "tv_loss() (in module nerfstudio.model_components.losses)": [[63, "nerfstudio.model_components.losses.tv_loss"]], "urban_radiance_field_depth_loss() (in module nerfstudio.model_components.losses)": [[63, "nerfstudio.model_components.losses.urban_radiance_field_depth_loss"]], "densityfn (class in nerfstudio.model_components.ray_samplers)": [[64, "nerfstudio.model_components.ray_samplers.DensityFn"]], "lineardisparitysampler (class in nerfstudio.model_components.ray_samplers)": [[64, "nerfstudio.model_components.ray_samplers.LinearDisparitySampler"]], "logsampler (class in nerfstudio.model_components.ray_samplers)": [[64, "nerfstudio.model_components.ray_samplers.LogSampler"]], "neussampler (class in nerfstudio.model_components.ray_samplers)": [[64, "nerfstudio.model_components.ray_samplers.NeuSSampler"]], "pdfsampler (class in nerfstudio.model_components.ray_samplers)": [[64, "nerfstudio.model_components.ray_samplers.PDFSampler"]], "proposalnetworksampler (class in nerfstudio.model_components.ray_samplers)": [[64, "nerfstudio.model_components.ray_samplers.ProposalNetworkSampler"]], "sampler (class in nerfstudio.model_components.ray_samplers)": [[64, "nerfstudio.model_components.ray_samplers.Sampler"]], "spacedsampler (class in nerfstudio.model_components.ray_samplers)": [[64, "nerfstudio.model_components.ray_samplers.SpacedSampler"]], "sqrtsampler (class in nerfstudio.model_components.ray_samplers)": [[64, "nerfstudio.model_components.ray_samplers.SqrtSampler"]], "uniformlindisppiecewisesampler (class in nerfstudio.model_components.ray_samplers)": [[64, "nerfstudio.model_components.ray_samplers.UniformLinDispPiecewiseSampler"]], "uniformsampler (class in nerfstudio.model_components.ray_samplers)": [[64, "nerfstudio.model_components.ray_samplers.UniformSampler"]], "volumetricsampler (class in nerfstudio.model_components.ray_samplers)": [[64, "nerfstudio.model_components.ray_samplers.VolumetricSampler"]], "forward() (nerfstudio.model_components.ray_samplers.sampler method)": [[64, "nerfstudio.model_components.ray_samplers.Sampler.forward"]], "forward() (nerfstudio.model_components.ray_samplers.volumetricsampler method)": [[64, "nerfstudio.model_components.ray_samplers.VolumetricSampler.forward"]], "generate_ray_samples() (nerfstudio.model_components.ray_samplers.neussampler method)": [[64, "nerfstudio.model_components.ray_samplers.NeuSSampler.generate_ray_samples"]], "generate_ray_samples() (nerfstudio.model_components.ray_samplers.pdfsampler method)": [[64, "nerfstudio.model_components.ray_samplers.PDFSampler.generate_ray_samples"]], "generate_ray_samples() (nerfstudio.model_components.ray_samplers.proposalnetworksampler method)": [[64, "nerfstudio.model_components.ray_samplers.ProposalNetworkSampler.generate_ray_samples"]], "generate_ray_samples() (nerfstudio.model_components.ray_samplers.sampler method)": [[64, "nerfstudio.model_components.ray_samplers.Sampler.generate_ray_samples"]], "generate_ray_samples() (nerfstudio.model_components.ray_samplers.spacedsampler method)": [[64, "nerfstudio.model_components.ray_samplers.SpacedSampler.generate_ray_samples"]], "generate_ray_samples() (nerfstudio.model_components.ray_samplers.volumetricsampler method)": [[64, "nerfstudio.model_components.ray_samplers.VolumetricSampler.generate_ray_samples"]], "get_sigma_fn() (nerfstudio.model_components.ray_samplers.volumetricsampler method)": [[64, "nerfstudio.model_components.ray_samplers.VolumetricSampler.get_sigma_fn"]], "merge_ray_samples() (nerfstudio.model_components.ray_samplers.neussampler static method)": [[64, "nerfstudio.model_components.ray_samplers.NeuSSampler.merge_ray_samples"]], "nerfstudio.model_components.ray_samplers": [[64, "module-nerfstudio.model_components.ray_samplers"]], "rendering_sdf_with_fixed_inv_s() (nerfstudio.model_components.ray_samplers.neussampler static method)": [[64, "nerfstudio.model_components.ray_samplers.NeuSSampler.rendering_sdf_with_fixed_inv_s"]], "set_anneal() (nerfstudio.model_components.ray_samplers.proposalnetworksampler method)": [[64, "nerfstudio.model_components.ray_samplers.ProposalNetworkSampler.set_anneal"]], "step_cb() (nerfstudio.model_components.ray_samplers.proposalnetworksampler method)": [[64, "nerfstudio.model_components.ray_samplers.ProposalNetworkSampler.step_cb"]], "accumulationrenderer (class in nerfstudio.model_components.renderers)": [[65, "nerfstudio.model_components.renderers.AccumulationRenderer"]], "depthrenderer (class in nerfstudio.model_components.renderers)": [[65, "nerfstudio.model_components.renderers.DepthRenderer"]], "normalsrenderer (class in nerfstudio.model_components.renderers)": [[65, "nerfstudio.model_components.renderers.NormalsRenderer"]], "rgbrenderer (class in nerfstudio.model_components.renderers)": [[65, "nerfstudio.model_components.renderers.RGBRenderer"]], "shrenderer (class in nerfstudio.model_components.renderers)": [[65, "nerfstudio.model_components.renderers.SHRenderer"]], "semanticrenderer (class in nerfstudio.model_components.renderers)": [[65, "nerfstudio.model_components.renderers.SemanticRenderer"]], "uncertaintyrenderer (class in nerfstudio.model_components.renderers)": [[65, "nerfstudio.model_components.renderers.UncertaintyRenderer"]], "background_color_override_context() (in module nerfstudio.model_components.renderers)": [[65, "nerfstudio.model_components.renderers.background_color_override_context"]], "blend_background() (nerfstudio.model_components.renderers.rgbrenderer method)": [[65, "nerfstudio.model_components.renderers.RGBRenderer.blend_background"]], "blend_background_for_loss_computation() (nerfstudio.model_components.renderers.rgbrenderer method)": [[65, "nerfstudio.model_components.renderers.RGBRenderer.blend_background_for_loss_computation"]], "combine_rgb() (nerfstudio.model_components.renderers.rgbrenderer class method)": [[65, "nerfstudio.model_components.renderers.RGBRenderer.combine_rgb"]], "forward() (nerfstudio.model_components.renderers.accumulationrenderer class method)": [[65, "nerfstudio.model_components.renderers.AccumulationRenderer.forward"]], "forward() (nerfstudio.model_components.renderers.depthrenderer method)": [[65, "nerfstudio.model_components.renderers.DepthRenderer.forward"]], "forward() (nerfstudio.model_components.renderers.normalsrenderer class method)": [[65, "nerfstudio.model_components.renderers.NormalsRenderer.forward"]], "forward() (nerfstudio.model_components.renderers.rgbrenderer method)": [[65, "nerfstudio.model_components.renderers.RGBRenderer.forward"]], "forward() (nerfstudio.model_components.renderers.shrenderer method)": [[65, "nerfstudio.model_components.renderers.SHRenderer.forward"]], "forward() (nerfstudio.model_components.renderers.semanticrenderer class method)": [[65, "nerfstudio.model_components.renderers.SemanticRenderer.forward"]], "forward() (nerfstudio.model_components.renderers.uncertaintyrenderer class method)": [[65, "nerfstudio.model_components.renderers.UncertaintyRenderer.forward"]], "get_background_color() (nerfstudio.model_components.renderers.rgbrenderer class method)": [[65, "nerfstudio.model_components.renderers.RGBRenderer.get_background_color"]], "nerfstudio.model_components.renderers": [[65, "module-nerfstudio.model_components.renderers"]], "instantngpmodelconfig (class in nerfstudio.models.instant_ngp)": [[66, "nerfstudio.models.instant_ngp.InstantNGPModelConfig"]], "model (class in nerfstudio.models.base_model)": [[66, "nerfstudio.models.base_model.Model"]], "modelconfig (class in nerfstudio.models.base_model)": [[66, "nerfstudio.models.base_model.ModelConfig"]], "ngpmodel (class in nerfstudio.models.instant_ngp)": [[66, "nerfstudio.models.instant_ngp.NGPModel"]], "nerfmodel (class in nerfstudio.models.vanilla_nerf)": [[66, "nerfstudio.models.vanilla_nerf.NeRFModel"]], "semanticnerfwmodel (class in nerfstudio.models.semantic_nerfw)": [[66, "nerfstudio.models.semantic_nerfw.SemanticNerfWModel"]], "semanticnerfwmodelconfig (class in nerfstudio.models.semantic_nerfw)": [[66, "nerfstudio.models.semantic_nerfw.SemanticNerfWModelConfig"]], "vanillamodelconfig (class in nerfstudio.models.vanilla_nerf)": [[66, "nerfstudio.models.vanilla_nerf.VanillaModelConfig"]], "alpha_thre (nerfstudio.models.instant_ngp.instantngpmodelconfig attribute)": [[66, "nerfstudio.models.instant_ngp.InstantNGPModelConfig.alpha_thre"]], "background_color (nerfstudio.models.instant_ngp.instantngpmodelconfig attribute)": [[66, "nerfstudio.models.instant_ngp.InstantNGPModelConfig.background_color"]], "background_color (nerfstudio.models.vanilla_nerf.vanillamodelconfig attribute)": [[66, "nerfstudio.models.vanilla_nerf.VanillaModelConfig.background_color"]], "collider_params (nerfstudio.models.base_model.modelconfig attribute)": [[66, "nerfstudio.models.base_model.ModelConfig.collider_params"]], "collider_params (nerfstudio.models.instant_ngp.instantngpmodelconfig attribute)": [[66, "nerfstudio.models.instant_ngp.InstantNGPModelConfig.collider_params"]], "cone_angle (nerfstudio.models.instant_ngp.instantngpmodelconfig attribute)": [[66, "nerfstudio.models.instant_ngp.InstantNGPModelConfig.cone_angle"]], "device (nerfstudio.models.base_model.model property)": [[66, "nerfstudio.models.base_model.Model.device"]], "disable_scene_contraction (nerfstudio.models.instant_ngp.instantngpmodelconfig attribute)": [[66, "nerfstudio.models.instant_ngp.InstantNGPModelConfig.disable_scene_contraction"]], "enable_collider (nerfstudio.models.base_model.modelconfig attribute)": [[66, "nerfstudio.models.base_model.ModelConfig.enable_collider"]], "enable_collider (nerfstudio.models.instant_ngp.instantngpmodelconfig attribute)": [[66, "nerfstudio.models.instant_ngp.InstantNGPModelConfig.enable_collider"]], "enable_temporal_distortion (nerfstudio.models.vanilla_nerf.vanillamodelconfig attribute)": [[66, "nerfstudio.models.vanilla_nerf.VanillaModelConfig.enable_temporal_distortion"]], "eval_num_rays_per_chunk (nerfstudio.models.base_model.modelconfig attribute)": [[66, "nerfstudio.models.base_model.ModelConfig.eval_num_rays_per_chunk"]], "far_plane (nerfstudio.models.instant_ngp.instantngpmodelconfig attribute)": [[66, "nerfstudio.models.instant_ngp.InstantNGPModelConfig.far_plane"]], "forward() (nerfstudio.models.base_model.model method)": [[66, "nerfstudio.models.base_model.Model.forward"]], "get_image_metrics_and_images() (nerfstudio.models.base_model.model method)": [[66, "nerfstudio.models.base_model.Model.get_image_metrics_and_images"]], "get_image_metrics_and_images() (nerfstudio.models.instant_ngp.ngpmodel method)": [[66, "nerfstudio.models.instant_ngp.NGPModel.get_image_metrics_and_images"]], "get_image_metrics_and_images() (nerfstudio.models.semantic_nerfw.semanticnerfwmodel method)": [[66, "nerfstudio.models.semantic_nerfw.SemanticNerfWModel.get_image_metrics_and_images"]], "get_image_metrics_and_images() (nerfstudio.models.vanilla_nerf.nerfmodel method)": [[66, "nerfstudio.models.vanilla_nerf.NeRFModel.get_image_metrics_and_images"]], "get_loss_dict() (nerfstudio.models.base_model.model method)": [[66, "nerfstudio.models.base_model.Model.get_loss_dict"]], "get_loss_dict() (nerfstudio.models.instant_ngp.ngpmodel method)": [[66, "nerfstudio.models.instant_ngp.NGPModel.get_loss_dict"]], "get_loss_dict() (nerfstudio.models.semantic_nerfw.semanticnerfwmodel method)": [[66, "nerfstudio.models.semantic_nerfw.SemanticNerfWModel.get_loss_dict"]], "get_loss_dict() (nerfstudio.models.vanilla_nerf.nerfmodel method)": [[66, "nerfstudio.models.vanilla_nerf.NeRFModel.get_loss_dict"]], "get_metrics_dict() (nerfstudio.models.base_model.model method)": [[66, "nerfstudio.models.base_model.Model.get_metrics_dict"]], "get_metrics_dict() (nerfstudio.models.instant_ngp.ngpmodel method)": [[66, "nerfstudio.models.instant_ngp.NGPModel.get_metrics_dict"]], "get_metrics_dict() (nerfstudio.models.semantic_nerfw.semanticnerfwmodel method)": [[66, "nerfstudio.models.semantic_nerfw.SemanticNerfWModel.get_metrics_dict"]], "get_outputs() (nerfstudio.models.base_model.model method)": [[66, "nerfstudio.models.base_model.Model.get_outputs"]], "get_outputs() (nerfstudio.models.instant_ngp.ngpmodel method)": [[66, "nerfstudio.models.instant_ngp.NGPModel.get_outputs"]], "get_outputs() (nerfstudio.models.semantic_nerfw.semanticnerfwmodel method)": [[66, "nerfstudio.models.semantic_nerfw.SemanticNerfWModel.get_outputs"]], "get_outputs() (nerfstudio.models.vanilla_nerf.nerfmodel method)": [[66, "nerfstudio.models.vanilla_nerf.NeRFModel.get_outputs"]], "get_outputs_for_camera() (nerfstudio.models.base_model.model method)": [[66, "nerfstudio.models.base_model.Model.get_outputs_for_camera"]], "get_outputs_for_camera_ray_bundle() (nerfstudio.models.base_model.model method)": [[66, "nerfstudio.models.base_model.Model.get_outputs_for_camera_ray_bundle"]], "get_param_groups() (nerfstudio.models.base_model.model method)": [[66, "nerfstudio.models.base_model.Model.get_param_groups"]], "get_param_groups() (nerfstudio.models.instant_ngp.ngpmodel method)": [[66, "nerfstudio.models.instant_ngp.NGPModel.get_param_groups"]], "get_param_groups() (nerfstudio.models.semantic_nerfw.semanticnerfwmodel method)": [[66, "nerfstudio.models.semantic_nerfw.SemanticNerfWModel.get_param_groups"]], "get_param_groups() (nerfstudio.models.vanilla_nerf.nerfmodel method)": [[66, "nerfstudio.models.vanilla_nerf.NeRFModel.get_param_groups"]], "get_rgba_image() (nerfstudio.models.base_model.model method)": [[66, "nerfstudio.models.base_model.Model.get_rgba_image"]], "get_training_callbacks() (nerfstudio.models.base_model.model method)": [[66, "nerfstudio.models.base_model.Model.get_training_callbacks"]], "get_training_callbacks() (nerfstudio.models.instant_ngp.ngpmodel method)": [[66, "nerfstudio.models.instant_ngp.NGPModel.get_training_callbacks"]], "get_training_callbacks() (nerfstudio.models.semantic_nerfw.semanticnerfwmodel method)": [[66, "nerfstudio.models.semantic_nerfw.SemanticNerfWModel.get_training_callbacks"]], "grid_levels (nerfstudio.models.instant_ngp.instantngpmodelconfig attribute)": [[66, "nerfstudio.models.instant_ngp.InstantNGPModelConfig.grid_levels"]], "grid_resolution (nerfstudio.models.instant_ngp.instantngpmodelconfig attribute)": [[66, "nerfstudio.models.instant_ngp.InstantNGPModelConfig.grid_resolution"]], "load_model() (nerfstudio.models.base_model.model method)": [[66, "nerfstudio.models.base_model.Model.load_model"]], "log2_hashmap_size (nerfstudio.models.instant_ngp.instantngpmodelconfig attribute)": [[66, "nerfstudio.models.instant_ngp.InstantNGPModelConfig.log2_hashmap_size"]], "loss_coefficients (nerfstudio.models.base_model.modelconfig attribute)": [[66, "nerfstudio.models.base_model.ModelConfig.loss_coefficients"]], "max_res (nerfstudio.models.instant_ngp.instantngpmodelconfig attribute)": [[66, "nerfstudio.models.instant_ngp.InstantNGPModelConfig.max_res"]], "near_plane (nerfstudio.models.instant_ngp.instantngpmodelconfig attribute)": [[66, "nerfstudio.models.instant_ngp.InstantNGPModelConfig.near_plane"]], "nerfstudio.models.base_model": [[66, "module-nerfstudio.models.base_model"]], "nerfstudio.models.instant_ngp": [[66, "module-nerfstudio.models.instant_ngp"]], "nerfstudio.models.semantic_nerfw": [[66, "module-nerfstudio.models.semantic_nerfw"]], "nerfstudio.models.vanilla_nerf": [[66, "module-nerfstudio.models.vanilla_nerf"]], "num_coarse_samples (nerfstudio.models.vanilla_nerf.vanillamodelconfig attribute)": [[66, "nerfstudio.models.vanilla_nerf.VanillaModelConfig.num_coarse_samples"]], "num_importance_samples (nerfstudio.models.vanilla_nerf.vanillamodelconfig attribute)": [[66, "nerfstudio.models.vanilla_nerf.VanillaModelConfig.num_importance_samples"]], "populate_modules() (nerfstudio.models.base_model.model method)": [[66, "nerfstudio.models.base_model.Model.populate_modules"]], "populate_modules() (nerfstudio.models.instant_ngp.ngpmodel method)": [[66, "nerfstudio.models.instant_ngp.NGPModel.populate_modules"]], "populate_modules() (nerfstudio.models.semantic_nerfw.semanticnerfwmodel method)": [[66, "nerfstudio.models.semantic_nerfw.SemanticNerfWModel.populate_modules"]], "populate_modules() (nerfstudio.models.vanilla_nerf.nerfmodel method)": [[66, "nerfstudio.models.vanilla_nerf.NeRFModel.populate_modules"]], "prompt (nerfstudio.models.base_model.modelconfig attribute)": [[66, "nerfstudio.models.base_model.ModelConfig.prompt"]], "render_step_size (nerfstudio.models.instant_ngp.instantngpmodelconfig attribute)": [[66, "nerfstudio.models.instant_ngp.InstantNGPModelConfig.render_step_size"]], "temporal_distortion_params (nerfstudio.models.vanilla_nerf.vanillamodelconfig attribute)": [[66, "nerfstudio.models.vanilla_nerf.VanillaModelConfig.temporal_distortion_params"]], "update_to_step() (nerfstudio.models.base_model.model method)": [[66, "nerfstudio.models.base_model.Model.update_to_step"]], "use_appearance_embedding (nerfstudio.models.instant_ngp.instantngpmodelconfig attribute)": [[66, "nerfstudio.models.instant_ngp.InstantNGPModelConfig.use_appearance_embedding"]], "use_gradient_scaling (nerfstudio.models.instant_ngp.instantngpmodelconfig attribute)": [[66, "nerfstudio.models.instant_ngp.InstantNGPModelConfig.use_gradient_scaling"]], "use_gradient_scaling (nerfstudio.models.vanilla_nerf.vanillamodelconfig attribute)": [[66, "nerfstudio.models.vanilla_nerf.VanillaModelConfig.use_gradient_scaling"]], "use_transient_embedding (nerfstudio.models.semantic_nerfw.semanticnerfwmodelconfig attribute)": [[66, "nerfstudio.models.semantic_nerfw.SemanticNerfWModelConfig.use_transient_embedding"]], "adamoptimizerconfig (class in nerfstudio.engine.optimizers)": [[67, "nerfstudio.engine.optimizers.AdamOptimizerConfig"]], "cosinedecayscheduler (class in nerfstudio.engine.schedulers)": [[67, "nerfstudio.engine.schedulers.CosineDecayScheduler"]], "cosinedecayschedulerconfig (class in nerfstudio.engine.schedulers)": [[67, "nerfstudio.engine.schedulers.CosineDecaySchedulerConfig"]], "exponentialdecayscheduler (class in nerfstudio.engine.schedulers)": [[67, "nerfstudio.engine.schedulers.ExponentialDecayScheduler"]], "exponentialdecayschedulerconfig (class in nerfstudio.engine.schedulers)": [[67, "nerfstudio.engine.schedulers.ExponentialDecaySchedulerConfig"]], "multistepscheduler (class in nerfstudio.engine.schedulers)": [[67, "nerfstudio.engine.schedulers.MultiStepScheduler"]], "multistepschedulerconfig (class in nerfstudio.engine.schedulers)": [[67, "nerfstudio.engine.schedulers.MultiStepSchedulerConfig"]], "optimizerconfig (class in nerfstudio.engine.optimizers)": [[67, "nerfstudio.engine.optimizers.OptimizerConfig"]], "optimizers (class in nerfstudio.engine.optimizers)": [[67, "nerfstudio.engine.optimizers.Optimizers"]], "radamoptimizerconfig (class in nerfstudio.engine.optimizers)": [[67, "nerfstudio.engine.optimizers.RAdamOptimizerConfig"]], "scheduler (class in nerfstudio.engine.schedulers)": [[67, "nerfstudio.engine.schedulers.Scheduler"]], "schedulerconfig (class in nerfstudio.engine.schedulers)": [[67, "nerfstudio.engine.schedulers.SchedulerConfig"]], "trainer (class in nerfstudio.engine.trainer)": [[67, "nerfstudio.engine.trainer.Trainer"]], "trainerconfig (class in nerfstudio.engine.trainer)": [[67, "nerfstudio.engine.trainer.TrainerConfig"]], "trainingcallback (class in nerfstudio.engine.callbacks)": [[67, "nerfstudio.engine.callbacks.TrainingCallback"]], "trainingcallbackattributes (class in nerfstudio.engine.callbacks)": [[67, "nerfstudio.engine.callbacks.TrainingCallbackAttributes"]], "trainingcallbacklocation (class in nerfstudio.engine.callbacks)": [[67, "nerfstudio.engine.callbacks.TrainingCallbackLocation"]], "callbacks (nerfstudio.engine.trainer.trainer attribute)": [[67, "nerfstudio.engine.trainer.Trainer.callbacks"]], "config (nerfstudio.engine.trainer.trainer attribute)": [[67, "nerfstudio.engine.trainer.Trainer.config"]], "device (nerfstudio.engine.trainer.trainer attribute)": [[67, "nerfstudio.engine.trainer.Trainer.device"]], "eps (nerfstudio.engine.optimizers.optimizerconfig attribute)": [[67, "nerfstudio.engine.optimizers.OptimizerConfig.eps"]], "gamma (nerfstudio.engine.schedulers.multistepschedulerconfig attribute)": [[67, "nerfstudio.engine.schedulers.MultiStepSchedulerConfig.gamma"]], "get_scheduler() (nerfstudio.engine.schedulers.cosinedecayscheduler method)": [[67, "nerfstudio.engine.schedulers.CosineDecayScheduler.get_scheduler"]], "get_scheduler() (nerfstudio.engine.schedulers.exponentialdecayscheduler method)": [[67, "nerfstudio.engine.schedulers.ExponentialDecayScheduler.get_scheduler"]], "get_scheduler() (nerfstudio.engine.schedulers.multistepscheduler method)": [[67, "nerfstudio.engine.schedulers.MultiStepScheduler.get_scheduler"]], "get_scheduler() (nerfstudio.engine.schedulers.scheduler method)": [[67, "nerfstudio.engine.schedulers.Scheduler.get_scheduler"]], "grad_scaler (nerfstudio.engine.callbacks.trainingcallbackattributes attribute)": [[67, "nerfstudio.engine.callbacks.TrainingCallbackAttributes.grad_scaler"]], "gradient_accumulation_steps (nerfstudio.engine.trainer.trainerconfig attribute)": [[67, "nerfstudio.engine.trainer.TrainerConfig.gradient_accumulation_steps"]], "learning_rate_alpha (nerfstudio.engine.schedulers.cosinedecayschedulerconfig attribute)": [[67, "nerfstudio.engine.schedulers.CosineDecaySchedulerConfig.learning_rate_alpha"]], "load_checkpoint (nerfstudio.engine.trainer.trainerconfig attribute)": [[67, "nerfstudio.engine.trainer.TrainerConfig.load_checkpoint"]], "load_config (nerfstudio.engine.trainer.trainerconfig attribute)": [[67, "nerfstudio.engine.trainer.TrainerConfig.load_config"]], "load_dir (nerfstudio.engine.trainer.trainerconfig attribute)": [[67, "nerfstudio.engine.trainer.TrainerConfig.load_dir"]], "load_optimizers() (nerfstudio.engine.optimizers.optimizers method)": [[67, "nerfstudio.engine.optimizers.Optimizers.load_optimizers"]], "load_schedulers() (nerfstudio.engine.optimizers.optimizers method)": [[67, "nerfstudio.engine.optimizers.Optimizers.load_schedulers"]], "load_step (nerfstudio.engine.trainer.trainerconfig attribute)": [[67, "nerfstudio.engine.trainer.TrainerConfig.load_step"]], "local_rank (nerfstudio.engine.trainer.trainer attribute)": [[67, "nerfstudio.engine.trainer.Trainer.local_rank"]], "log_gradients (nerfstudio.engine.trainer.trainerconfig attribute)": [[67, "nerfstudio.engine.trainer.TrainerConfig.log_gradients"]], "lr (nerfstudio.engine.optimizers.optimizerconfig attribute)": [[67, "nerfstudio.engine.optimizers.OptimizerConfig.lr"]], "lr_final (nerfstudio.engine.schedulers.exponentialdecayschedulerconfig attribute)": [[67, "nerfstudio.engine.schedulers.ExponentialDecaySchedulerConfig.lr_final"]], "lr_pre_warmup (nerfstudio.engine.schedulers.exponentialdecayschedulerconfig attribute)": [[67, "nerfstudio.engine.schedulers.ExponentialDecaySchedulerConfig.lr_pre_warmup"]], "max_norm (nerfstudio.engine.optimizers.optimizerconfig attribute)": [[67, "nerfstudio.engine.optimizers.OptimizerConfig.max_norm"]], "max_num_iterations (nerfstudio.engine.trainer.trainerconfig attribute)": [[67, "nerfstudio.engine.trainer.TrainerConfig.max_num_iterations"]], "max_steps (nerfstudio.engine.schedulers.cosinedecayschedulerconfig attribute)": [[67, "nerfstudio.engine.schedulers.CosineDecaySchedulerConfig.max_steps"]], "max_steps (nerfstudio.engine.schedulers.exponentialdecayschedulerconfig attribute)": [[67, "nerfstudio.engine.schedulers.ExponentialDecaySchedulerConfig.max_steps"]], "max_steps (nerfstudio.engine.schedulers.multistepschedulerconfig attribute)": [[67, "nerfstudio.engine.schedulers.MultiStepSchedulerConfig.max_steps"]], "milestones (nerfstudio.engine.schedulers.multistepschedulerconfig attribute)": [[67, "nerfstudio.engine.schedulers.MultiStepSchedulerConfig.milestones"]], "mixed_precision (nerfstudio.engine.trainer.trainerconfig attribute)": [[67, "nerfstudio.engine.trainer.TrainerConfig.mixed_precision"]], "nerfstudio.engine.callbacks": [[67, "module-nerfstudio.engine.callbacks"]], "nerfstudio.engine.optimizers": [[67, "module-nerfstudio.engine.optimizers"]], "nerfstudio.engine.schedulers": [[67, "module-nerfstudio.engine.schedulers"]], "nerfstudio.engine.trainer": [[67, "module-nerfstudio.engine.trainer"]], "optimizer_scaler_step_all() (nerfstudio.engine.optimizers.optimizers method)": [[67, "nerfstudio.engine.optimizers.Optimizers.optimizer_scaler_step_all"]], "optimizer_scaler_step_some() (nerfstudio.engine.optimizers.optimizers method)": [[67, "nerfstudio.engine.optimizers.Optimizers.optimizer_scaler_step_some"]], "optimizer_step() (nerfstudio.engine.optimizers.optimizers method)": [[67, "nerfstudio.engine.optimizers.Optimizers.optimizer_step"]], "optimizer_step_all() (nerfstudio.engine.optimizers.optimizers method)": [[67, "nerfstudio.engine.optimizers.Optimizers.optimizer_step_all"]], "optimizers (nerfstudio.engine.callbacks.trainingcallbackattributes attribute)": [[67, "nerfstudio.engine.callbacks.TrainingCallbackAttributes.optimizers"]], "optimizers (nerfstudio.engine.trainer.trainer attribute)": [[67, "nerfstudio.engine.trainer.Trainer.optimizers"]], "pipeline (nerfstudio.engine.callbacks.trainingcallbackattributes attribute)": [[67, "nerfstudio.engine.callbacks.TrainingCallbackAttributes.pipeline"]], "pipeline (nerfstudio.engine.trainer.trainer attribute)": [[67, "nerfstudio.engine.trainer.Trainer.pipeline"]], "ramp (nerfstudio.engine.schedulers.exponentialdecayschedulerconfig attribute)": [[67, "nerfstudio.engine.schedulers.ExponentialDecaySchedulerConfig.ramp"]], "run_callback() (nerfstudio.engine.callbacks.trainingcallback method)": [[67, "nerfstudio.engine.callbacks.TrainingCallback.run_callback"]], "run_callback_at_location() (nerfstudio.engine.callbacks.trainingcallback method)": [[67, "nerfstudio.engine.callbacks.TrainingCallback.run_callback_at_location"]], "save_only_latest_checkpoint (nerfstudio.engine.trainer.trainerconfig attribute)": [[67, "nerfstudio.engine.trainer.TrainerConfig.save_only_latest_checkpoint"]], "scheduler_step() (nerfstudio.engine.optimizers.optimizers method)": [[67, "nerfstudio.engine.optimizers.Optimizers.scheduler_step"]], "scheduler_step_all() (nerfstudio.engine.optimizers.optimizers method)": [[67, "nerfstudio.engine.optimizers.Optimizers.scheduler_step_all"]], "setup() (nerfstudio.engine.optimizers.optimizerconfig method)": [[67, "nerfstudio.engine.optimizers.OptimizerConfig.setup"]], "setup() (nerfstudio.engine.trainer.trainer method)": [[67, "nerfstudio.engine.trainer.Trainer.setup"]], "setup_optimizers() (nerfstudio.engine.trainer.trainer method)": [[67, "nerfstudio.engine.trainer.Trainer.setup_optimizers"]], "steps_per_eval_all_images (nerfstudio.engine.trainer.trainerconfig attribute)": [[67, "nerfstudio.engine.trainer.TrainerConfig.steps_per_eval_all_images"]], "steps_per_eval_batch (nerfstudio.engine.trainer.trainerconfig attribute)": [[67, "nerfstudio.engine.trainer.TrainerConfig.steps_per_eval_batch"]], "steps_per_eval_image (nerfstudio.engine.trainer.trainerconfig attribute)": [[67, "nerfstudio.engine.trainer.TrainerConfig.steps_per_eval_image"]], "steps_per_save (nerfstudio.engine.trainer.trainerconfig attribute)": [[67, "nerfstudio.engine.trainer.TrainerConfig.steps_per_save"]], "train() (nerfstudio.engine.trainer.trainer method)": [[67, "nerfstudio.engine.trainer.Trainer.train"]], "train_iteration() (nerfstudio.engine.trainer.trainer method)": [[67, "nerfstudio.engine.trainer.Trainer.train_iteration"]], "training_state (nerfstudio.engine.trainer.trainer attribute)": [[67, "nerfstudio.engine.trainer.Trainer.training_state"]], "use_grad_scaler (nerfstudio.engine.trainer.trainerconfig attribute)": [[67, "nerfstudio.engine.trainer.TrainerConfig.use_grad_scaler"]], "warm_up_end (nerfstudio.engine.schedulers.cosinedecayschedulerconfig attribute)": [[67, "nerfstudio.engine.schedulers.CosineDecaySchedulerConfig.warm_up_end"]], "warmup_steps (nerfstudio.engine.schedulers.exponentialdecayschedulerconfig attribute)": [[67, "nerfstudio.engine.schedulers.ExponentialDecaySchedulerConfig.warmup_steps"]], "weight_decay (nerfstudio.engine.optimizers.adamoptimizerconfig attribute)": [[67, "nerfstudio.engine.optimizers.AdamOptimizerConfig.weight_decay"]], "weight_decay (nerfstudio.engine.optimizers.radamoptimizerconfig attribute)": [[67, "nerfstudio.engine.optimizers.RAdamOptimizerConfig.weight_decay"]], "world_size (nerfstudio.engine.trainer.trainer attribute)": [[67, "nerfstudio.engine.trainer.Trainer.world_size"]], "zero_grad_all() (nerfstudio.engine.optimizers.optimizers method)": [[67, "nerfstudio.engine.optimizers.Optimizers.zero_grad_all"]], "zero_grad_some() (nerfstudio.engine.optimizers.optimizers method)": [[67, "nerfstudio.engine.optimizers.Optimizers.zero_grad_some"]], "dataparserspecification (class in nerfstudio.plugins.registry_dataparser)": [[68, "nerfstudio.plugins.registry_dataparser.DataParserSpecification"]], "methodspecification (class in nerfstudio.plugins.types)": [[68, "nerfstudio.plugins.types.MethodSpecification"]], "config (nerfstudio.plugins.registry_dataparser.dataparserspecification attribute)": [[68, "nerfstudio.plugins.registry_dataparser.DataParserSpecification.config"]], "config (nerfstudio.plugins.types.methodspecification attribute)": [[68, "nerfstudio.plugins.types.MethodSpecification.config"]], "description (nerfstudio.plugins.registry_dataparser.dataparserspecification attribute)": [[68, "nerfstudio.plugins.registry_dataparser.DataParserSpecification.description"]], "description (nerfstudio.plugins.types.methodspecification attribute)": [[68, "nerfstudio.plugins.types.MethodSpecification.description"]], "discover_dataparsers() (in module nerfstudio.plugins.registry_dataparser)": [[68, "nerfstudio.plugins.registry_dataparser.discover_dataparsers"]], "discover_methods() (in module nerfstudio.plugins.registry)": [[68, "nerfstudio.plugins.registry.discover_methods"]], "nerfstudio.plugins.registry": [[68, "module-nerfstudio.plugins.registry"]], "nerfstudio.plugins.registry_dataparser": [[68, "module-nerfstudio.plugins.registry_dataparser"]], "nerfstudio.plugins.types": [[68, "module-nerfstudio.plugins.types"]], "colormapoptions (class in nerfstudio.utils.colormaps)": [[69, "nerfstudio.utils.colormaps.ColormapOptions"]], "apply_boolean_colormap() (in module nerfstudio.utils.colormaps)": [[69, "nerfstudio.utils.colormaps.apply_boolean_colormap"]], "apply_colormap() (in module nerfstudio.utils.colormaps)": [[69, "nerfstudio.utils.colormaps.apply_colormap"]], "apply_depth_colormap() (in module nerfstudio.utils.colormaps)": [[69, "nerfstudio.utils.colormaps.apply_depth_colormap"]], "apply_float_colormap() (in module nerfstudio.utils.colormaps)": [[69, "nerfstudio.utils.colormaps.apply_float_colormap"]], "apply_pca_colormap() (in module nerfstudio.utils.colormaps)": [[69, "nerfstudio.utils.colormaps.apply_pca_colormap"]], "colormap (nerfstudio.utils.colormaps.colormapoptions attribute)": [[69, "nerfstudio.utils.colormaps.ColormapOptions.colormap"]], "colormap_max (nerfstudio.utils.colormaps.colormapoptions attribute)": [[69, "nerfstudio.utils.colormaps.ColormapOptions.colormap_max"]], "colormap_min (nerfstudio.utils.colormaps.colormapoptions attribute)": [[69, "nerfstudio.utils.colormaps.ColormapOptions.colormap_min"]], "invert (nerfstudio.utils.colormaps.colormapoptions attribute)": [[69, "nerfstudio.utils.colormaps.ColormapOptions.invert"]], "nerfstudio.utils.colormaps": [[69, "module-nerfstudio.utils.colormaps"]], "normalize (nerfstudio.utils.colormaps.colormapoptions attribute)": [[69, "nerfstudio.utils.colormaps.ColormapOptions.normalize"]], "get_color() (in module nerfstudio.utils.colors)": [[70, "nerfstudio.utils.colors.get_color"]], "nerfstudio.utils.colors": [[70, "module-nerfstudio.utils.colors"]], "gaussians (class in nerfstudio.utils.math)": [[72, "nerfstudio.utils.math.Gaussians"]], "columnwise_squared_l2_distance() (in module nerfstudio.utils.math)": [[72, "nerfstudio.utils.math.columnwise_squared_l2_distance"]], "components_from_spherical_harmonics() (in module nerfstudio.utils.math)": [[72, "nerfstudio.utils.math.components_from_spherical_harmonics"]], "compute_3d_gaussian() (in module nerfstudio.utils.math)": [[72, "nerfstudio.utils.math.compute_3d_gaussian"]], "conical_frustum_to_gaussian() (in module nerfstudio.utils.math)": [[72, "nerfstudio.utils.math.conical_frustum_to_gaussian"]], "cylinder_to_gaussian() (in module nerfstudio.utils.math)": [[72, "nerfstudio.utils.math.cylinder_to_gaussian"]], "expected_sin() (in module nerfstudio.utils.math)": [[72, "nerfstudio.utils.math.expected_sin"]], "generate_polyhedron_basis() (in module nerfstudio.utils.math)": [[72, "nerfstudio.utils.math.generate_polyhedron_basis"]], "intersect_aabb() (in module nerfstudio.utils.math)": [[72, "nerfstudio.utils.math.intersect_aabb"]], "intersect_obb() (in module nerfstudio.utils.math)": [[72, "nerfstudio.utils.math.intersect_obb"]], "masked_reduction() (in module nerfstudio.utils.math)": [[72, "nerfstudio.utils.math.masked_reduction"]], "nerfstudio.utils.math": [[72, "module-nerfstudio.utils.math"]], "normalized_depth_scale_and_shift() (in module nerfstudio.utils.math)": [[72, "nerfstudio.utils.math.normalized_depth_scale_and_shift"]], "safe_normalize() (in module nerfstudio.utils.math)": [[72, "nerfstudio.utils.math.safe_normalize"]], "tensordataclass (class in nerfstudio.utils.tensor_dataclass)": [[73, "nerfstudio.utils.tensor_dataclass.TensorDataclass"]], "__post_init__() (nerfstudio.utils.tensor_dataclass.tensordataclass method)": [[73, "nerfstudio.utils.tensor_dataclass.TensorDataclass.__post_init__"]], "broadcast_to() (nerfstudio.utils.tensor_dataclass.tensordataclass method)": [[73, "nerfstudio.utils.tensor_dataclass.TensorDataclass.broadcast_to"]], "flatten() (nerfstudio.utils.tensor_dataclass.tensordataclass method)": [[73, "nerfstudio.utils.tensor_dataclass.TensorDataclass.flatten"]], "ndim (nerfstudio.utils.tensor_dataclass.tensordataclass property)": [[73, "nerfstudio.utils.tensor_dataclass.TensorDataclass.ndim"]], "nerfstudio.utils.tensor_dataclass": [[73, "module-nerfstudio.utils.tensor_dataclass"]], "pin_memory() (nerfstudio.utils.tensor_dataclass.tensordataclass method)": [[73, "nerfstudio.utils.tensor_dataclass.TensorDataclass.pin_memory"]], "reshape() (nerfstudio.utils.tensor_dataclass.tensordataclass method)": [[73, "nerfstudio.utils.tensor_dataclass.TensorDataclass.reshape"]], "shape (nerfstudio.utils.tensor_dataclass.tensordataclass property)": [[73, "nerfstudio.utils.tensor_dataclass.TensorDataclass.shape"]], "size (nerfstudio.utils.tensor_dataclass.tensordataclass property)": [[73, "nerfstudio.utils.tensor_dataclass.TensorDataclass.size"]], "to() (nerfstudio.utils.tensor_dataclass.tensordataclass method)": [[73, "nerfstudio.utils.tensor_dataclass.TensorDataclass.to"]], "viewerbutton (class in nerfstudio.viewer.viewer_elements)": [[74, "nerfstudio.viewer.viewer_elements.ViewerButton"]], "viewerbuttongroup (class in nerfstudio.viewer.viewer_elements)": [[74, "nerfstudio.viewer.viewer_elements.ViewerButtonGroup"]], "viewercheckbox (class in nerfstudio.viewer.viewer_elements)": [[74, "nerfstudio.viewer.viewer_elements.ViewerCheckbox"]], "viewerclick (class in nerfstudio.viewer.viewer_elements)": [[74, "nerfstudio.viewer.viewer_elements.ViewerClick"]], "viewercontrol (class in nerfstudio.viewer.viewer_elements)": [[74, "nerfstudio.viewer.viewer_elements.ViewerControl"]], "viewerdropdown (class in nerfstudio.viewer.viewer_elements)": [[74, "nerfstudio.viewer.viewer_elements.ViewerDropdown"]], "viewerelement (class in nerfstudio.viewer.viewer_elements)": [[74, "nerfstudio.viewer.viewer_elements.ViewerElement"]], "viewernumber (class in nerfstudio.viewer.viewer_elements)": [[74, "nerfstudio.viewer.viewer_elements.ViewerNumber"]], "viewerparameter (class in nerfstudio.viewer.viewer_elements)": [[74, "nerfstudio.viewer.viewer_elements.ViewerParameter"]], "viewerrgb (class in nerfstudio.viewer.viewer_elements)": [[74, "nerfstudio.viewer.viewer_elements.ViewerRGB"]], "viewerslider (class in nerfstudio.viewer.viewer_elements)": [[74, "nerfstudio.viewer.viewer_elements.ViewerSlider"]], "viewertext (class in nerfstudio.viewer.viewer_elements)": [[74, "nerfstudio.viewer.viewer_elements.ViewerText"]], "viewervec3 (class in nerfstudio.viewer.viewer_elements)": [[74, "nerfstudio.viewer.viewer_elements.ViewerVec3"]], "direction (nerfstudio.viewer.viewer_elements.viewerclick attribute)": [[74, "nerfstudio.viewer.viewer_elements.ViewerClick.direction"]], "get_camera() (nerfstudio.viewer.viewer_elements.viewercontrol method)": [[74, "nerfstudio.viewer.viewer_elements.ViewerControl.get_camera"]], "install() (nerfstudio.viewer.viewer_elements.viewerbutton method)": [[74, "nerfstudio.viewer.viewer_elements.ViewerButton.install"]], "install() (nerfstudio.viewer.viewer_elements.viewerbuttongroup method)": [[74, "nerfstudio.viewer.viewer_elements.ViewerButtonGroup.install"]], "install() (nerfstudio.viewer.viewer_elements.viewerelement method)": [[74, "nerfstudio.viewer.viewer_elements.ViewerElement.install"]], "install() (nerfstudio.viewer.viewer_elements.viewerparameter method)": [[74, "nerfstudio.viewer.viewer_elements.ViewerParameter.install"]], "nerfstudio.viewer.viewer_elements": [[74, "module-nerfstudio.viewer.viewer_elements"]], "origin (nerfstudio.viewer.viewer_elements.viewerclick attribute)": [[74, "nerfstudio.viewer.viewer_elements.ViewerClick.origin"]], "register_click_cb() (nerfstudio.viewer.viewer_elements.viewercontrol method)": [[74, "nerfstudio.viewer.viewer_elements.ViewerControl.register_click_cb"]], "remove() (nerfstudio.viewer.viewer_elements.viewerelement method)": [[74, "nerfstudio.viewer.viewer_elements.ViewerElement.remove"]], "set_crop() (nerfstudio.viewer.viewer_elements.viewercontrol method)": [[74, "nerfstudio.viewer.viewer_elements.ViewerControl.set_crop"]], "set_disabled() (nerfstudio.viewer.viewer_elements.viewerelement method)": [[74, "nerfstudio.viewer.viewer_elements.ViewerElement.set_disabled"]], "set_fov() (nerfstudio.viewer.viewer_elements.viewercontrol method)": [[74, "nerfstudio.viewer.viewer_elements.ViewerControl.set_fov"]], "set_hidden() (nerfstudio.viewer.viewer_elements.viewerelement method)": [[74, "nerfstudio.viewer.viewer_elements.ViewerElement.set_hidden"]], "set_options() (nerfstudio.viewer.viewer_elements.viewerdropdown method)": [[74, "nerfstudio.viewer.viewer_elements.ViewerDropdown.set_options"]], "set_pose() (nerfstudio.viewer.viewer_elements.viewercontrol method)": [[74, "nerfstudio.viewer.viewer_elements.ViewerControl.set_pose"]], "set_visible() (nerfstudio.viewer.viewer_elements.viewerelement method)": [[74, "nerfstudio.viewer.viewer_elements.ViewerElement.set_visible"]], "unregister_click_cb() (nerfstudio.viewer.viewer_elements.viewercontrol method)": [[74, "nerfstudio.viewer.viewer_elements.ViewerControl.unregister_click_cb"]], "value (nerfstudio.viewer.viewer_elements.viewerparameter property)": [[74, "nerfstudio.viewer.viewer_elements.ViewerParameter.value"]]}})